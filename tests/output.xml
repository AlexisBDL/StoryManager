<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200708 16:57:29.822" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.847" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.859" level="INFO">${stdout} = Story test created
ID : ehin6t1o6ko3gdhp6kp5mgb12op3klan</msg>
<status status="PASS" endtime="20200708 16:57:29.859" starttime="20200708 16:57:29.847"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:57:29.859" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200708 16:57:29.859" starttime="20200708 16:57:29.859"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.859" level="INFO">${id} = ID : ehin6t1o6ko3gdhp6kp5mgb12op3klan</msg>
<status status="PASS" endtime="20200708 16:57:29.859" starttime="20200708 16:57:29.859"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.860" level="INFO">${id} = ehin6t1o6ko3gdhp6kp5mgb12op3klan</msg>
<status status="PASS" endtime="20200708 16:57:29.860" starttime="20200708 16:57:29.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.860" starttime="20200708 16:57:29.860"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.861" level="INFO">Running command './StoryManager story show ehin6t1o6ko3gdhp6kp5mgb12op3klan 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.865" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-07-08T14:57:29Z",
    message: "Create new story test with ID ehin6t1o6ko3gdhp6kp5mgb12op3klan",
  },
  parent...</msg>
<status status="PASS" endtime="20200708 16:57:29.865" starttime="20200708 16:57:29.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.865" starttime="20200708 16:57:29.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.866" starttime="20200708 16:57:29.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.866" starttime="20200708 16:57:29.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.866" starttime="20200708 16:57:29.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.867" starttime="20200708 16:57:29.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.867" starttime="20200708 16:57:29.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.867" starttime="20200708 16:57:29.867"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.868" critical="yes" starttime="20200708 16:57:29.846"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.868" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.875" level="INFO">${stdout} = Story test created
ID : ehin6t1o6sp34dpm6koi21o69cn2sh99</msg>
<status status="PASS" endtime="20200708 16:57:29.875" starttime="20200708 16:57:29.868"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.875" level="INFO">${id} = ID : ehin6t1o6sp34dpm6koi21o69cn2sh99</msg>
<status status="PASS" endtime="20200708 16:57:29.875" starttime="20200708 16:57:29.875"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.875" level="INFO">${id} = ehin6t1o6sp34dpm6koi21o69cn2sh99</msg>
<status status="PASS" endtime="20200708 16:57:29.875" starttime="20200708 16:57:29.875"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 16:57:29.876" level="INFO">Running command './StoryManager story show ehin6t1o6sp34dpm6koi21o69cn2sh99.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.880" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200708 16:57:29.880" starttime="20200708 16:57:29.875"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.881" starttime="20200708 16:57:29.880"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.881" level="INFO">Running command './StoryManager story edit ehin6t1o6sp34dpm6koi21o69cn2sh99 -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.888" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1o6sp34dpm6koi21o69cn2sh99</msg>
<status status="PASS" endtime="20200708 16:57:29.888" starttime="20200708 16:57:29.881"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 16:57:29.889" level="INFO">Running command './StoryManager story show ehin6t1o6sp34dpm6koi21o69cn2sh99.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.894" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200708 16:57:29.894" starttime="20200708 16:57:29.889"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.894" starttime="20200708 16:57:29.894"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.894" critical="yes" starttime="20200708 16:57:29.868"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.895" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.901" level="INFO">${stdout} = Story test created
ID : ehin6t1o74s3gdpg60rh25ah31c580aq</msg>
<status status="PASS" endtime="20200708 16:57:29.901" starttime="20200708 16:57:29.895"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.901" level="INFO">${id} = ID : ehin6t1o74s3gdpg60rh25ah31c580aq</msg>
<status status="PASS" endtime="20200708 16:57:29.901" starttime="20200708 16:57:29.901"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.901" level="INFO">${id} = ehin6t1o74s3gdpg60rh25ah31c580aq</msg>
<status status="PASS" endtime="20200708 16:57:29.901" starttime="20200708 16:57:29.901"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 16:57:29.902" level="INFO">Running command './StoryManager story show ehin6t1o74s3gdpg60rh25ah31c580aq.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.906" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200708 16:57:29.907" starttime="20200708 16:57:29.902"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.907" starttime="20200708 16:57:29.907"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.908" level="INFO">Running command './StoryManager story edit ehin6t1o74s3gdpg60rh25ah31c580aq -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.914" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1o74s3gdpg60rh25ah31c580aq</msg>
<status status="PASS" endtime="20200708 16:57:29.914" starttime="20200708 16:57:29.907"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 16:57:29.915" level="INFO">Running command './StoryManager story show ehin6t1o74s3gdpg60rh25ah31c580aq.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.920" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200708 16:57:29.920" starttime="20200708 16:57:29.914"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.920" starttime="20200708 16:57:29.920"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.920" critical="yes" starttime="20200708 16:57:29.895"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.921" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.928" level="INFO">${stdout} = Story test created
ID : ehin6t1p68qj6d9h64oi0iac9t14smom</msg>
<status status="PASS" endtime="20200708 16:57:29.928" starttime="20200708 16:57:29.921"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.928" level="INFO">${id} = ID : ehin6t1p68qj6d9h64oi0iac9t14smom</msg>
<status status="PASS" endtime="20200708 16:57:29.928" starttime="20200708 16:57:29.928"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.928" level="INFO">${id} = ehin6t1p68qj6d9h64oi0iac9t14smom</msg>
<status status="PASS" endtime="20200708 16:57:29.928" starttime="20200708 16:57:29.928"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:57:29.929" level="INFO">Running command './StoryManager story show ehin6t1p68qj6d9h64oi0iac9t14smom.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.933" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200708 16:57:29.933" starttime="20200708 16:57:29.929"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.934" starttime="20200708 16:57:29.934"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.934" level="INFO">Running command './StoryManager story edit ehin6t1p68qj6d9h64oi0iac9t14smom -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.941" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1p68qj6d9h64oi0iac9t14smom</msg>
<status status="PASS" endtime="20200708 16:57:29.941" starttime="20200708 16:57:29.934"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:57:29.942" level="INFO">Running command './StoryManager story show ehin6t1p68qj6d9h64oi0iac9t14smom.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.947" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200708 16:57:29.947" starttime="20200708 16:57:29.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.947" starttime="20200708 16:57:29.947"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.947" critical="yes" starttime="20200708 16:57:29.921"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.948" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.954" level="INFO">${stdout} = Story test created
ID : ehin6t1p6kojce1o70o1o18i8omh49g2</msg>
<status status="PASS" endtime="20200708 16:57:29.954" starttime="20200708 16:57:29.948"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.955" level="INFO">${id} = ID : ehin6t1p6kojce1o70o1o18i8omh49g2</msg>
<status status="PASS" endtime="20200708 16:57:29.955" starttime="20200708 16:57:29.955"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.956" level="INFO">${id} = ehin6t1p6kojce1o70o1o18i8omh49g2</msg>
<status status="PASS" endtime="20200708 16:57:29.956" starttime="20200708 16:57:29.955"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 16:57:29.956" level="INFO">Running command './StoryManager story show ehin6t1p6kojce1o70o1o18i8omh49g2.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.961" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200708 16:57:29.961" starttime="20200708 16:57:29.956"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.962" starttime="20200708 16:57:29.961"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.962" level="INFO">Running command './StoryManager story close ehin6t1p6kojce1o70o1o18i8omh49g2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.969" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200708 16:57:29.969" starttime="20200708 16:57:29.962"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 16:57:29.970" level="INFO">Running command './StoryManager story show ehin6t1p6kojce1o70o1o18i8omh49g2.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.975" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200708 16:57:29.975" starttime="20200708 16:57:29.969"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.975" starttime="20200708 16:57:29.975"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.976" level="INFO">Running command './StoryManager story edit ehin6t1p6kojce1o70o1o18i8omh49g2 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.981" level="INFO">${stdout} = The story ehin6t1p6kojce1o70o1o18i8omh49g2 is close, you can't modify it</msg>
<status status="PASS" endtime="20200708 16:57:29.981" starttime="20200708 16:57:29.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.981" starttime="20200708 16:57:29.981"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.981" critical="yes" starttime="20200708 16:57:29.947"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.982" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.986" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200708 16:57:29.986" starttime="20200708 16:57:29.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:29.987" starttime="20200708 16:57:29.986"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:29.987" critical="yes" starttime="20200708 16:57:29.981"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.988" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:29.994" level="INFO">${stdout} = Story test created
ID : ehin6t1p74ojedhi6kqjqo1m5k346j24</msg>
<status status="PASS" endtime="20200708 16:57:29.994" starttime="20200708 16:57:29.987"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.995" level="INFO">${id} = ID : ehin6t1p74ojedhi6kqjqo1m5k346j24</msg>
<status status="PASS" endtime="20200708 16:57:29.995" starttime="20200708 16:57:29.994"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:29.995" level="INFO">${id} = ehin6t1p74ojedhi6kqjqo1m5k346j24</msg>
<status status="PASS" endtime="20200708 16:57:29.995" starttime="20200708 16:57:29.995"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:29.996" level="INFO">Running command './StoryManager story Tadd ehin6t1p74ojedhi6kqjqo1m5k346j24 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.006" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1p74ojedhi6kqjqo1m5k346j24</msg>
<status status="PASS" endtime="20200708 16:57:30.006" starttime="20200708 16:57:29.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.007" starttime="20200708 16:57:30.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.007" starttime="20200708 16:57:30.007"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.008" level="INFO">Running command './StoryManager story show ehin6t1p74ojedhi6kqjqo1m5k346j24 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.013" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200708 16:57:30.013" starttime="20200708 16:57:30.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.014" starttime="20200708 16:57:30.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.014" starttime="20200708 16:57:30.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.014" starttime="20200708 16:57:30.014"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.014" critical="yes" starttime="20200708 16:57:29.987"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.015" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.022" level="INFO">${stdout} = Story test created
ID : ehin6t1g64sj4e9o6oq3od8010rlqna7</msg>
<status status="PASS" endtime="20200708 16:57:30.022" starttime="20200708 16:57:30.015"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.023" level="INFO">${id} = ID : ehin6t1g64sj4e9o6oq3od8010rlqna7</msg>
<status status="PASS" endtime="20200708 16:57:30.023" starttime="20200708 16:57:30.022"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.023" level="INFO">${id} = ehin6t1g64sj4e9o6oq3od8010rlqna7</msg>
<status status="PASS" endtime="20200708 16:57:30.023" starttime="20200708 16:57:30.023"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.024" level="INFO">Running command './StoryManager story Tadd ehin6t1g64sj4e9o6oq3od8010rlqna7 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.034" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1g64sj4e9o6oq3od8010rlqna7</msg>
<status status="PASS" endtime="20200708 16:57:30.034" starttime="20200708 16:57:30.023"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.035" level="INFO">Running command './StoryManager story Tedit ehin6t1g64sj4e9o6oq3od8010rlqna7 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.047" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1g64sj4e9o6oq3od8010rlqna7</msg>
<status status="PASS" endtime="20200708 16:57:30.047" starttime="20200708 16:57:30.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.047" starttime="20200708 16:57:30.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.048" starttime="20200708 16:57:30.047"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.048" level="INFO">Running command './StoryManager story show ehin6t1g64sj4e9o6oq3od8010rlqna7 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.054" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200708 16:57:30.054" starttime="20200708 16:57:30.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.054" starttime="20200708 16:57:30.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.055" starttime="20200708 16:57:30.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.055" starttime="20200708 16:57:30.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.055" starttime="20200708 16:57:30.055"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.056" critical="yes" starttime="20200708 16:57:30.015"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.056" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.063" level="INFO">${stdout} = Story test created
ID : ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.063" starttime="20200708 16:57:30.056"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.064" level="INFO">${id} = ID : ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.064" starttime="20200708 16:57:30.063"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.064" level="INFO">${id} = ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.064" starttime="20200708 16:57:30.064"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.065" level="INFO">Running command './StoryManager story Tadd ehin6t1g6oo36d1h60q5kban9l9j0e1j task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.076" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.076" starttime="20200708 16:57:30.064"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.077" level="INFO">Running command './StoryManager story Tadd ehin6t1g6oo36d1h60q5kban9l9j0e1j task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.087" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.088" starttime="20200708 16:57:30.077"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.088" level="INFO">Running command './StoryManager story Tedit ehin6t1g6oo36d1h60q5kban9l9j0e1j 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.100" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1g6oo36d1h60q5kban9l9j0e1j</msg>
<status status="PASS" endtime="20200708 16:57:30.100" starttime="20200708 16:57:30.088"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.100" level="INFO">Running command './StoryManager story Tsearch ehin6t1g6oo36d1h60q5kban9l9j0e1j -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.106" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200708 16:57:30.106" starttime="20200708 16:57:30.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.107" starttime="20200708 16:57:30.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.107" starttime="20200708 16:57:30.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.107" starttime="20200708 16:57:30.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.108" starttime="20200708 16:57:30.107"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.108" starttime="20200708 16:57:30.108"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.108" critical="yes" starttime="20200708 16:57:30.056"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.109" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.115" level="INFO">${stdout} = Story test created
ID : ehin6t1h64p34e9j74o0edg60kg1a3r1</msg>
<status status="PASS" endtime="20200708 16:57:30.115" starttime="20200708 16:57:30.108"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 16:57:30.116" level="INFO">${id1} = ID : ehin6t1h64p34e9j74o0edg60kg1a3r1</msg>
<status status="PASS" endtime="20200708 16:57:30.116" starttime="20200708 16:57:30.115"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 16:57:30.116" level="INFO">${id1} = ehin6t1h64p34e9j74o0edg60kg1a3r1</msg>
<status status="PASS" endtime="20200708 16:57:30.116" starttime="20200708 16:57:30.116"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.116" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.124" level="INFO">${stdout} = Story test created
ID : ehin6t1h68o38dhh6sq5e7h25lam2ohp</msg>
<status status="PASS" endtime="20200708 16:57:30.124" starttime="20200708 16:57:30.116"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 16:57:30.125" level="INFO">${id2} = ID : ehin6t1h68o38dhh6sq5e7h25lam2ohp</msg>
<status status="PASS" endtime="20200708 16:57:30.125" starttime="20200708 16:57:30.124"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 16:57:30.125" level="INFO">${id2} = ehin6t1h68o38dhh6sq5e7h25lam2ohp</msg>
<status status="PASS" endtime="20200708 16:57:30.125" starttime="20200708 16:57:30.125"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.126" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.132" level="INFO">${stdout} = Story test created
ID : ehin6t1h68sj4c1j70s4o2hq0ksgeoi3</msg>
<status status="PASS" endtime="20200708 16:57:30.132" starttime="20200708 16:57:30.125"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 16:57:30.133" level="INFO">${id3} = ID : ehin6t1h68sj4c1j70s4o2hq0ksgeoi3</msg>
<status status="PASS" endtime="20200708 16:57:30.133" starttime="20200708 16:57:30.132"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 16:57:30.133" level="INFO">${id3} = ehin6t1h68sj4c1j70s4o2hq0ksgeoi3</msg>
<status status="PASS" endtime="20200708 16:57:30.133" starttime="20200708 16:57:30.133"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.133" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.145" level="INFO">${stdout} = ehin6t1g64sj4e9o6oq3od8010rlqna7		test
ehin6t1h64p34e9j74o0edg60kg1a3r1		test
ehin6t1h68o38dhh6sq5e7h25lam2ohp		test
ehin6t1o6ko3gdhp6kp5mgb12op3klan		test
ehin6t1o6sp34dpm6koi21o69cn2sh99		test
ehin6...</msg>
<status status="PASS" endtime="20200708 16:57:30.145" starttime="20200708 16:57:30.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.146" starttime="20200708 16:57:30.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.146" starttime="20200708 16:57:30.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.146" starttime="20200708 16:57:30.146"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.147" critical="yes" starttime="20200708 16:57:30.108"></status>
</test>
<test id="s1-t11" name="Copy story duplicate">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.147" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.154" level="INFO">${stdout} = Story test created
ID : ehin6t1h6ko3idhk6ssiiog34o6leah2</msg>
<status status="PASS" endtime="20200708 16:57:30.154" starttime="20200708 16:57:30.147"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.154" level="INFO">${id} = ID : ehin6t1h6ko3idhk6ssiiog34o6leah2</msg>
<status status="PASS" endtime="20200708 16:57:30.154" starttime="20200708 16:57:30.154"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.155" level="INFO">${id} = ehin6t1h6ko3idhk6ssiiog34o6leah2</msg>
<status status="PASS" endtime="20200708 16:57:30.155" starttime="20200708 16:57:30.155"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.155" level="INFO">Running command './StoryManager story copy ehin6t1h6ko3idhk6ssiiog34o6leah2 Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.162" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1h6oo30c9h70p1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.162" starttime="20200708 16:57:30.155"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:57:30.162" level="INFO">${idd} = Duplicate ID is : ehin6t1h6oo30c9h70p1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.162" starttime="20200708 16:57:30.162"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:57:30.162" level="INFO">${idd} = ehin6t1h6oo30c9h70p1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.162" starttime="20200708 16:57:30.162"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.163" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.176" level="INFO">${stdout} = ehin6t1h68o38dhh6sq5e7h25lam2ohp		test
ehin6t1p68qj6d9h64oi0iac9t14smom		new title
ehin6t1p6kojce1o70o1o18i8omh49g2		test
ehin6t1p74ojedhi6kqjqo1m5k346j24		test
ehin6t1g64sj4e9o6oq3od8010rlqna7		test
...</msg>
<status status="PASS" endtime="20200708 16:57:30.176" starttime="20200708 16:57:30.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.177" starttime="20200708 16:57:30.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.177" starttime="20200708 16:57:30.177"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.178" level="INFO">Running command './StoryManager story show ehin6t1h6ko3idhk6ssiiog34o6leah2.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.183" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 16:57:30.183" starttime="20200708 16:57:30.177"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200708 16:57:30.183" level="INFO">Running command './StoryManager story show ehin6t1h6oo30c9h70p1ejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.189" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 16:57:30.189" starttime="20200708 16:57:30.183"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.189" starttime="20200708 16:57:30.189"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.189" critical="yes" starttime="20200708 16:57:30.147"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.190" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.197" level="INFO">${stdout} = Story test created
ID : ehin6t1h74pjgc1l6gqlqho4b0plmj2k</msg>
<status status="PASS" endtime="20200708 16:57:30.197" starttime="20200708 16:57:30.190"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.197" level="INFO">${id} = ID : ehin6t1h74pjgc1l6gqlqho4b0plmj2k</msg>
<status status="PASS" endtime="20200708 16:57:30.197" starttime="20200708 16:57:30.197"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.198" level="INFO">${id} = ehin6t1h74pjgc1l6gqlqho4b0plmj2k</msg>
<status status="PASS" endtime="20200708 16:57:30.198" starttime="20200708 16:57:30.197"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.198" level="INFO">Running command './StoryManager story copy ehin6t1h74pjgc1l6gqlqho4b0plmj2k Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.205" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1i60p38e1j6oo1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.205" starttime="20200708 16:57:30.198"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:57:30.205" level="INFO">${idd} = Duplicate ID is : ehin6t1i60p38e1j6oo1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.205" starttime="20200708 16:57:30.205"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:57:30.206" level="INFO">${idd} = ehin6t1i60p38e1j6oo1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.206" starttime="20200708 16:57:30.205"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.206" level="INFO">Running command './StoryManager story edit ehin6t1h74pjgc1l6gqlqho4b0plmj2k -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.215" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1h74pjgc1l6gqlqho4b0plmj2k</msg>
<status status="PASS" endtime="20200708 16:57:30.215" starttime="20200708 16:57:30.206"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.215" level="INFO">Running command './StoryManager story edit ehin6t1i60p38e1j6oo1ejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.224" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1i60p38e1j6oo1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.224" starttime="20200708 16:57:30.215"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.225" level="INFO">Running command './StoryManager story merge ehin6t1h74pjgc1l6gqlqho4b0plmj2k ehin6t1i60p38e1j6oo1ejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.239" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...ikep9pm34pu0tbsn62cs7bf8qmm4ql1i
New ID : ehin6t1i6co30d9p6gp1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.239" starttime="20200708 16:57:30.225"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 16:57:30.239" level="INFO">${idm} = New ID : ehin6t1i6co30d9p6gp1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.239" starttime="20200708 16:57:30.239"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 16:57:30.240" level="INFO">${idm} = ehin6t1i6co30d9p6gp1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:57:30.240" starttime="20200708 16:57:30.239"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.240" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.255" level="INFO">${stdout} = ehin6t1g64sj4e9o6oq3od8010rlqna7		test
ehin6t1h68sj4c1j70s4o2hq0ksgeoi3		test
ehin6t1h6ko3idhk6ssiiog34o6leah2		test
ehin6t1i6co30d9p6gp1ejgk5s6gu1oh		test
ehin6t1o6ko3gdhp6kp5mgb12op3klan		test
ehin6...</msg>
<status status="PASS" endtime="20200708 16:57:30.255" starttime="20200708 16:57:30.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.255" starttime="20200708 16:57:30.255"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.256" starttime="20200708 16:57:30.255"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.256" starttime="20200708 16:57:30.256"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.256" critical="yes" starttime="20200708 16:57:30.190"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:57:30.257" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:57:30.257" level="INFO">1 directory.</msg>
<msg timestamp="20200708 16:57:30.257" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200708 16:57:30.257" starttime="20200708 16:57:30.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 16:57:30.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.257" starttime="20200708 16:57:30.257"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:57:30.259" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.259" starttime="20200708 16:57:30.258"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.259" critical="yes" starttime="20200708 16:57:30.256"></status>
</test>
<test id="s1-t14" name="SyncTest story">
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:57:30.260" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.260" starttime="20200708 16:57:30.260"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:57:30.260" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.260" starttime="20200708 16:57:30.260"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:57:30.261" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.261" starttime="20200708 16:57:30.260"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:57:30.279" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.279" starttime="20200708 16:57:30.261"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:57:30.280" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.280" starttime="20200708 16:57:30.279"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:57:30.296" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.296" starttime="20200708 16:57:30.280"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>create</arg>
<arg>test</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:57:30.296" level="INFO">Starting process:
StoryManager story create test</msg>
<msg timestamp="20200708 16:57:30.301" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.306" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.306" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.306" starttime="20200708 16:57:30.296"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.307" level="INFO">${id} = ID : ehin6t1j60q36c1i6gria5hob0114n1m</msg>
<status status="PASS" endtime="20200708 16:57:30.307" starttime="20200708 16:57:30.307"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:57:30.307" level="INFO">${id} = ehin6t1j60q36c1i6gria5hob0114n1m</msg>
<status status="PASS" endtime="20200708 16:57:30.307" starttime="20200708 16:57:30.307"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>copy</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:57:30.308" level="INFO">Starting process:
StoryManager story copy ehin6t1j60q36c1i6gria5hob0114n1m ../Usb/Stories</msg>
<msg timestamp="20200708 16:57:30.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.317" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.318" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.318" starttime="20200708 16:57:30.308"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>1</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:57:30.318" level="INFO">Starting process:
StoryManager story edit ehin6t1j60q36c1i6gria5hob0114n1m -e 1</msg>
<msg timestamp="20200708 16:57:30.323" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.329" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.329" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.329" starttime="20200708 16:57:30.318"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>2</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 16:57:30.330" level="INFO">Starting process:
StoryManager story edit ehin6t1j60q36c1i6gria5hob0114n1m -e 2</msg>
<msg timestamp="20200708 16:57:30.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.340" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.340" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.340" starttime="20200708 16:57:30.329"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>sync</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>-l</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:57:30.341" level="INFO">Starting process:
StoryManager story sync ehin6t1j60q36c1i6gria5hob0114n1m ../Usb/Stories -l</msg>
<msg timestamp="20200708 16:57:30.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.357" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.357" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.357" starttime="20200708 16:57:30.341"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:57:30.358" level="INFO">Starting process:
StoryManager story show ehin6t1j60q36c1i6gria5hob0114n1m</msg>
<msg timestamp="20200708 16:57:30.365" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.370" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.371" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.371" starttime="20200708 16:57:30.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.372" starttime="20200708 16:57:30.371"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 16:57:30.372" level="INFO">Starting process:
StoryManager story show ehin6t1j60q36c1i6gria5hob0114n1m</msg>
<msg timestamp="20200708 16:57:30.379" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:57:30.384" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:57:30.385" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.385" starttime="20200708 16:57:30.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultU.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.386" starttime="20200708 16:57:30.385"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.386" critical="yes" starttime="20200708 16:57:30.259"></status>
</test>
<test id="s1-t15" name="Remove db sync">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:57:30.387" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:57:30.387" level="INFO">2 directories.</msg>
<msg timestamp="20200708 16:57:30.387" level="INFO">${files} = 2</msg>
<status status="PASS" endtime="20200708 16:57:30.387" starttime="20200708 16:57:30.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200708 16:57:30.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:57:30.388" starttime="20200708 16:57:30.388"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:57:30.392" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.392" starttime="20200708 16:57:30.388"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:57:30.396" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:30.396" starttime="20200708 16:57:30.392"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.396" critical="yes" starttime="20200708 16:57:30.386"></status>
</test>
<test id="s1-t16" name="Random">
<kw type="for" name="${INDEX} IN RANGE [ 0 | 100 ]">
<kw type="foritem" name="${INDEX} = 0">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.398" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.403" level="INFO">${stdout} = Story test created
ID : ehin6t1k60oj2c1o6kp62e0t341igf30</msg>
<status status="PASS" endtime="20200708 16:57:30.403" starttime="20200708 16:57:30.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.403" starttime="20200708 16:57:30.403"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.403" starttime="20200708 16:57:30.397"></status>
</kw>
<kw type="foritem" name="${INDEX} = 1">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.404" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.410" level="INFO">${stdout} = Story test created
ID : ehin6t1k60rjcc1k70qjmdas44q2ilhp</msg>
<status status="PASS" endtime="20200708 16:57:30.410" starttime="20200708 16:57:30.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.410" starttime="20200708 16:57:30.410"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.410" starttime="20200708 16:57:30.403"></status>
</kw>
<kw type="foritem" name="${INDEX} = 2">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.411" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.417" level="INFO">${stdout} = Story test created
ID : ehin6t1k64q36cho6kp50bpf8p316g15</msg>
<status status="PASS" endtime="20200708 16:57:30.417" starttime="20200708 16:57:30.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.417" starttime="20200708 16:57:30.417"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.417" starttime="20200708 16:57:30.410"></status>
</kw>
<kw type="foritem" name="${INDEX} = 3">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.418" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.424" level="INFO">${stdout} = Story test created
ID : ehin6t1k68oj8d9p6cqgsn93bsu2g8hs</msg>
<status status="PASS" endtime="20200708 16:57:30.424" starttime="20200708 16:57:30.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.424" starttime="20200708 16:57:30.424"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.424" starttime="20200708 16:57:30.417"></status>
</kw>
<kw type="foritem" name="${INDEX} = 4">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.425" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.430" level="INFO">${stdout} = Story test created
ID : ehin6t1k68s30e9g6gpgoh9g7sh2k8qg</msg>
<status status="PASS" endtime="20200708 16:57:30.430" starttime="20200708 16:57:30.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.430" starttime="20200708 16:57:30.430"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.431" starttime="20200708 16:57:30.424"></status>
</kw>
<kw type="foritem" name="${INDEX} = 5">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.431" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.437" level="INFO">${stdout} = Story test created
ID : ehin6t1k6cq3ed9k6cr2o6qh5d9l0000</msg>
<status status="PASS" endtime="20200708 16:57:30.437" starttime="20200708 16:57:30.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.438" starttime="20200708 16:57:30.437"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.438" starttime="20200708 16:57:30.431"></status>
</kw>
<kw type="foritem" name="${INDEX} = 6">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.438" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.444" level="INFO">${stdout} = Story test created
ID : ehin6t1k6goj8d9m6go1ogis0594g1r2</msg>
<status status="PASS" endtime="20200708 16:57:30.444" starttime="20200708 16:57:30.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.444" starttime="20200708 16:57:30.444"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.444" starttime="20200708 16:57:30.438"></status>
</kw>
<kw type="foritem" name="${INDEX} = 7">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.445" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.450" level="INFO">${stdout} = Story test created
ID : ehin6t1k6gs34dpg60qm0oig799g6c96</msg>
<status status="PASS" endtime="20200708 16:57:30.450" starttime="20200708 16:57:30.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.451" starttime="20200708 16:57:30.450"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.451" starttime="20200708 16:57:30.444"></status>
</kw>
<kw type="foritem" name="${INDEX} = 8">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.451" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.457" level="INFO">${stdout} = Story test created
ID : ehin6t1k6kq3cd9i74rgihaqb922im2g</msg>
<status status="PASS" endtime="20200708 16:57:30.457" starttime="20200708 16:57:30.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.457" starttime="20200708 16:57:30.457"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.457" starttime="20200708 16:57:30.451"></status>
</kw>
<kw type="foritem" name="${INDEX} = 9">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.458" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.463" level="INFO">${stdout} = Story test created
ID : ehin6t1k6ooj2c1m74qk4b269gp5o4q4</msg>
<status status="PASS" endtime="20200708 16:57:30.463" starttime="20200708 16:57:30.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.464" starttime="20200708 16:57:30.464"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.464" starttime="20200708 16:57:30.457"></status>
</kw>
<kw type="foritem" name="${INDEX} = 10">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.464" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.470" level="INFO">${stdout} = Story test created
ID : ehin6t1k6orjee1l6kr3oh9c5cv52581</msg>
<status status="PASS" endtime="20200708 16:57:30.470" starttime="20200708 16:57:30.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.471" starttime="20200708 16:57:30.471"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.471" starttime="20200708 16:57:30.464"></status>
</kw>
<kw type="foritem" name="${INDEX} = 11">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.471" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.478" level="INFO">${stdout} = Story test created
ID : ehin6t1k6sq3edpg6cq5ii0ebok5u9gt</msg>
<status status="PASS" endtime="20200708 16:57:30.478" starttime="20200708 16:57:30.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.478" starttime="20200708 16:57:30.478"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.478" starttime="20200708 16:57:30.471"></status>
</kw>
<kw type="foritem" name="${INDEX} = 12">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.478" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.484" level="INFO">${stdout} = Story test created
ID : ehin6t1k70ojic1l64s5o0iq3l3gee2v</msg>
<status status="PASS" endtime="20200708 16:57:30.484" starttime="20200708 16:57:30.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.485" starttime="20200708 16:57:30.484"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.485" starttime="20200708 16:57:30.478"></status>
</kw>
<kw type="foritem" name="${INDEX} = 13">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.485" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.491" level="INFO">${stdout} = Story test created
ID : ehin6t1k70s3ae1l6sogeiat5cb4ae8k</msg>
<status status="PASS" endtime="20200708 16:57:30.491" starttime="20200708 16:57:30.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.491" starttime="20200708 16:57:30.491"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.491" starttime="20200708 16:57:30.485"></status>
</kw>
<kw type="foritem" name="${INDEX} = 14">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.492" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.498" level="INFO">${stdout} = Story test created
ID : ehin6t1k74qj4dpn6gq2so8bc1426096</msg>
<status status="PASS" endtime="20200708 16:57:30.498" starttime="20200708 16:57:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.499" starttime="20200708 16:57:30.498"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.499" starttime="20200708 16:57:30.491"></status>
</kw>
<kw type="foritem" name="${INDEX} = 15">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.499" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.505" level="INFO">${stdout} = Story test created
ID : ehin6t1l60p3ad9m6kog05hd44skmcj1</msg>
<status status="PASS" endtime="20200708 16:57:30.505" starttime="20200708 16:57:30.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.506" starttime="20200708 16:57:30.506"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.506" starttime="20200708 16:57:30.499"></status>
</kw>
<kw type="foritem" name="${INDEX} = 16">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.506" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.512" level="INFO">${stdout} = Story test created
ID : ehin6t1l60sjee9i6op0o81h509li3i0</msg>
<status status="PASS" endtime="20200708 16:57:30.512" starttime="20200708 16:57:30.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.513" starttime="20200708 16:57:30.513"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.513" starttime="20200708 16:57:30.506"></status>
</kw>
<kw type="foritem" name="${INDEX} = 17">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.513" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.519" level="INFO">${stdout} = Story test created
ID : ehin6t1l64r3ee1n6sriema9985iqnh2</msg>
<status status="PASS" endtime="20200708 16:57:30.519" starttime="20200708 16:57:30.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.520" starttime="20200708 16:57:30.520"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.520" starttime="20200708 16:57:30.513"></status>
</kw>
<kw type="foritem" name="${INDEX} = 18">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.520" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.526" level="INFO">${stdout} = Story test created
ID : ehin6t1l68pjgdhm74siuhqc24716bo6</msg>
<status status="PASS" endtime="20200708 16:57:30.526" starttime="20200708 16:57:30.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.527" starttime="20200708 16:57:30.527"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.527" starttime="20200708 16:57:30.520"></status>
</kw>
<kw type="foritem" name="${INDEX} = 19">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.527" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.533" level="INFO">${stdout} = Story test created
ID : ehin6t1l6co3gchk6grj29ai94l26ohd</msg>
<status status="PASS" endtime="20200708 16:57:30.534" starttime="20200708 16:57:30.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.534" starttime="20200708 16:57:30.534"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.534" starttime="20200708 16:57:30.527"></status>
</kw>
<kw type="foritem" name="${INDEX} = 20">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.534" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.540" level="INFO">${stdout} = Story test created
ID : ehin6t1l6crjidpp64sgknhv44130h2g</msg>
<status status="PASS" endtime="20200708 16:57:30.540" starttime="20200708 16:57:30.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.541" starttime="20200708 16:57:30.541"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.541" starttime="20200708 16:57:30.534"></status>
</kw>
<kw type="foritem" name="${INDEX} = 21">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.541" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.547" level="INFO">${stdout} = Story test created
ID : ehin6t1l6gq3echk68o50dor8s140bgh</msg>
<status status="PASS" endtime="20200708 16:57:30.547" starttime="20200708 16:57:30.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.548" starttime="20200708 16:57:30.547"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.548" starttime="20200708 16:57:30.541"></status>
</kw>
<kw type="foritem" name="${INDEX} = 22">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.548" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.554" level="INFO">${stdout} = Story test created
ID : ehin6t1l6kojed1n60p4e29j68vks9ab</msg>
<status status="PASS" endtime="20200708 16:57:30.555" starttime="20200708 16:57:30.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.555" starttime="20200708 16:57:30.555"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.555" starttime="20200708 16:57:30.548"></status>
</kw>
<kw type="foritem" name="${INDEX} = 23">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.555" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.562" level="INFO">${stdout} = Story test created
ID : ehin6t1l6ks3gdpg70p0o7q93052ee1u</msg>
<status status="PASS" endtime="20200708 16:57:30.562" starttime="20200708 16:57:30.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.562" starttime="20200708 16:57:30.562"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.562" starttime="20200708 16:57:30.555"></status>
</kw>
<kw type="foritem" name="${INDEX} = 24">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.563" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.569" level="INFO">${stdout} = Story test created
ID : ehin6t1l6or32d1l6cqm4c0r2005cn30</msg>
<status status="PASS" endtime="20200708 16:57:30.569" starttime="20200708 16:57:30.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.569" starttime="20200708 16:57:30.569"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.569" starttime="20200708 16:57:30.562"></status>
</kw>
<kw type="foritem" name="${INDEX} = 25">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.570" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.577" level="INFO">${stdout} = Story test created
ID : ehin6t1l6spj6dhp6os42hgk5o7jo2qm</msg>
<status status="PASS" endtime="20200708 16:57:30.577" starttime="20200708 16:57:30.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.577" starttime="20200708 16:57:30.577"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.577" starttime="20200708 16:57:30.569"></status>
</kw>
<kw type="foritem" name="${INDEX} = 26">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.578" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.584" level="INFO">${stdout} = Story test created
ID : ehin6t1l70oj4dho6csiu00l2c2lcm1a</msg>
<status status="PASS" endtime="20200708 16:57:30.584" starttime="20200708 16:57:30.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.584" starttime="20200708 16:57:30.584"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.585" starttime="20200708 16:57:30.577"></status>
</kw>
<kw type="foritem" name="${INDEX} = 27">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.585" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.592" level="INFO">${stdout} = Story test created
ID : ehin6t1l70s38dpp6sp5ib8q88b40h8d</msg>
<status status="PASS" endtime="20200708 16:57:30.592" starttime="20200708 16:57:30.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.592" starttime="20200708 16:57:30.592"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.592" starttime="20200708 16:57:30.585"></status>
</kw>
<kw type="foritem" name="${INDEX} = 28">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.593" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.599" level="INFO">${stdout} = Story test created
ID : ehin6t1l74r36c1h6ksjagi31kthiah4</msg>
<status status="PASS" endtime="20200708 16:57:30.600" starttime="20200708 16:57:30.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.600" starttime="20200708 16:57:30.600"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.600" starttime="20200708 16:57:30.592"></status>
</kw>
<kw type="foritem" name="${INDEX} = 29">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.600" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.607" level="INFO">${stdout} = Story test created
ID : ehin6t1m60pjicpn6grm0d0578dgi3go</msg>
<status status="PASS" endtime="20200708 16:57:30.607" starttime="20200708 16:57:30.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.607" starttime="20200708 16:57:30.607"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.607" starttime="20200708 16:57:30.600"></status>
</kw>
<kw type="foritem" name="${INDEX} = 30">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.608" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.614" level="INFO">${stdout} = Story test created
ID : ehin6t1m64oj4e9o6gql6l8i4soiu3gc</msg>
<status status="PASS" endtime="20200708 16:57:30.614" starttime="20200708 16:57:30.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.615" starttime="20200708 16:57:30.614"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.615" starttime="20200708 16:57:30.607"></status>
</kw>
<kw type="foritem" name="${INDEX} = 31">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.615" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.622" level="INFO">${stdout} = Story test created
ID : ehin6t1m64s3ccpi60s28f216101c2pv</msg>
<status status="PASS" endtime="20200708 16:57:30.622" starttime="20200708 16:57:30.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.622" starttime="20200708 16:57:30.622"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.622" starttime="20200708 16:57:30.615"></status>
</kw>
<kw type="foritem" name="${INDEX} = 32">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.623" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.630" level="INFO">${stdout} = Story test created
ID : ehin6t1m68r3acpp6op5c4pl485ie6ph</msg>
<status status="PASS" endtime="20200708 16:57:30.630" starttime="20200708 16:57:30.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.630" starttime="20200708 16:57:30.630"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.630" starttime="20200708 16:57:30.622"></status>
</kw>
<kw type="foritem" name="${INDEX} = 33">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.631" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.637" level="INFO">${stdout} = Story test created
ID : ehin6t1m6cq32c9k68rjq1hc7c40i02v</msg>
<status status="PASS" endtime="20200708 16:57:30.637" starttime="20200708 16:57:30.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.637" starttime="20200708 16:57:30.637"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.638" starttime="20200708 16:57:30.630"></status>
</kw>
<kw type="foritem" name="${INDEX} = 34">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.638" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.645" level="INFO">${stdout} = Story test created
ID : ehin6t1m6goj8dho64s36ii97d12q084</msg>
<status status="PASS" endtime="20200708 16:57:30.645" starttime="20200708 16:57:30.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.645" starttime="20200708 16:57:30.645"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.645" starttime="20200708 16:57:30.638"></status>
</kw>
<kw type="foritem" name="${INDEX} = 35">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.646" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.653" level="INFO">${stdout} = Story test created
ID : ehin6t1m6gsj2d9i6ks32a9l58g3cj9g</msg>
<status status="PASS" endtime="20200708 16:57:30.653" starttime="20200708 16:57:30.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.653" starttime="20200708 16:57:30.653"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.653" starttime="20200708 16:57:30.645"></status>
</kw>
<kw type="foritem" name="${INDEX} = 36">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.654" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.660" level="INFO">${stdout} = Story test created
ID : ehin6t1m6krj4c1p6griqho46gckc7gt</msg>
<status status="PASS" endtime="20200708 16:57:30.660" starttime="20200708 16:57:30.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.661" starttime="20200708 16:57:30.660"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.661" starttime="20200708 16:57:30.653"></status>
</kw>
<kw type="foritem" name="${INDEX} = 37">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.661" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.668" level="INFO">${stdout} = Story test created
ID : ehin6t1m6oq3ecpl74ohq48s48ij8f05</msg>
<status status="PASS" endtime="20200708 16:57:30.668" starttime="20200708 16:57:30.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.668" starttime="20200708 16:57:30.668"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.668" starttime="20200708 16:57:30.661"></status>
</kw>
<kw type="foritem" name="${INDEX} = 38">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.669" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.676" level="INFO">${stdout} = Story test created
ID : ehin6t1m6sp36cpg60oicf2g3c3h2n2j</msg>
<status status="PASS" endtime="20200708 16:57:30.676" starttime="20200708 16:57:30.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.677" starttime="20200708 16:57:30.676"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.677" starttime="20200708 16:57:30.668"></status>
</kw>
<kw type="foritem" name="${INDEX} = 39">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.677" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.684" level="INFO">${stdout} = Story test created
ID : ehin6t1m70o3cchl68q1eh9s1h4iacqc</msg>
<status status="PASS" endtime="20200708 16:57:30.684" starttime="20200708 16:57:30.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.685" starttime="20200708 16:57:30.685"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.685" starttime="20200708 16:57:30.677"></status>
</kw>
<kw type="foritem" name="${INDEX} = 40">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.685" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.692" level="INFO">${stdout} = Story test created
ID : ehin6t1m70sj0c9g6sq10l85c44icn0b</msg>
<status status="PASS" endtime="20200708 16:57:30.692" starttime="20200708 16:57:30.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.693" starttime="20200708 16:57:30.692"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.693" starttime="20200708 16:57:30.685"></status>
</kw>
<kw type="foritem" name="${INDEX} = 41">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.693" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.718" level="INFO">${stdout} = Story test created
ID : ehin6t1m74r3ce1p6kqii4or392lcm1p</msg>
<status status="PASS" endtime="20200708 16:57:30.718" starttime="20200708 16:57:30.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.718" starttime="20200708 16:57:30.718"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.718" starttime="20200708 16:57:30.693"></status>
</kw>
<kw type="foritem" name="${INDEX} = 42">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.719" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.766" level="INFO">${stdout} = Story test created
ID : ehin6t1n68p3edhg64sgumpj64thu99b</msg>
<status status="PASS" endtime="20200708 16:57:30.766" starttime="20200708 16:57:30.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.768" starttime="20200708 16:57:30.767"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.768" starttime="20200708 16:57:30.719"></status>
</kw>
<kw type="foritem" name="${INDEX} = 43">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.770" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.839" level="INFO">${stdout} = Story test created
ID : ehin6t1n70q3gdpo6opj8mipb130a6om</msg>
<status status="PASS" endtime="20200708 16:57:30.839" starttime="20200708 16:57:30.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.841" starttime="20200708 16:57:30.840"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.841" starttime="20200708 16:57:30.768"></status>
</kw>
<kw type="foritem" name="${INDEX} = 44">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.844" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.896" level="INFO">${stdout} = Story test created
ID : ehin6t1o6krjie1m6kq5cfa56kgkcaq4</msg>
<status status="PASS" endtime="20200708 16:57:30.896" starttime="20200708 16:57:30.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.898" starttime="20200708 16:57:30.897"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.898" starttime="20200708 16:57:30.842"></status>
</kw>
<kw type="foritem" name="${INDEX} = 45">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.900" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:30.955" level="INFO">${stdout} = Story test created
ID : ehin6t1p64pjcc9o64rhu6ga8p6546a3</msg>
<status status="PASS" endtime="20200708 16:57:30.956" starttime="20200708 16:57:30.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:30.957" starttime="20200708 16:57:30.956"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:30.957" starttime="20200708 16:57:30.898"></status>
</kw>
<kw type="foritem" name="${INDEX} = 46">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:30.960" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.014" level="INFO">${stdout} = Story test created
ID : ehin6t1p6sojgc1h6sslij2218lkcl0l</msg>
<status status="PASS" endtime="20200708 16:57:31.014" starttime="20200708 16:57:30.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.016" starttime="20200708 16:57:31.015"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.016" starttime="20200708 16:57:30.958"></status>
</kw>
<kw type="foritem" name="${INDEX} = 47">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.018" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.095" level="INFO">${stdout} = Story test created
ID : ehin6t1g6co3ee9g68r50eaoc4i28kgr</msg>
<status status="PASS" endtime="20200708 16:57:31.095" starttime="20200708 16:57:31.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.096" starttime="20200708 16:57:31.095"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.096" starttime="20200708 16:57:31.017"></status>
</kw>
<kw type="foritem" name="${INDEX} = 48">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.098" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.173" level="INFO">${stdout} = Story test created
ID : ehin6t1h64p3ac9m6ksio7i758aim4ar</msg>
<status status="PASS" endtime="20200708 16:57:31.173" starttime="20200708 16:57:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.175" starttime="20200708 16:57:31.174"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.175" starttime="20200708 16:57:31.096"></status>
</kw>
<kw type="foritem" name="${INDEX} = 49">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.177" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.227" level="INFO">${stdout} = Story test created
ID : ehin6t1h74o3gdpl74r0o0pa28tlolio</msg>
<status status="PASS" endtime="20200708 16:57:31.227" starttime="20200708 16:57:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.228" starttime="20200708 16:57:31.227"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.228" starttime="20200708 16:57:31.175"></status>
</kw>
<kw type="foritem" name="${INDEX} = 50">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.229" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.304" level="INFO">${stdout} = Story test created
ID : ehin6t1i6cr3ic1h64s3kh9p8db0oags</msg>
<status status="PASS" endtime="20200708 16:57:31.304" starttime="20200708 16:57:31.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.305" starttime="20200708 16:57:31.305"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.305" starttime="20200708 16:57:31.228"></status>
</kw>
<kw type="foritem" name="${INDEX} = 51">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.307" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.357" level="INFO">${stdout} = Story test created
ID : ehin6t1j68ojad1k74ohadhe5k2083of</msg>
<status status="PASS" endtime="20200708 16:57:31.357" starttime="20200708 16:57:31.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.358" starttime="20200708 16:57:31.358"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.358" starttime="20200708 16:57:31.306"></status>
</kw>
<kw type="foritem" name="${INDEX} = 52">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.359" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.402" level="INFO">${stdout} = Story test created
ID : ehin6t1j6oqjachi68ojoaim28m0o8or</msg>
<status status="PASS" endtime="20200708 16:57:31.402" starttime="20200708 16:57:31.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.404" starttime="20200708 16:57:31.403"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.404" starttime="20200708 16:57:31.358"></status>
</kw>
<kw type="foritem" name="${INDEX} = 53">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.406" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.454" level="INFO">${stdout} = Story test created
ID : ehin6t1k64sj8dpo6krgk9abbkb34ohs</msg>
<status status="PASS" endtime="20200708 16:57:31.454" starttime="20200708 16:57:31.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.455" starttime="20200708 16:57:31.454"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.455" starttime="20200708 16:57:31.404"></status>
</kw>
<kw type="foritem" name="${INDEX} = 54">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.455" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.507" level="INFO">${stdout} = Story test created
ID : ehin6t1k6oojechh70q06gpq14cjoaph</msg>
<status status="PASS" endtime="20200708 16:57:31.507" starttime="20200708 16:57:31.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.509" starttime="20200708 16:57:31.508"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.509" starttime="20200708 16:57:31.455"></status>
</kw>
<kw type="foritem" name="${INDEX} = 55">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.512" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.599" level="INFO">${stdout} = Story test created
ID : ehin6t1l6cojac1l6go24o1fc00iscoa</msg>
<status status="PASS" endtime="20200708 16:57:31.599" starttime="20200708 16:57:31.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.601" starttime="20200708 16:57:31.600"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.601" starttime="20200708 16:57:31.510"></status>
</kw>
<kw type="foritem" name="${INDEX} = 56">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.603" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.660" level="INFO">${stdout} = Story test created
ID : ehin6t1m64r36e9n6cq08j1r38uh210a</msg>
<status status="PASS" endtime="20200708 16:57:31.660" starttime="20200708 16:57:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.660" starttime="20200708 16:57:31.660"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.660" starttime="20200708 16:57:31.601"></status>
</kw>
<kw type="foritem" name="${INDEX} = 57">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.661" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.707" level="INFO">${stdout} = Story test created
ID : ehin6t1m6oq3ed9k68pgu1h03s6g2do9</msg>
<status status="PASS" endtime="20200708 16:57:31.707" starttime="20200708 16:57:31.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.709" starttime="20200708 16:57:31.708"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.709" starttime="20200708 16:57:31.661"></status>
</kw>
<kw type="foritem" name="${INDEX} = 58">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.711" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.786" level="INFO">${stdout} = Story test created
ID : ehin6t1n68p32dhg6gq5ek1a2chi8lh6</msg>
<status status="PASS" endtime="20200708 16:57:31.786" starttime="20200708 16:57:31.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.788" starttime="20200708 16:57:31.787"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.788" starttime="20200708 16:57:31.709"></status>
</kw>
<kw type="foritem" name="${INDEX} = 59">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.790" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.852" level="INFO">${stdout} = Story test created
ID : ehin6t1o60pjcdpg68sm4cp11km2qnal</msg>
<status status="PASS" endtime="20200708 16:57:31.852" starttime="20200708 16:57:31.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.853" starttime="20200708 16:57:31.852"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.853" starttime="20200708 16:57:31.788"></status>
</kw>
<kw type="foritem" name="${INDEX} = 60">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.855" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.904" level="INFO">${stdout} = Story test created
ID : ehin6t1o6or3cchn68q0co80b0mhibhv</msg>
<status status="PASS" endtime="20200708 16:57:31.904" starttime="20200708 16:57:31.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.905" starttime="20200708 16:57:31.904"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.905" starttime="20200708 16:57:31.854"></status>
</kw>
<kw type="foritem" name="${INDEX} = 61">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.907" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:31.971" level="INFO">${stdout} = Story test created
ID : ehin6t1p68ojgchp6ks3k39u712jsdpn</msg>
<status status="PASS" endtime="20200708 16:57:31.972" starttime="20200708 16:57:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:31.973" starttime="20200708 16:57:31.972"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:31.973" starttime="20200708 16:57:31.905"></status>
</kw>
<kw type="foritem" name="${INDEX} = 62">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:31.975" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.032" level="INFO">${stdout} = Story test created
ID : ehin6t1p70s34e1l68r145pd294j4dit</msg>
<status status="PASS" endtime="20200708 16:57:32.033" starttime="20200708 16:57:31.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.034" starttime="20200708 16:57:32.033"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.034" starttime="20200708 16:57:31.973"></status>
</kw>
<kw type="foritem" name="${INDEX} = 63">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.036" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.119" level="INFO">${stdout} = Story test created
ID : ehin6t1g6ko32d1o6gr1aiif08mk449q</msg>
<status status="PASS" endtime="20200708 16:57:32.119" starttime="20200708 16:57:32.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.121" starttime="20200708 16:57:32.120"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.121" starttime="20200708 16:57:32.034"></status>
</kw>
<kw type="foritem" name="${INDEX} = 64">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.123" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.165" level="INFO">${stdout} = Story test created
ID : ehin6t1h6cq3ichl6oohs3pt64p2g813</msg>
<status status="PASS" endtime="20200708 16:57:32.165" starttime="20200708 16:57:32.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.165" starttime="20200708 16:57:32.165"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.165" starttime="20200708 16:57:32.121"></status>
</kw>
<kw type="foritem" name="${INDEX} = 65">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.166" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.209" level="INFO">${stdout} = Story test created
ID : ehin6t1h6soj6c1p64q56ba1ap03o392</msg>
<status status="PASS" endtime="20200708 16:57:32.209" starttime="20200708 16:57:32.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.211" starttime="20200708 16:57:32.210"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.211" starttime="20200708 16:57:32.166"></status>
</kw>
<kw type="foritem" name="${INDEX} = 66">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.213" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.262" level="INFO">${stdout} = Story test created
ID : ehin6t1i68qj2e9i6cqkmcgq14i3cnof</msg>
<status status="PASS" endtime="20200708 16:57:32.262" starttime="20200708 16:57:32.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.262" starttime="20200708 16:57:32.262"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.262" starttime="20200708 16:57:32.211"></status>
</kw>
<kw type="foritem" name="${INDEX} = 67">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.263" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.313" level="INFO">${stdout} = Story test created
ID : ehin6t1i6os38chn6crlk98b60u3qkhb</msg>
<status status="PASS" endtime="20200708 16:57:32.313" starttime="20200708 16:57:32.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.314" starttime="20200708 16:57:32.313"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.314" starttime="20200708 16:57:32.262"></status>
</kw>
<kw type="foritem" name="${INDEX} = 68">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.316" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.393" level="INFO">${stdout} = Story test created
ID : ehin6t1j68sjidpo6srjuo2i9s5lsja2</msg>
<status status="PASS" endtime="20200708 16:57:32.393" starttime="20200708 16:57:32.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.394" starttime="20200708 16:57:32.393"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.394" starttime="20200708 16:57:32.315"></status>
</kw>
<kw type="foritem" name="${INDEX} = 69">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.396" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.459" level="INFO">${stdout} = Story test created
ID : ehin6t1k60sjedho68o1ml850sf46402</msg>
<status status="PASS" endtime="20200708 16:57:32.459" starttime="20200708 16:57:32.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.460" starttime="20200708 16:57:32.459"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.460" starttime="20200708 16:57:32.394"></status>
</kw>
<kw type="foritem" name="${INDEX} = 70">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.462" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.516" level="INFO">${stdout} = Story test created
ID : ehin6t1k6sojae9k6ss2emo2bgsjg30t</msg>
<status status="PASS" endtime="20200708 16:57:32.516" starttime="20200708 16:57:32.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.517" starttime="20200708 16:57:32.516"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.517" starttime="20200708 16:57:32.461"></status>
</kw>
<kw type="foritem" name="${INDEX} = 71">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.518" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.582" level="INFO">${stdout} = Story test created
ID : ehin6t1l68r30c9k6sqlcgam3c0l260l</msg>
<status status="PASS" endtime="20200708 16:57:32.582" starttime="20200708 16:57:32.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.583" starttime="20200708 16:57:32.582"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.583" starttime="20200708 16:57:32.517"></status>
</kw>
<kw type="foritem" name="${INDEX} = 72">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.585" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.646" level="INFO">${stdout} = Story test created
ID : ehin6t1l74sjid1g6cr5mlqq7h34848s</msg>
<status status="PASS" endtime="20200708 16:57:32.646" starttime="20200708 16:57:32.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.647" starttime="20200708 16:57:32.646"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.647" starttime="20200708 16:57:32.584"></status>
</kw>
<kw type="foritem" name="${INDEX} = 73">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.649" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.708" level="INFO">${stdout} = Story test created
ID : ehin6t1m6ks34d9m6co52do7bkdimh1a</msg>
<status status="PASS" endtime="20200708 16:57:32.708" starttime="20200708 16:57:32.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.710" starttime="20200708 16:57:32.709"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.710" starttime="20200708 16:57:32.648"></status>
</kw>
<kw type="foritem" name="${INDEX} = 74">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.712" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.769" level="INFO">${stdout} = Story test created
ID : ehin6t1n68q3ae9i68s2892l8oo2k3pj</msg>
<status status="PASS" endtime="20200708 16:57:32.769" starttime="20200708 16:57:32.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.770" starttime="20200708 16:57:32.769"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.770" starttime="20200708 16:57:32.710"></status>
</kw>
<kw type="foritem" name="${INDEX} = 75">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.770" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.815" level="INFO">${stdout} = Story test created
ID : ehin6t1n6sq38dpg6sohg1qd754m0ep0</msg>
<status status="PASS" endtime="20200708 16:57:32.816" starttime="20200708 16:57:32.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.817" starttime="20200708 16:57:32.816"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.817" starttime="20200708 16:57:32.770"></status>
</kw>
<kw type="foritem" name="${INDEX} = 76">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.819" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.883" level="INFO">${stdout} = Story test created
ID : ehin6t1o6co38e1j68r02ehn1gl3ecp1</msg>
<status status="PASS" endtime="20200708 16:57:32.883" starttime="20200708 16:57:32.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.885" starttime="20200708 16:57:32.884"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.885" starttime="20200708 16:57:32.817"></status>
</kw>
<kw type="foritem" name="${INDEX} = 77">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.887" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:32.957" level="INFO">${stdout} = Story test created
ID : ehin6t1o74rj2cpn60pi69qm2l92cl0e</msg>
<status status="PASS" endtime="20200708 16:57:32.958" starttime="20200708 16:57:32.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:32.959" starttime="20200708 16:57:32.958"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:32.959" starttime="20200708 16:57:32.885"></status>
</kw>
<kw type="foritem" name="${INDEX} = 78">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:32.961" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.028" level="INFO">${stdout} = Story test created
ID : ehin6t1p6sojcd9g6or2olhi7te2e92m</msg>
<status status="PASS" endtime="20200708 16:57:33.029" starttime="20200708 16:57:32.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.030" starttime="20200708 16:57:33.029"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.030" starttime="20200708 16:57:32.959"></status>
</kw>
<kw type="foritem" name="${INDEX} = 79">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.032" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.095" level="INFO">${stdout} = Story test created
ID : ehin6t1g6gq34d1g6csh2d2k2db14f00</msg>
<status status="PASS" endtime="20200708 16:57:33.096" starttime="20200708 16:57:33.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.097" starttime="20200708 16:57:33.096"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.097" starttime="20200708 16:57:33.030"></status>
</kw>
<kw type="foritem" name="${INDEX} = 80">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.099" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.154" level="INFO">${stdout} = Story test created
ID : ehin6t1h64o36e9h60q1gba064jk0o9n</msg>
<status status="PASS" endtime="20200708 16:57:33.154" starttime="20200708 16:57:33.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.155" starttime="20200708 16:57:33.155"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.155" starttime="20200708 16:57:33.097"></status>
</kw>
<kw type="foritem" name="${INDEX} = 81">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.157" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.216" level="INFO">${stdout} = Story test created
ID : ehin6t1h6oqj6cpi68pimjab88nl6fr0</msg>
<status status="PASS" endtime="20200708 16:57:33.216" starttime="20200708 16:57:33.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.217" starttime="20200708 16:57:33.216"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.217" starttime="20200708 16:57:33.156"></status>
</kw>
<kw type="foritem" name="${INDEX} = 82">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.219" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.277" level="INFO">${stdout} = Story test created
ID : ehin6t1i6co38d1n6srg8g8q508kah0m</msg>
<status status="PASS" endtime="20200708 16:57:33.277" starttime="20200708 16:57:33.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.278" starttime="20200708 16:57:33.277"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.278" starttime="20200708 16:57:33.218"></status>
</kw>
<kw type="foritem" name="${INDEX} = 83">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.280" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.336" level="INFO">${stdout} = Story test created
ID : ehin6t1i70s3cdhg64p308q00h7h06ai</msg>
<status status="PASS" endtime="20200708 16:57:33.336" starttime="20200708 16:57:33.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.338" starttime="20200708 16:57:33.337"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.338" starttime="20200708 16:57:33.278"></status>
</kw>
<kw type="foritem" name="${INDEX} = 84">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.339" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.404" level="INFO">${stdout} = Story test created
ID : ehin6t1j6gs3echo68s34i8o343h6eh6</msg>
<status status="PASS" endtime="20200708 16:57:33.404" starttime="20200708 16:57:33.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.406" starttime="20200708 16:57:33.405"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.406" starttime="20200708 16:57:33.338"></status>
</kw>
<kw type="foritem" name="${INDEX} = 85">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.407" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.478" level="INFO">${stdout} = Story test created
ID : ehin6t1k64rjcchi6ooh6lhv6kvlcfhe</msg>
<status status="PASS" endtime="20200708 16:57:33.478" starttime="20200708 16:57:33.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.479" starttime="20200708 16:57:33.479"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.480" starttime="20200708 16:57:33.406"></status>
</kw>
<kw type="foritem" name="${INDEX} = 86">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.481" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.557" level="INFO">${stdout} = Story test created
ID : ehin6t1k74qjae1m6kr428pcao4huo0a</msg>
<status status="PASS" endtime="20200708 16:57:33.557" starttime="20200708 16:57:33.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.559" starttime="20200708 16:57:33.558"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.559" starttime="20200708 16:57:33.480"></status>
</kw>
<kw type="foritem" name="${INDEX} = 87">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.560" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.627" level="INFO">${stdout} = Story test created
ID : ehin6t1l6sp30d1g6gpkqkgvc8ejqmgb</msg>
<status status="PASS" endtime="20200708 16:57:33.627" starttime="20200708 16:57:33.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.628" starttime="20200708 16:57:33.627"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.628" starttime="20200708 16:57:33.559"></status>
</kw>
<kw type="foritem" name="${INDEX} = 88">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.630" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.685" level="INFO">${stdout} = Story test created
ID : ehin6t1m6csj2e9h64sjuo2t94v1uka7</msg>
<status status="PASS" endtime="20200708 16:57:33.685" starttime="20200708 16:57:33.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.686" starttime="20200708 16:57:33.686"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.686" starttime="20200708 16:57:33.629"></status>
</kw>
<kw type="foritem" name="${INDEX} = 89">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.688" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.764" level="INFO">${stdout} = Story test created
ID : ehin6t1m74qjgdpg6cs5ck1c054le59e</msg>
<status status="PASS" endtime="20200708 16:57:33.764" starttime="20200708 16:57:33.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.766" starttime="20200708 16:57:33.765"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.766" starttime="20200708 16:57:33.687"></status>
</kw>
<kw type="foritem" name="${INDEX} = 90">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.768" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.829" level="INFO">${stdout} = Story test created
ID : ehin6t1n6ss3ichi6ork0dim3cmlqh88</msg>
<status status="PASS" endtime="20200708 16:57:33.829" starttime="20200708 16:57:33.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.830" starttime="20200708 16:57:33.829"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.830" starttime="20200708 16:57:33.766"></status>
</kw>
<kw type="foritem" name="${INDEX} = 91">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.831" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.889" level="INFO">${stdout} = Story test created
ID : ehin6t1o6cs34e9o68qjil1a7cs1450q</msg>
<status status="PASS" endtime="20200708 16:57:33.889" starttime="20200708 16:57:33.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.891" starttime="20200708 16:57:33.889"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.891" starttime="20200708 16:57:33.830"></status>
</kw>
<kw type="foritem" name="${INDEX} = 92">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.893" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:33.984" level="INFO">${stdout} = Story test created
ID : ehin6t1p60qjec9g70olsn2k9k91qn2k</msg>
<status status="PASS" endtime="20200708 16:57:33.985" starttime="20200708 16:57:33.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:33.987" starttime="20200708 16:57:33.985"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:33.987" starttime="20200708 16:57:33.891"></status>
</kw>
<kw type="foritem" name="${INDEX} = 93">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:33.989" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.061" level="INFO">${stdout} = Story test created
ID : ehin6t1p74sj8dhh68o3eao974fg8o1i</msg>
<status status="PASS" endtime="20200708 16:57:34.061" starttime="20200708 16:57:33.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.063" starttime="20200708 16:57:34.062"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.063" starttime="20200708 16:57:33.987"></status>
</kw>
<kw type="foritem" name="${INDEX} = 94">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.065" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.136" level="INFO">${stdout} = Story test created
ID : ehin6t1g6ss34c1p6co3kmq28gpk8k01</msg>
<status status="PASS" endtime="20200708 16:57:34.137" starttime="20200708 16:57:34.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.138" starttime="20200708 16:57:34.137"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.138" starttime="20200708 16:57:34.063"></status>
</kw>
<kw type="foritem" name="${INDEX} = 95">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.141" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.212" level="INFO">${stdout} = Story test created
ID : ehin6t1h6kpj0cpo70q5ga847gl200o2</msg>
<status status="PASS" endtime="20200708 16:57:34.212" starttime="20200708 16:57:34.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.213" starttime="20200708 16:57:34.212"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.213" starttime="20200708 16:57:34.139"></status>
</kw>
<kw type="foritem" name="${INDEX} = 96">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.214" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.228" level="INFO">${stdout} = Story test created
ID : ehin6t1i68p34chp6or4ee287kul6214</msg>
<status status="PASS" endtime="20200708 16:57:34.228" starttime="20200708 16:57:34.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.228" starttime="20200708 16:57:34.228"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.228" starttime="20200708 16:57:34.213"></status>
</kw>
<kw type="foritem" name="${INDEX} = 97">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.229" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.237" level="INFO">${stdout} = Story test created
ID : ehin6t1i6cpjic1j74ql609nb451ag2t</msg>
<status status="PASS" endtime="20200708 16:57:34.237" starttime="20200708 16:57:34.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.238" starttime="20200708 16:57:34.237"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.238" starttime="20200708 16:57:34.228"></status>
</kw>
<kw type="foritem" name="${INDEX} = 98">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.238" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.245" level="INFO">${stdout} = Story test created
ID : ehin6t1i6gp30e9n74om4h221p6g0j0t</msg>
<status status="PASS" endtime="20200708 16:57:34.245" starttime="20200708 16:57:34.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.246" starttime="20200708 16:57:34.245"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.246" starttime="20200708 16:57:34.238"></status>
</kw>
<kw type="foritem" name="${INDEX} = 99">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.246" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.253" level="INFO">${stdout} = Story test created
ID : ehin6t1i6gsjecho6go0c12n883307gn</msg>
<status status="PASS" endtime="20200708 16:57:34.253" starttime="20200708 16:57:34.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:57:34.253" starttime="20200708 16:57:34.253"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.253" starttime="20200708 16:57:34.246"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.253" starttime="20200708 16:57:30.397"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:57:34.254" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:57:34.280" level="INFO">${stdout} = ehin6t1k74qjae1m6kr428pcao4huo0a		test
ehin6t1n68p3edhg64sgumpj64thu99b		test
ehin6t1o6krjie1m6kq5cfa56kgkcaq4		test
ehin6t1o74rj2cpn60pi69qm2l92cl0e		test
ehin6t1p74sj8dhh68o3eao974fg8o1i		test
ehin6...</msg>
<status status="PASS" endtime="20200708 16:57:34.280" starttime="20200708 16:57:34.253"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${nbL}</var>
</assign>
<msg timestamp="20200708 16:57:34.281" level="INFO">100 lines</msg>
<msg timestamp="20200708 16:57:34.281" level="INFO">${nbL} = 100</msg>
<status status="PASS" endtime="20200708 16:57:34.281" starttime="20200708 16:57:34.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${nbL}</arg>
<arg>100</arg>
</arguments>
<msg timestamp="20200708 16:57:34.281" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:57:34.281" starttime="20200708 16:57:34.281"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.281" critical="yes" starttime="20200708 16:57:30.396"></status>
</test>
<test id="s1-t17" name="Remove db random">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:57:34.282" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:57:34.282" level="INFO">1 directory.</msg>
<msg timestamp="20200708 16:57:34.282" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200708 16:57:34.282" starttime="20200708 16:57:34.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 16:57:34.283" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:57:34.283" starttime="20200708 16:57:34.282"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:57:34.286" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:57:34.286" starttime="20200708 16:57:34.283"></status>
</kw>
<status status="PASS" endtime="20200708 16:57:34.286" critical="yes" starttime="20200708 16:57:34.282"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200708 16:57:34.287" starttime="20200708 16:57:29.823"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="17">Critical Tests</stat>
<stat fail="0" pass="17">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="17">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
