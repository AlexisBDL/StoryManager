<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200529 11:46:43.363" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.390" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.402" level="INFO">${stdout} = ehin6t1j74q30e1h6oqj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200529 11:46:43.402" starttime="20200529 11:46:43.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.402" starttime="20200529 11:46:43.402"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200529 11:46:43.403" level="INFO">${id} = ehin6t1j74q30e1h6oqj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.403" starttime="20200529 11:46:43.402"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.403" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.408" level="INFO">${stdout} = ehin6t1j74q30e1h6oqj4d1j64o3ed1j		test</msg>
<status status="PASS" endtime="20200529 11:46:43.408" starttime="20200529 11:46:43.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<msg timestamp="20200529 11:46:43.409" level="INFO">ehin6t1j74q30e1h6oqj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.409" starttime="20200529 11:46:43.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.409" starttime="20200529 11:46:43.409"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.410" level="INFO">Running command './StoryManager story show ehin6t1j74q30e1h6oqj4d1j64o3ed1j 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.414" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-05-29T09:46:43Z",
    message: "Create new story : test",
  },
  parents: set {},
  value: struct Story {
    ...</msg>
<status status="PASS" endtime="20200529 11:46:43.415" starttime="20200529 11:46:43.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.415" starttime="20200529 11:46:43.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.415" starttime="20200529 11:46:43.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.416" starttime="20200529 11:46:43.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.416" starttime="20200529 11:46:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.416" starttime="20200529 11:46:43.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.416" starttime="20200529 11:46:43.416"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.417" critical="yes" starttime="20200529 11:46:43.390"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.417" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.423" level="INFO">${stdout} = ehin6t1k68oj0e9m64qj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200529 11:46:43.423" starttime="20200529 11:46:43.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.424" starttime="20200529 11:46:43.424"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200529 11:46:43.424" level="INFO">${id} = ehin6t1k68oj0e9m64qj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.424" starttime="20200529 11:46:43.424"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200529 11:46:43.425" level="INFO">Running command './StoryManager story show ehin6t1k68oj0e9m64qj4d1j64o3ed1j.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.430" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200529 11:46:43.430" starttime="20200529 11:46:43.424"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.430" starttime="20200529 11:46:43.430"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.431" level="INFO">Running command './StoryManager story edit ehin6t1k68oj0e9m64qj4d1j64o3ed1j -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.439" level="INFO">${stdout} = New head #5lls2cimtaidn8s91ftkhhutsmpsmdls (was #vltc08hm8nupti7qtm3b8v0eh8sc8k6p)
ehin6t1k68oj0e9m64qj4d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200529 11:46:43.439" starttime="20200529 11:46:43.430"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200529 11:46:43.440" level="INFO">Running command './StoryManager story show ehin6t1k68oj0e9m64qj4d1j64o3ed1j.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.445" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200529 11:46:43.445" starttime="20200529 11:46:43.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.446" starttime="20200529 11:46:43.446"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.446" critical="yes" starttime="20200529 11:46:43.417"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.447" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.453" level="INFO">${stdout} = ehin6t1k6ko3ce9p60qj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200529 11:46:43.453" starttime="20200529 11:46:43.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.453" starttime="20200529 11:46:43.453"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200529 11:46:43.454" level="INFO">${id} = ehin6t1k6ko3ce9p60qj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.454" starttime="20200529 11:46:43.453"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200529 11:46:43.454" level="INFO">Running command './StoryManager story show ehin6t1k6ko3ce9p60qj4d1j64o3ed1j.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.459" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200529 11:46:43.459" starttime="20200529 11:46:43.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.460" starttime="20200529 11:46:43.459"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.460" level="INFO">Running command './StoryManager story edit ehin6t1k6ko3ce9p60qj4d1j64o3ed1j -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.469" level="INFO">${stdout} = New head #n3024hl9dtpf7ndv8oi5mibvu84ouk3v (was #vltc08hm8nupti7qtm3b8v0eh8sc8k6p)
ehin6t1k6ko3ce9p60qj4d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200529 11:46:43.469" starttime="20200529 11:46:43.460"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200529 11:46:43.470" level="INFO">Running command './StoryManager story show ehin6t1k6ko3ce9p60qj4d1j64o3ed1j.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.475" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200529 11:46:43.475" starttime="20200529 11:46:43.469"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.476" starttime="20200529 11:46:43.475"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.476" critical="yes" starttime="20200529 11:46:43.446"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.477" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.483" level="INFO">${stdout} = ehin6t1k70oj2e1j74rj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200529 11:46:43.483" starttime="20200529 11:46:43.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.484" starttime="20200529 11:46:43.484"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200529 11:46:43.484" level="INFO">${id} = ehin6t1k70oj2e1j74rj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.484" starttime="20200529 11:46:43.484"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200529 11:46:43.485" level="INFO">Running command './StoryManager story show ehin6t1k70oj2e1j74rj4d1j64o3ed1j.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.490" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200529 11:46:43.490" starttime="20200529 11:46:43.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.490" starttime="20200529 11:46:43.490"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.491" level="INFO">Running command './StoryManager story edit ehin6t1k70oj2e1j74rj4d1j64o3ed1j -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.499" level="INFO">${stdout} = New head #qd5thpnc4sicqmcbotu6pt85aesvcpg9 (was #vltc08hm8nupti7qtm3b8v0eh8sc8k6p)
ehin6t1k70oj2e1j74rj4d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200529 11:46:43.499" starttime="20200529 11:46:43.491"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200529 11:46:43.500" level="INFO">Running command './StoryManager story show ehin6t1k70oj2e1j74rj4d1j64o3ed1j.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.507" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200529 11:46:43.507" starttime="20200529 11:46:43.499"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.508" starttime="20200529 11:46:43.508"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.508" critical="yes" starttime="20200529 11:46:43.476"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.509" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.516" level="INFO">${stdout} = ehin6t1l64q32d9p64sj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200529 11:46:43.516" starttime="20200529 11:46:43.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.517" starttime="20200529 11:46:43.517"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200529 11:46:43.517" level="INFO">${id} = ehin6t1l64q32d9p64sj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200529 11:46:43.517" starttime="20200529 11:46:43.517"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200529 11:46:43.518" level="INFO">Running command './StoryManager story show ehin6t1l64q32d9p64sj4d1j64o3ed1j.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.523" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200529 11:46:43.523" starttime="20200529 11:46:43.517"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.524" starttime="20200529 11:46:43.523"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.524" level="INFO">Running command './StoryManager story close ehin6t1l64q32d9p64sj4d1j64o3ed1j 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.531" level="INFO">${stdout} = New head #l0ui6mfi98j99ffld75ioqel07oecisv (was #vltc08hm8nupti7qtm3b8v0eh8sc8k6p)
ehin6t1l64q32d9p64sj4d1j64o3ed1j closed</msg>
<status status="PASS" endtime="20200529 11:46:43.531" starttime="20200529 11:46:43.524"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200529 11:46:43.532" level="INFO">Running command './StoryManager story show ehin6t1l64q32d9p64sj4d1j64o3ed1j.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.538" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200529 11:46:43.538" starttime="20200529 11:46:43.531"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.539" starttime="20200529 11:46:43.538"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.539" critical="yes" starttime="20200529 11:46:43.509"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200529 11:46:43.540" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200529 11:46:43.545" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200529 11:46:43.545" starttime="20200529 11:46:43.540"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200529 11:46:43.545" starttime="20200529 11:46:43.545"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.545" critical="yes" starttime="20200529 11:46:43.539"></status>
</test>
<test id="s1-t7" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200529 11:46:43.546" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200529 11:46:43.546" level="INFO">1 directory.</msg>
<msg timestamp="20200529 11:46:43.546" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200529 11:46:43.546" starttime="20200529 11:46:43.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200529 11:46:43.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200529 11:46:43.547" starttime="20200529 11:46:43.547"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200529 11:46:43.548" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200529 11:46:43.548" starttime="20200529 11:46:43.547"></status>
</kw>
<status status="PASS" endtime="20200529 11:46:43.548" critical="yes" starttime="20200529 11:46:43.546"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200529 11:46:43.548" starttime="20200529 11:46:43.364"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="7">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
