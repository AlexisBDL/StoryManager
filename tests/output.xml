<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200526 09:56:38.559" generator="Robot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.582" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.595" level="INFO">${stdout} = ehin6t1l70r34d9k60p34d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200526 09:56:38.595" starttime="20200526 09:56:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.597" starttime="20200526 09:56:38.596"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200526 09:56:38.598" level="INFO">${id} = ehin6t1l70r34d9k60p34d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.598" starttime="20200526 09:56:38.597"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.599" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.608" level="INFO">${stdout} = ehin6t1l70r34d9k60p34d1j64o3ed1j		test</msg>
<status status="PASS" endtime="20200526 09:56:38.608" starttime="20200526 09:56:38.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${id}</arg>
</arguments>
<msg timestamp="20200526 09:56:38.609" level="INFO">ehin6t1l70r34d9k60p34d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.609" starttime="20200526 09:56:38.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.610" starttime="20200526 09:56:38.609"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.611" level="INFO">Running command './StoryManager story show ehin6t1l70r34d9k60p34d1j64o3ed1j 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.622" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-05-26T07:56:38Z",
    message: "Create new story : test",
  },
  parents: set {},
  value: struct Story {
    ...</msg>
<status status="PASS" endtime="20200526 09:56:38.622" starttime="20200526 09:56:38.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.622" starttime="20200526 09:56:38.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.623" starttime="20200526 09:56:38.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.624" starttime="20200526 09:56:38.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.625" starttime="20200526 09:56:38.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.626" starttime="20200526 09:56:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.626" starttime="20200526 09:56:38.626"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.627" critical="yes" starttime="20200526 09:56:38.581"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.629" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.640" level="INFO">${stdout} = ehin6t1m6crj2e1j60oj4d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200526 09:56:38.640" starttime="20200526 09:56:38.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.641" starttime="20200526 09:56:38.640"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200526 09:56:38.641" level="INFO">${id} = ehin6t1m6crj2e1j60oj4d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.641" starttime="20200526 09:56:38.641"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200526 09:56:38.642" level="INFO">Running command './StoryManager story show ehin6t1m6crj2e1j60oj4d1j64o3ed1j.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.648" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200526 09:56:38.648" starttime="20200526 09:56:38.641"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.649" starttime="20200526 09:56:38.649"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.650" level="INFO">Running command './StoryManager story edit ehin6t1m6crj2e1j60oj4d1j64o3ed1j -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.658" level="INFO">${stdout} = New head #4d1gf10am356btbfovehqpqfu0u33d8v (was #pr873bkfhvd8dhvd08loufbf2s0kn5np)
ehin6t1m6crj2e1j60oj4d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200526 09:56:38.659" starttime="20200526 09:56:38.649"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200526 09:56:38.660" level="INFO">Running command './StoryManager story show ehin6t1m6crj2e1j60oj4d1j64o3ed1j.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.665" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200526 09:56:38.665" starttime="20200526 09:56:38.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.666" starttime="20200526 09:56:38.665"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.666" critical="yes" starttime="20200526 09:56:38.627"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.667" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.673" level="INFO">${stdout} = ehin6t1m6so3ichm6cp34d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200526 09:56:38.673" starttime="20200526 09:56:38.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.674" starttime="20200526 09:56:38.674"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200526 09:56:38.674" level="INFO">${id} = ehin6t1m6so3ichm6cp34d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.674" starttime="20200526 09:56:38.674"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200526 09:56:38.675" level="INFO">Running command './StoryManager story show ehin6t1m6so3ichm6cp34d1j64o3ed1j.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.681" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200526 09:56:38.681" starttime="20200526 09:56:38.674"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.681" starttime="20200526 09:56:38.681"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.682" level="INFO">Running command './StoryManager story edit ehin6t1m6so3ichm6cp34d1j64o3ed1j -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.689" level="INFO">${stdout} = New head #jn02pq4p9q9o97haif5b9h1efbaibf81 (was #pr873bkfhvd8dhvd08loufbf2s0kn5np)
ehin6t1m6so3ichm6cp34d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200526 09:56:38.689" starttime="20200526 09:56:38.681"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200526 09:56:38.689" level="INFO">Running command './StoryManager story show ehin6t1m6so3ichm6cp34d1j64o3ed1j.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.696" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200526 09:56:38.696" starttime="20200526 09:56:38.689"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.697" starttime="20200526 09:56:38.696"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.697" critical="yes" starttime="20200526 09:56:38.666"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.698" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.706" level="INFO">${stdout} = ehin6t1n60pj0d1i6cq34d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200526 09:56:38.706" starttime="20200526 09:56:38.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.707" starttime="20200526 09:56:38.707"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200526 09:56:38.707" level="INFO">${id} = ehin6t1n60pj0d1i6cq34d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.708" starttime="20200526 09:56:38.707"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200526 09:56:38.708" level="INFO">Running command './StoryManager story show ehin6t1n60pj0d1i6cq34d1j64o3ed1j.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.714" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200526 09:56:38.714" starttime="20200526 09:56:38.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.714" starttime="20200526 09:56:38.714"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.714" level="INFO">Running command './StoryManager story edit ehin6t1n60pj0d1i6cq34d1j64o3ed1j -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.723" level="INFO">${stdout} = New head #jme4870eq5se5fl4onrevnmatmq551v7 (was #pr873bkfhvd8dhvd08loufbf2s0kn5np)
ehin6t1n60pj0d1i6cq34d1j64o3ed1j edited</msg>
<status status="PASS" endtime="20200526 09:56:38.723" starttime="20200526 09:56:38.714"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200526 09:56:38.724" level="INFO">Running command './StoryManager story show ehin6t1n60pj0d1i6cq34d1j64o3ed1j.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.730" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200526 09:56:38.730" starttime="20200526 09:56:38.723"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.731" starttime="20200526 09:56:38.730"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.731" critical="yes" starttime="20200526 09:56:38.697"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.732" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.739" level="INFO">${stdout} = ehin6t1n6cr32d1m70r34d1j64o3ed1j was created</msg>
<status status="PASS" endtime="20200526 09:56:38.739" starttime="20200526 09:56:38.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>was created</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.739" starttime="20200526 09:56:38.739"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
<arg>-12</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200526 09:56:38.740" level="INFO">${id} = ehin6t1n6cr32d1m70r34d1j64o3ed1j</msg>
<status status="PASS" endtime="20200526 09:56:38.740" starttime="20200526 09:56:38.739"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200526 09:56:38.740" level="INFO">Running command './StoryManager story show ehin6t1n6cr32d1m70r34d1j64o3ed1j.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.746" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200526 09:56:38.746" starttime="20200526 09:56:38.740"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.747" starttime="20200526 09:56:38.746"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.747" level="INFO">Running command './StoryManager story close ehin6t1n6cr32d1m70r34d1j64o3ed1j 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.757" level="INFO">${stdout} = New head #ucdm8qd28lqac5t91s3kp8p3ue05leda (was #pr873bkfhvd8dhvd08loufbf2s0kn5np)
ehin6t1n6cr32d1m70r34d1j64o3ed1j closed</msg>
<status status="PASS" endtime="20200526 09:56:38.758" starttime="20200526 09:56:38.747"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200526 09:56:38.758" level="INFO">Running command './StoryManager story show ehin6t1n6cr32d1m70r34d1j64o3ed1j.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.765" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200526 09:56:38.765" starttime="20200526 09:56:38.758"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.766" starttime="20200526 09:56:38.766"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.766" critical="yes" starttime="20200526 09:56:38.731"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200526 09:56:38.767" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200526 09:56:38.772" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200526 09:56:38.772" starttime="20200526 09:56:38.767"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200526 09:56:38.773" starttime="20200526 09:56:38.772"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.773" critical="yes" starttime="20200526 09:56:38.766"></status>
</test>
<test id="s1-t7" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200526 09:56:38.774" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200526 09:56:38.774" level="INFO">1 directory.</msg>
<msg timestamp="20200526 09:56:38.774" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200526 09:56:38.774" starttime="20200526 09:56:38.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200526 09:56:38.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200526 09:56:38.774" starttime="20200526 09:56:38.774"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200526 09:56:38.775" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200526 09:56:38.776" starttime="20200526 09:56:38.774"></status>
</kw>
<status status="PASS" endtime="20200526 09:56:38.777" critical="yes" starttime="20200526 09:56:38.773"></status>
</test>
<doc>Tests of StoryManager</doc>
<status status="PASS" endtime="20200526 09:56:38.777" starttime="20200526 09:56:38.560"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="7">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
