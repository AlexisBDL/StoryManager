<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200623 15:50:31.053" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.077" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.089" level="INFO">${stdout} = Story test created
ID : ehin6t1g70oj0d9h60shgbg57kmhac1c</msg>
<status status="PASS" endtime="20200623 15:50:31.089" starttime="20200623 15:50:31.077"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 15:50:31.090" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200623 15:50:31.090" starttime="20200623 15:50:31.089"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.090" level="INFO">${id} = ID : ehin6t1g70oj0d9h60shgbg57kmhac1c</msg>
<status status="PASS" endtime="20200623 15:50:31.090" starttime="20200623 15:50:31.090"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.091" level="INFO">${id} = ehin6t1g70oj0d9h60shgbg57kmhac1c</msg>
<status status="PASS" endtime="20200623 15:50:31.091" starttime="20200623 15:50:31.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.091" starttime="20200623 15:50:31.091"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.091" level="INFO">Running command './StoryManager story show ehin6t1g70oj0d9h60shgbg57kmhac1c 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.096" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-06-23T13:50:31Z",
    message: "Create new story test with ID ehin6t1g70oj0d9h60shgbg57kmhac1c",
  },
  parent...</msg>
<status status="PASS" endtime="20200623 15:50:31.096" starttime="20200623 15:50:31.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.097" starttime="20200623 15:50:31.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.097" starttime="20200623 15:50:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.097" starttime="20200623 15:50:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.097" starttime="20200623 15:50:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.098" starttime="20200623 15:50:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.098" starttime="20200623 15:50:31.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.098" starttime="20200623 15:50:31.098"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.098" critical="yes" starttime="20200623 15:50:31.077"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.099" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.105" level="INFO">${stdout} = Story test created
ID : ehin6t1h60p3cc1k6cqledap60qg47iv</msg>
<status status="PASS" endtime="20200623 15:50:31.105" starttime="20200623 15:50:31.099"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.106" level="INFO">${id} = ID : ehin6t1h60p3cc1k6cqledap60qg47iv</msg>
<status status="PASS" endtime="20200623 15:50:31.106" starttime="20200623 15:50:31.105"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.106" level="INFO">${id} = ehin6t1h60p3cc1k6cqledap60qg47iv</msg>
<status status="PASS" endtime="20200623 15:50:31.106" starttime="20200623 15:50:31.106"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 15:50:31.106" level="INFO">Running command './StoryManager story show ehin6t1h60p3cc1k6cqledap60qg47iv.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.111" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200623 15:50:31.111" starttime="20200623 15:50:31.106"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.111" starttime="20200623 15:50:31.111"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.112" level="INFO">Running command './StoryManager story edit ehin6t1h60p3cc1k6cqledap60qg47iv -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.118" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1h60p3cc1k6cqledap60qg47iv</msg>
<status status="PASS" endtime="20200623 15:50:31.118" starttime="20200623 15:50:31.112"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 15:50:31.119" level="INFO">Running command './StoryManager story show ehin6t1h60p3cc1k6cqledap60qg47iv.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.123" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200623 15:50:31.124" starttime="20200623 15:50:31.119"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.124" starttime="20200623 15:50:31.124"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.124" critical="yes" starttime="20200623 15:50:31.099"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.125" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.131" level="INFO">${stdout} = Story test created
ID : ehin6t1h68s36c1n6gqkg5hi997iq1g5</msg>
<status status="PASS" endtime="20200623 15:50:31.131" starttime="20200623 15:50:31.125"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.131" level="INFO">${id} = ID : ehin6t1h68s36c1n6gqkg5hi997iq1g5</msg>
<status status="PASS" endtime="20200623 15:50:31.131" starttime="20200623 15:50:31.131"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.131" level="INFO">${id} = ehin6t1h68s36c1n6gqkg5hi997iq1g5</msg>
<status status="PASS" endtime="20200623 15:50:31.132" starttime="20200623 15:50:31.131"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 15:50:31.132" level="INFO">Running command './StoryManager story show ehin6t1h68s36c1n6gqkg5hi997iq1g5.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.137" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200623 15:50:31.137" starttime="20200623 15:50:31.132"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.137" starttime="20200623 15:50:31.137"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.138" level="INFO">Running command './StoryManager story edit ehin6t1h68s36c1n6gqkg5hi997iq1g5 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.144" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1h68s36c1n6gqkg5hi997iq1g5</msg>
<status status="PASS" endtime="20200623 15:50:31.144" starttime="20200623 15:50:31.137"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 15:50:31.145" level="INFO">Running command './StoryManager story show ehin6t1h68s36c1n6gqkg5hi997iq1g5.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.149" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200623 15:50:31.149" starttime="20200623 15:50:31.144"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.150" starttime="20200623 15:50:31.149"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.150" critical="yes" starttime="20200623 15:50:31.124"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.151" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.156" level="INFO">${stdout} = Story test created
ID : ehin6t1h6kq34dhi6so1cl835113kc2q</msg>
<status status="PASS" endtime="20200623 15:50:31.156" starttime="20200623 15:50:31.150"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.157" level="INFO">${id} = ID : ehin6t1h6kq34dhi6so1cl835113kc2q</msg>
<status status="PASS" endtime="20200623 15:50:31.157" starttime="20200623 15:50:31.156"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.157" level="INFO">${id} = ehin6t1h6kq34dhi6so1cl835113kc2q</msg>
<status status="PASS" endtime="20200623 15:50:31.157" starttime="20200623 15:50:31.157"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 15:50:31.158" level="INFO">Running command './StoryManager story show ehin6t1h6kq34dhi6so1cl835113kc2q.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.162" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200623 15:50:31.162" starttime="20200623 15:50:31.157"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.162" starttime="20200623 15:50:31.162"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.163" level="INFO">Running command './StoryManager story edit ehin6t1h6kq34dhi6so1cl835113kc2q -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.169" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1h6kq34dhi6so1cl835113kc2q</msg>
<status status="PASS" endtime="20200623 15:50:31.169" starttime="20200623 15:50:31.163"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 15:50:31.170" level="INFO">Running command './StoryManager story show ehin6t1h6kq34dhi6so1cl835113kc2q.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.175" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200623 15:50:31.175" starttime="20200623 15:50:31.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.175" starttime="20200623 15:50:31.175"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.175" critical="yes" starttime="20200623 15:50:31.150"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.176" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.182" level="INFO">${stdout} = Story test created
ID : ehin6t1h6ssjachp68q18e9s8924e12q</msg>
<status status="PASS" endtime="20200623 15:50:31.182" starttime="20200623 15:50:31.176"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.182" level="INFO">${id} = ID : ehin6t1h6ssjachp68q18e9s8924e12q</msg>
<status status="PASS" endtime="20200623 15:50:31.182" starttime="20200623 15:50:31.182"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.183" level="INFO">${id} = ehin6t1h6ssjachp68q18e9s8924e12q</msg>
<status status="PASS" endtime="20200623 15:50:31.183" starttime="20200623 15:50:31.182"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 15:50:31.183" level="INFO">Running command './StoryManager story show ehin6t1h6ssjachp68q18e9s8924e12q.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.189" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200623 15:50:31.189" starttime="20200623 15:50:31.183"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.190" starttime="20200623 15:50:31.190"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.191" level="INFO">Running command './StoryManager story close ehin6t1h6ssjachp68q18e9s8924e12q 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.198" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200623 15:50:31.198" starttime="20200623 15:50:31.190"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 15:50:31.198" level="INFO">Running command './StoryManager story show ehin6t1h6ssjachp68q18e9s8924e12q.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.203" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200623 15:50:31.203" starttime="20200623 15:50:31.198"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.204" starttime="20200623 15:50:31.204"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.204" level="INFO">Running command './StoryManager story edit ehin6t1h6ssjachp68q18e9s8924e12q -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.209" level="INFO">${stdout} = The story ehin6t1h6ssjachp68q18e9s8924e12q is close, you can't modify it</msg>
<status status="PASS" endtime="20200623 15:50:31.209" starttime="20200623 15:50:31.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.210" starttime="20200623 15:50:31.210"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.210" critical="yes" starttime="20200623 15:50:31.175"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.211" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.215" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200623 15:50:31.215" starttime="20200623 15:50:31.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.215" starttime="20200623 15:50:31.215"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.215" critical="yes" starttime="20200623 15:50:31.210"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.216" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.222" level="INFO">${stdout} = Story test created
ID : ehin6t1i64sjae1l74p60g3061a1oiaq</msg>
<status status="PASS" endtime="20200623 15:50:31.222" starttime="20200623 15:50:31.216"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.223" level="INFO">${id} = ID : ehin6t1i64sjae1l74p60g3061a1oiaq</msg>
<status status="PASS" endtime="20200623 15:50:31.223" starttime="20200623 15:50:31.222"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.223" level="INFO">${id} = ehin6t1i64sjae1l74p60g3061a1oiaq</msg>
<status status="PASS" endtime="20200623 15:50:31.223" starttime="20200623 15:50:31.223"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.224" level="INFO">Running command './StoryManager story Tadd ehin6t1i64sjae1l74p60g3061a1oiaq task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.233" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i64sjae1l74p60g3061a1oiaq</msg>
<status status="PASS" endtime="20200623 15:50:31.233" starttime="20200623 15:50:31.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.233" starttime="20200623 15:50:31.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.234" starttime="20200623 15:50:31.233"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.234" level="INFO">Running command './StoryManager story show ehin6t1i64sjae1l74p60g3061a1oiaq -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.239" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200623 15:50:31.239" starttime="20200623 15:50:31.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.239" starttime="20200623 15:50:31.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.240" starttime="20200623 15:50:31.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.240" starttime="20200623 15:50:31.240"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.240" critical="yes" starttime="20200623 15:50:31.216"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.241" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.247" level="INFO">${stdout} = Story test created
ID : ehin6t1i6gq3ad1i6kq0k2afaoo1m89s</msg>
<status status="PASS" endtime="20200623 15:50:31.247" starttime="20200623 15:50:31.241"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.247" level="INFO">${id} = ID : ehin6t1i6gq3ad1i6kq0k2afaoo1m89s</msg>
<status status="PASS" endtime="20200623 15:50:31.248" starttime="20200623 15:50:31.247"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.248" level="INFO">${id} = ehin6t1i6gq3ad1i6kq0k2afaoo1m89s</msg>
<status status="PASS" endtime="20200623 15:50:31.248" starttime="20200623 15:50:31.248"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.248" level="INFO">Running command './StoryManager story Tadd ehin6t1i6gq3ad1i6kq0k2afaoo1m89s task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.257" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i6gq3ad1i6kq0k2afaoo1m89s</msg>
<status status="PASS" endtime="20200623 15:50:31.257" starttime="20200623 15:50:31.248"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.258" level="INFO">Running command './StoryManager story Tedit ehin6t1i6gq3ad1i6kq0k2afaoo1m89s 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.269" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1i6gq3ad1i6kq0k2afaoo1m89s</msg>
<status status="PASS" endtime="20200623 15:50:31.269" starttime="20200623 15:50:31.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.269" starttime="20200623 15:50:31.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.270" starttime="20200623 15:50:31.269"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.270" level="INFO">Running command './StoryManager story show ehin6t1i6gq3ad1i6kq0k2afaoo1m89s -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.275" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200623 15:50:31.275" starttime="20200623 15:50:31.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.275" starttime="20200623 15:50:31.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.276" starttime="20200623 15:50:31.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.276" starttime="20200623 15:50:31.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.276" starttime="20200623 15:50:31.276"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.276" critical="yes" starttime="20200623 15:50:31.240"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.277" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.283" level="INFO">${stdout} = Story test created
ID : ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.283" starttime="20200623 15:50:31.277"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.284" level="INFO">${id} = ID : ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.284" starttime="20200623 15:50:31.284"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.285" level="INFO">${id} = ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.285" starttime="20200623 15:50:31.284"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.285" level="INFO">Running command './StoryManager story Tadd ehin6t1i70o3ae1l6srle51ma07266i9 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.295" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.295" starttime="20200623 15:50:31.285"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.296" level="INFO">Running command './StoryManager story Tadd ehin6t1i70o3ae1l6srle51ma07266i9 task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.306" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.306" starttime="20200623 15:50:31.296"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.307" level="INFO">Running command './StoryManager story Tedit ehin6t1i70o3ae1l6srle51ma07266i9 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.318" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1i70o3ae1l6srle51ma07266i9</msg>
<status status="PASS" endtime="20200623 15:50:31.318" starttime="20200623 15:50:31.306"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.319" level="INFO">Running command './StoryManager story Tsearch ehin6t1i70o3ae1l6srle51ma07266i9 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.324" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200623 15:50:31.324" starttime="20200623 15:50:31.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.324" starttime="20200623 15:50:31.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.325" starttime="20200623 15:50:31.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.325" starttime="20200623 15:50:31.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.325" starttime="20200623 15:50:31.325"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.326" starttime="20200623 15:50:31.325"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.326" critical="yes" starttime="20200623 15:50:31.277"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.327" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.333" level="INFO">${stdout} = Story test created
ID : ehin6t1j6co34d1g6co50kqaaou529j0</msg>
<status status="PASS" endtime="20200623 15:50:31.333" starttime="20200623 15:50:31.326"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 15:50:31.334" level="INFO">${id1} = ID : ehin6t1j6co34d1g6co50kqaaou529j0</msg>
<status status="PASS" endtime="20200623 15:50:31.334" starttime="20200623 15:50:31.333"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 15:50:31.334" level="INFO">${id1} = ehin6t1j6co34d1g6co50kqaaou529j0</msg>
<status status="PASS" endtime="20200623 15:50:31.334" starttime="20200623 15:50:31.334"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.335" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.341" level="INFO">${stdout} = Story test created
ID : ehin6t1j6cs36d1o74rk6io9a40j2li6</msg>
<status status="PASS" endtime="20200623 15:50:31.341" starttime="20200623 15:50:31.334"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 15:50:31.342" level="INFO">${id2} = ID : ehin6t1j6cs36d1o74rk6io9a40j2li6</msg>
<status status="PASS" endtime="20200623 15:50:31.342" starttime="20200623 15:50:31.341"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 15:50:31.342" level="INFO">${id2} = ehin6t1j6cs36d1o74rk6io9a40j2li6</msg>
<status status="PASS" endtime="20200623 15:50:31.342" starttime="20200623 15:50:31.342"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.342" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.406" level="INFO">${stdout} = Story test created
ID : ehin6t1j6gr30c9k6oo5ilae6p6h098n</msg>
<status status="PASS" endtime="20200623 15:50:31.406" starttime="20200623 15:50:31.342"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 15:50:31.407" level="INFO">${id3} = ID : ehin6t1j6gr30c9k6oo5ilae6p6h098n</msg>
<status status="PASS" endtime="20200623 15:50:31.407" starttime="20200623 15:50:31.406"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 15:50:31.408" level="INFO">${id3} = ehin6t1j6gr30c9k6oo5ilae6p6h098n</msg>
<status status="PASS" endtime="20200623 15:50:31.409" starttime="20200623 15:50:31.408"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.410" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.476" level="INFO">${stdout} = ehin6t1g70oj0d9h60shgbg57kmhac1c		test
ehin6t1h6kq34dhi6so1cl835113kc2q		new title
ehin6t1i64sjae1l74p60g3061a1oiaq		test
ehin6t1j6cs36d1o74rk6io9a40j2li6		test
ehin6t1h60p3cc1k6cqledap60qg47iv		test
...</msg>
<status status="PASS" endtime="20200623 15:50:31.476" starttime="20200623 15:50:31.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.478" starttime="20200623 15:50:31.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.479" starttime="20200623 15:50:31.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.480" starttime="20200623 15:50:31.480"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.481" critical="yes" starttime="20200623 15:50:31.326"></status>
</test>
<test id="s1-t11" name="Copy story duplicate">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.484" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.546" level="INFO">${stdout} = Story test created
ID : ehin6t1k74sj2cpn6oq4q02gbs5l80qp</msg>
<status status="PASS" endtime="20200623 15:50:31.546" starttime="20200623 15:50:31.483"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.549" level="INFO">${id} = ID : ehin6t1k74sj2cpn6oq4q02gbs5l80qp</msg>
<status status="PASS" endtime="20200623 15:50:31.549" starttime="20200623 15:50:31.547"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.551" level="INFO">${id} = ehin6t1k74sj2cpn6oq4q02gbs5l80qp</msg>
<status status="PASS" endtime="20200623 15:50:31.551" starttime="20200623 15:50:31.550"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.554" level="INFO">Running command './StoryManager story copy ehin6t1k74sj2cpn6oq4q02gbs5l80qp Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.608" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1l74sj2e9i60o1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.608" starttime="20200623 15:50:31.552"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 15:50:31.610" level="INFO">${idd} = Duplicate ID is : ehin6t1l74sj2e9i60o1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.611" starttime="20200623 15:50:31.609"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 15:50:31.613" level="INFO">${idd} = ehin6t1l74sj2e9i60o1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.613" starttime="20200623 15:50:31.611"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.615" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.711" level="INFO">${stdout} = ehin6t1i64sjae1l74p60g3061a1oiaq		test
ehin6t1j6gr30c9k6oo5ilae6p6h098n		test
ehin6t1k74sj2cpn6oq4q02gbs5l80qp		test
ehin6t1l74sj2e9i60o1ejgk5s6gu1oh		test
ehin6t1h60p3cc1k6cqledap60qg47iv		test
ehin6...</msg>
<status status="PASS" endtime="20200623 15:50:31.711" starttime="20200623 15:50:31.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.712" starttime="20200623 15:50:31.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.714" starttime="20200623 15:50:31.713"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.716" level="INFO">Running command './StoryManager story show ehin6t1k74sj2cpn6oq4q02gbs5l80qp.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.757" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 15:50:31.758" starttime="20200623 15:50:31.715"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200623 15:50:31.760" level="INFO">Running command './StoryManager story show ehin6t1l74sj2e9i60o1ejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.802" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 15:50:31.802" starttime="20200623 15:50:31.758"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:31.804" starttime="20200623 15:50:31.803"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:31.804" critical="yes" starttime="20200623 15:50:31.482"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.808" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.892" level="INFO">${stdout} = Story test created
ID : ehin6t1o68p3cchj6kr4ka9u09diu611</msg>
<status status="PASS" endtime="20200623 15:50:31.892" starttime="20200623 15:50:31.806"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.894" level="INFO">${id} = ID : ehin6t1o68p3cchj6kr4ka9u09diu611</msg>
<status status="PASS" endtime="20200623 15:50:31.894" starttime="20200623 15:50:31.893"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:31.896" level="INFO">${id} = ehin6t1o68p3cchj6kr4ka9u09diu611</msg>
<status status="PASS" endtime="20200623 15:50:31.896" starttime="20200623 15:50:31.895"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.898" level="INFO">Running command './StoryManager story copy ehin6t1o68p3cchj6kr4ka9u09diu611 Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.946" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1p6gp3ee1k74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.946" starttime="20200623 15:50:31.897"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 15:50:31.947" level="INFO">${idd} = Duplicate ID is : ehin6t1p6gp3ee1k74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.947" starttime="20200623 15:50:31.947"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 15:50:31.948" level="INFO">${idd} = ehin6t1p6gp3ee1k74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:31.948" starttime="20200623 15:50:31.947"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.948" level="INFO">Running command './StoryManager story edit ehin6t1o68p3cchj6kr4ka9u09diu611 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:31.987" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1o68p3cchj6kr4ka9u09diu611</msg>
<status status="PASS" endtime="20200623 15:50:31.987" starttime="20200623 15:50:31.948"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:31.987" level="INFO">Running command './StoryManager story edit ehin6t1p6gp3ee1k74ohejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:32.028" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1p6gp3ee1k74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:32.028" starttime="20200623 15:50:31.987"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:32.029" level="INFO">Running command './StoryManager story merge ehin6t1o68p3cchj6kr4ka9u09diu611 ehin6t1p6gp3ee1k74ohejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:32.090" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...rfvdhme8admdchl15m64cnag5i2o1a85
New ID : ehin6t1g6oq3ge1i6gphejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:32.090" starttime="20200623 15:50:32.028"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 15:50:32.092" level="INFO">${idm} = New ID : ehin6t1g6oq3ge1i6gphejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:32.092" starttime="20200623 15:50:32.091"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 15:50:32.093" level="INFO">${idm} = ehin6t1g6oq3ge1i6gphejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 15:50:32.093" starttime="20200623 15:50:32.092"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 15:50:32.094" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 15:50:32.185" level="INFO">${stdout} = ehin6t1h68s36c1n6gqkg5hi997iq1g5		test
ehin6t1g70oj0d9h60shgbg57kmhac1c		test
ehin6t1i64sjae1l74p60g3061a1oiaq		test
ehin6t1h6ssjachp68q18e9s8924e12q		test
ehin6t1i6gq3ad1i6kq0k2afaoo1m89s		test
ehin6...</msg>
<status status="PASS" endtime="20200623 15:50:32.186" starttime="20200623 15:50:32.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:32.187" starttime="20200623 15:50:32.186"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:32.188" starttime="20200623 15:50:32.188"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:32.190" starttime="20200623 15:50:32.189"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:32.190" critical="yes" starttime="20200623 15:50:31.805"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200623 15:50:32.193" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200623 15:50:32.194" level="INFO">1 directory.</msg>
<msg timestamp="20200623 15:50:32.194" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200623 15:50:32.194" starttime="20200623 15:50:32.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200623 15:50:32.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.196" starttime="20200623 15:50:32.195"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200623 15:50:32.202" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.202" starttime="20200623 15:50:32.196"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:32.203" critical="yes" starttime="20200623 15:50:32.191"></status>
</test>
<test id="s1-t14" name="SyncTest story">
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Local</arg>
</arguments>
<msg timestamp="20200623 15:50:32.206" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.206" starttime="20200623 15:50:32.205"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200623 15:50:32.208" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.208" starttime="20200623 15:50:32.207"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200623 15:50:32.211" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.211" starttime="20200623 15:50:32.208"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200623 15:50:32.237" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.237" starttime="20200623 15:50:32.212"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200623 15:50:32.238" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.238" starttime="20200623 15:50:32.237"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200623 15:50:32.254" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.254" starttime="20200623 15:50:32.238"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>create</arg>
<arg>test</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200623 15:50:32.255" level="INFO">Starting process:
StoryManager story create test</msg>
<msg timestamp="20200623 15:50:32.257" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.263" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.263" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.263" starttime="20200623 15:50:32.255"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:32.264" level="INFO">${id} = ID : ehin6t1i6ksjie9g6gsimn0l5k2geh1i</msg>
<status status="PASS" endtime="20200623 15:50:32.264" starttime="20200623 15:50:32.264"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 15:50:32.265" level="INFO">${id} = ehin6t1i6ksjie9g6gsimn0l5k2geh1i</msg>
<status status="PASS" endtime="20200623 15:50:32.265" starttime="20200623 15:50:32.264"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>copy</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200623 15:50:32.265" level="INFO">Starting process:
StoryManager story copy ehin6t1i6ksjie9g6gsimn0l5k2geh1i ../Usb/Stories</msg>
<msg timestamp="20200623 15:50:32.267" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.272" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.272" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.272" starttime="20200623 15:50:32.265"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>1</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200623 15:50:32.273" level="INFO">Starting process:
StoryManager story edit ehin6t1i6ksjie9g6gsimn0l5k2geh1i -e 1</msg>
<msg timestamp="20200623 15:50:32.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.280" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.281" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.281" starttime="20200623 15:50:32.273"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>2</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200623 15:50:32.281" level="INFO">Starting process:
StoryManager story edit ehin6t1i6ksjie9g6gsimn0l5k2geh1i -e 2</msg>
<msg timestamp="20200623 15:50:32.283" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.289" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.289" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.289" starttime="20200623 15:50:32.281"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>sync</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>-l</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200623 15:50:32.290" level="INFO">Starting process:
StoryManager story sync ehin6t1i6ksjie9g6gsimn0l5k2geh1i ../Usb/Stories -l</msg>
<msg timestamp="20200623 15:50:32.292" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.301" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.302" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.302" starttime="20200623 15:50:32.289"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200623 15:50:32.302" level="INFO">Starting process:
StoryManager story show ehin6t1i6ksjie9g6gsimn0l5k2geh1i</msg>
<msg timestamp="20200623 15:50:32.305" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.309" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.309" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.309" starttime="20200623 15:50:32.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:32.310" starttime="20200623 15:50:32.310"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200623 15:50:32.311" level="INFO">Starting process:
StoryManager story show ehin6t1i6ksjie9g6gsimn0l5k2geh1i</msg>
<msg timestamp="20200623 15:50:32.312" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200623 15:50:32.317" level="INFO">Process completed.</msg>
<msg timestamp="20200623 15:50:32.317" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.317" starttime="20200623 15:50:32.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultU.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200623 15:50:32.318" starttime="20200623 15:50:32.317"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:32.318" critical="yes" starttime="20200623 15:50:32.204"></status>
</test>
<test id="s1-t15" name="Remove db sync">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200623 15:50:32.319" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200623 15:50:32.319" level="INFO">2 directories.</msg>
<msg timestamp="20200623 15:50:32.319" level="INFO">${files} = 2</msg>
<status status="PASS" endtime="20200623 15:50:32.319" starttime="20200623 15:50:32.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200623 15:50:32.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200623 15:50:32.319" starttime="20200623 15:50:32.319"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200623 15:50:32.322" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.322" starttime="20200623 15:50:32.319"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200623 15:50:32.325" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 15:50:32.325" starttime="20200623 15:50:32.323"></status>
</kw>
<status status="PASS" endtime="20200623 15:50:32.326" critical="yes" starttime="20200623 15:50:32.318"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200623 15:50:32.326" starttime="20200623 15:50:31.054"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="15">Critical Tests</stat>
<stat fail="0" pass="15">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="15">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
