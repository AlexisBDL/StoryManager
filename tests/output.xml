<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200622 11:58:58.633" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.655" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.666" level="INFO">${stdout} = Story test created
ID : ehin6t1m6ks3gdhn64ol0l9885h0alo4</msg>
<status status="PASS" endtime="20200622 11:58:58.666" starttime="20200622 11:58:58.655"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200622 11:58:58.667" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200622 11:58:58.667" starttime="20200622 11:58:58.667"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.667" level="INFO">${id} = ID : ehin6t1m6ks3gdhn64ol0l9885h0alo4</msg>
<status status="PASS" endtime="20200622 11:58:58.667" starttime="20200622 11:58:58.667"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.668" level="INFO">${id} = ehin6t1m6ks3gdhn64ol0l9885h0alo4</msg>
<status status="PASS" endtime="20200622 11:58:58.668" starttime="20200622 11:58:58.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.668" starttime="20200622 11:58:58.668"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.668" level="INFO">Running command './StoryManager story show ehin6t1m6ks3gdhn64ol0l9885h0alo4 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.673" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-06-22T09:58:58Z",
    message: "Create new story test with ID ehin6t1m6ks3gdhn64ol0l9885h0alo4",
  },
  parent...</msg>
<status status="PASS" endtime="20200622 11:58:58.674" starttime="20200622 11:58:58.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.674" starttime="20200622 11:58:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.674" starttime="20200622 11:58:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.675" starttime="20200622 11:58:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.675" starttime="20200622 11:58:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.675" starttime="20200622 11:58:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.675" starttime="20200622 11:58:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.676" starttime="20200622 11:58:58.676"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.676" critical="yes" starttime="20200622 11:58:58.655"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.677" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.684" level="INFO">${stdout} = Story test created
ID : ehin6t1m70o3ge1h60r38h8924ig84op</msg>
<status status="PASS" endtime="20200622 11:58:58.684" starttime="20200622 11:58:58.677"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.685" level="INFO">${id} = ID : ehin6t1m70o3ge1h60r38h8924ig84op</msg>
<status status="PASS" endtime="20200622 11:58:58.685" starttime="20200622 11:58:58.684"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.685" level="INFO">${id} = ehin6t1m70o3ge1h60r38h8924ig84op</msg>
<status status="PASS" endtime="20200622 11:58:58.685" starttime="20200622 11:58:58.685"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200622 11:58:58.686" level="INFO">Running command './StoryManager story show ehin6t1m70o3ge1h60r38h8924ig84op.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.690" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200622 11:58:58.690" starttime="20200622 11:58:58.685"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.690" starttime="20200622 11:58:58.690"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.691" level="INFO">Running command './StoryManager story edit ehin6t1m70o3ge1h60r38h8924ig84op -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.697" level="INFO">${stdout} = Field effort  in story test
ID : ehin6t1m70o3ge1h60r38h8924ig84op</msg>
<status status="PASS" endtime="20200622 11:58:58.697" starttime="20200622 11:58:58.691"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200622 11:58:58.698" level="INFO">Running command './StoryManager story show ehin6t1m70o3ge1h60r38h8924ig84op.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.704" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200622 11:58:58.704" starttime="20200622 11:58:58.697"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.704" starttime="20200622 11:58:58.704"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.704" critical="yes" starttime="20200622 11:58:58.676"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.705" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.711" level="INFO">${stdout} = Story test created
ID : ehin6t1n60s3ae9o64rkcc8r78i58jh9</msg>
<status status="PASS" endtime="20200622 11:58:58.711" starttime="20200622 11:58:58.705"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.711" level="INFO">${id} = ID : ehin6t1n60s3ae9o64rkcc8r78i58jh9</msg>
<status status="PASS" endtime="20200622 11:58:58.711" starttime="20200622 11:58:58.711"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.712" level="INFO">${id} = ehin6t1n60s3ae9o64rkcc8r78i58jh9</msg>
<status status="PASS" endtime="20200622 11:58:58.712" starttime="20200622 11:58:58.711"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200622 11:58:58.712" level="INFO">Running command './StoryManager story show ehin6t1n60s3ae9o64rkcc8r78i58jh9.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.717" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200622 11:58:58.717" starttime="20200622 11:58:58.712"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.717" starttime="20200622 11:58:58.717"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.718" level="INFO">Running command './StoryManager story edit ehin6t1n60s3ae9o64rkcc8r78i58jh9 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.724" level="INFO">${stdout} = Field description  in story test
ID : ehin6t1n60s3ae9o64rkcc8r78i58jh9</msg>
<status status="PASS" endtime="20200622 11:58:58.724" starttime="20200622 11:58:58.717"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200622 11:58:58.724" level="INFO">Running command './StoryManager story show ehin6t1n60s3ae9o64rkcc8r78i58jh9.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.729" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200622 11:58:58.729" starttime="20200622 11:58:58.724"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.729" starttime="20200622 11:58:58.729"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.729" critical="yes" starttime="20200622 11:58:58.704"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.730" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.736" level="INFO">${stdout} = Story test created
ID : ehin6t1n6cq30e1k6kp3aagm48vlm9q3</msg>
<status status="PASS" endtime="20200622 11:58:58.736" starttime="20200622 11:58:58.730"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.737" level="INFO">${id} = ID : ehin6t1n6cq30e1k6kp3aagm48vlm9q3</msg>
<status status="PASS" endtime="20200622 11:58:58.737" starttime="20200622 11:58:58.736"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.737" level="INFO">${id} = ehin6t1n6cq30e1k6kp3aagm48vlm9q3</msg>
<status status="PASS" endtime="20200622 11:58:58.737" starttime="20200622 11:58:58.737"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200622 11:58:58.738" level="INFO">Running command './StoryManager story show ehin6t1n6cq30e1k6kp3aagm48vlm9q3.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.742" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200622 11:58:58.742" starttime="20200622 11:58:58.737"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.742" starttime="20200622 11:58:58.742"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.743" level="INFO">Running command './StoryManager story edit ehin6t1n6cq30e1k6kp3aagm48vlm9q3 -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.750" level="INFO">${stdout} = Field title  in story test
ID : ehin6t1n6cq30e1k6kp3aagm48vlm9q3</msg>
<status status="PASS" endtime="20200622 11:58:58.750" starttime="20200622 11:58:58.743"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200622 11:58:58.750" level="INFO">Running command './StoryManager story show ehin6t1n6cq30e1k6kp3aagm48vlm9q3.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.755" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200622 11:58:58.755" starttime="20200622 11:58:58.750"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.756" starttime="20200622 11:58:58.755"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.756" critical="yes" starttime="20200622 11:58:58.730"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.757" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.762" level="INFO">${stdout} = Story test created
ID : ehin6t1n6ksjid1j6gsico2kal4jibhq</msg>
<status status="PASS" endtime="20200622 11:58:58.762" starttime="20200622 11:58:58.756"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.762" level="INFO">${id} = ID : ehin6t1n6ksjid1j6gsico2kal4jibhq</msg>
<status status="PASS" endtime="20200622 11:58:58.762" starttime="20200622 11:58:58.762"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.763" level="INFO">${id} = ehin6t1n6ksjid1j6gsico2kal4jibhq</msg>
<status status="PASS" endtime="20200622 11:58:58.763" starttime="20200622 11:58:58.762"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200622 11:58:58.763" level="INFO">Running command './StoryManager story show ehin6t1n6ksjid1j6gsico2kal4jibhq.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.768" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200622 11:58:58.768" starttime="20200622 11:58:58.763"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.768" starttime="20200622 11:58:58.768"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.769" level="INFO">Running command './StoryManager story close ehin6t1n6ksjid1j6gsico2kal4jibhq 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.775" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200622 11:58:58.775" starttime="20200622 11:58:58.768"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200622 11:58:58.776" level="INFO">Running command './StoryManager story show ehin6t1n6ksjid1j6gsico2kal4jibhq.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.780" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200622 11:58:58.780" starttime="20200622 11:58:58.775"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.781" starttime="20200622 11:58:58.780"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.781" level="INFO">Running command './StoryManager story edit ehin6t1n6ksjid1j6gsico2kal4jibhq -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.786" level="INFO">${stdout} = The story ehin6t1n6ksjid1j6gsico2kal4jibhq is close, you can't modify it</msg>
<status status="PASS" endtime="20200622 11:58:58.786" starttime="20200622 11:58:58.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.787" starttime="20200622 11:58:58.786"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.787" critical="yes" starttime="20200622 11:58:58.756"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.788" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.792" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200622 11:58:58.792" starttime="20200622 11:58:58.787"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.792" starttime="20200622 11:58:58.792"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.792" critical="yes" starttime="20200622 11:58:58.787"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.793" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.799" level="INFO">${stdout} = Story test created
ID : ehin6t1n74r38e1g6sp1kkqias824noi</msg>
<status status="PASS" endtime="20200622 11:58:58.799" starttime="20200622 11:58:58.793"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.799" level="INFO">${id} = ID : ehin6t1n74r38e1g6sp1kkqias824noi</msg>
<status status="PASS" endtime="20200622 11:58:58.799" starttime="20200622 11:58:58.799"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.800" level="INFO">${id} = ehin6t1n74r38e1g6sp1kkqias824noi</msg>
<status status="PASS" endtime="20200622 11:58:58.800" starttime="20200622 11:58:58.800"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.800" level="INFO">Running command './StoryManager story Tadd ehin6t1n74r38e1g6sp1kkqias824noi task 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.810" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n74r38e1g6sp1kkqias824noi</msg>
<status status="PASS" endtime="20200622 11:58:58.810" starttime="20200622 11:58:58.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.811" starttime="20200622 11:58:58.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.811" starttime="20200622 11:58:58.811"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.812" level="INFO">Running command './StoryManager story show ehin6t1n74r38e1g6sp1kkqias824noi -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.817" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200622 11:58:58.817" starttime="20200622 11:58:58.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.817" starttime="20200622 11:58:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.817" starttime="20200622 11:58:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.818" starttime="20200622 11:58:58.817"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.818" critical="yes" starttime="20200622 11:58:58.792"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.819" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.825" level="INFO">${stdout} = Story test created
ID : ehin6t1o68p34chl6kphahg92p1g4mj2</msg>
<status status="PASS" endtime="20200622 11:58:58.825" starttime="20200622 11:58:58.818"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.825" level="INFO">${id} = ID : ehin6t1o68p34chl6kphahg92p1g4mj2</msg>
<status status="PASS" endtime="20200622 11:58:58.825" starttime="20200622 11:58:58.825"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.826" level="INFO">${id} = ehin6t1o68p34chl6kphahg92p1g4mj2</msg>
<status status="PASS" endtime="20200622 11:58:58.826" starttime="20200622 11:58:58.826"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.826" level="INFO">Running command './StoryManager story Tadd ehin6t1o68p34chl6kphahg92p1g4mj2 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.835" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1o68p34chl6kphahg92p1g4mj2</msg>
<status status="PASS" endtime="20200622 11:58:58.835" starttime="20200622 11:58:58.826"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.836" level="INFO">Running command './StoryManager story Tedit ehin6t1o68p34chl6kphahg92p1g4mj2 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.848" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1o68p34chl6kphahg92p1g4mj2</msg>
<status status="PASS" endtime="20200622 11:58:58.848" starttime="20200622 11:58:58.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.848" starttime="20200622 11:58:58.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.849" starttime="20200622 11:58:58.849"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.849" level="INFO">Running command './StoryManager story show ehin6t1o68p34chl6kphahg92p1g4mj2 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.854" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200622 11:58:58.854" starttime="20200622 11:58:58.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.855" starttime="20200622 11:58:58.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.855" starttime="20200622 11:58:58.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.855" starttime="20200622 11:58:58.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.856" starttime="20200622 11:58:58.855"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.856" critical="yes" starttime="20200622 11:58:58.818"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.857" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.863" level="INFO">${stdout} = Story test created
ID : ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.863" starttime="20200622 11:58:58.856"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.863" level="INFO">${id} = ID : ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.863" starttime="20200622 11:58:58.863"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:58.863" level="INFO">${id} = ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.864" starttime="20200622 11:58:58.863"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.864" level="INFO">Running command './StoryManager story Tadd ehin6t1o6oo32d9p70q5qlpp900heah6 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.874" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.874" starttime="20200622 11:58:58.864"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.875" level="INFO">Running command './StoryManager story Tadd ehin6t1o6oo32d9p70q5qlpp900heah6 task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.884" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.885" starttime="20200622 11:58:58.874"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.885" level="INFO">Running command './StoryManager story Tedit ehin6t1o6oo32d9p70q5qlpp900heah6 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.896" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1o6oo32d9p70q5qlpp900heah6</msg>
<status status="PASS" endtime="20200622 11:58:58.896" starttime="20200622 11:58:58.885"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.897" level="INFO">Running command './StoryManager story Tsearch ehin6t1o6oo32d9p70q5qlpp900heah6 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.903" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200622 11:58:58.903" starttime="20200622 11:58:58.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.903" starttime="20200622 11:58:58.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.904" starttime="20200622 11:58:58.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.904" starttime="20200622 11:58:58.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.904" starttime="20200622 11:58:58.904"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:58.905" starttime="20200622 11:58:58.904"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:58.905" critical="yes" starttime="20200622 11:58:58.856"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.906" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.912" level="INFO">${stdout} = Story test created
ID : ehin6t1p60s3ie9p74pgi6128h25sihh</msg>
<status status="PASS" endtime="20200622 11:58:58.912" starttime="20200622 11:58:58.905"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200622 11:58:58.912" level="INFO">${id1} = ID : ehin6t1p60s3ie9p74pgi6128h25sihh</msg>
<status status="PASS" endtime="20200622 11:58:58.912" starttime="20200622 11:58:58.912"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200622 11:58:58.912" level="INFO">${id1} = ehin6t1p60s3ie9p74pgi6128h25sihh</msg>
<status status="PASS" endtime="20200622 11:58:58.912" starttime="20200622 11:58:58.912"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.913" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.919" level="INFO">${stdout} = Story test created
ID : ehin6t1p64r36dhp6sp5ih8u8pf4c82f</msg>
<status status="PASS" endtime="20200622 11:58:58.919" starttime="20200622 11:58:58.913"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200622 11:58:58.919" level="INFO">${id2} = ID : ehin6t1p64r36dhp6sp5ih8u8pf4c82f</msg>
<status status="PASS" endtime="20200622 11:58:58.919" starttime="20200622 11:58:58.919"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200622 11:58:58.920" level="INFO">${id2} = ehin6t1p64r36dhp6sp5ih8u8pf4c82f</msg>
<status status="PASS" endtime="20200622 11:58:58.920" starttime="20200622 11:58:58.920"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.920" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:58.962" level="INFO">${stdout} = Story test created
ID : ehin6t1p68pjce9j6cog421n44i4q7j2</msg>
<status status="PASS" endtime="20200622 11:58:58.962" starttime="20200622 11:58:58.920"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200622 11:58:58.962" level="INFO">${id3} = ID : ehin6t1p68pjce9j6cog421n44i4q7j2</msg>
<status status="PASS" endtime="20200622 11:58:58.962" starttime="20200622 11:58:58.962"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200622 11:58:58.963" level="INFO">${id3} = ehin6t1p68pjce9j6cog421n44i4q7j2</msg>
<status status="PASS" endtime="20200622 11:58:58.963" starttime="20200622 11:58:58.962"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:58.963" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.050" level="INFO">${stdout} = ehin6t1n6ksjid1j6gsico2kal4jibhq		test
ehin6t1p60s3ie9p74pgi6128h25sihh		test
ehin6t1p64r36dhp6sp5ih8u8pf4c82f		test
ehin6t1n60s3ae9o64rkcc8r78i58jh9		test
ehin6t1n6cq30e1k6kp3aagm48vlm9q3		new title
...</msg>
<status status="PASS" endtime="20200622 11:58:59.050" starttime="20200622 11:58:58.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.051" starttime="20200622 11:58:59.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.053" starttime="20200622 11:58:59.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.055" starttime="20200622 11:58:59.053"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:59.055" critical="yes" starttime="20200622 11:58:58.905"></status>
</test>
<test id="s1-t11" name="Copy story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.059" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.124" level="INFO">${stdout} = Story test created
ID : ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.124" starttime="20200622 11:58:59.057"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:59.126" level="INFO">${id} = ID : ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.126" starttime="20200622 11:58:59.125"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:59.127" level="INFO">${id} = ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.128" starttime="20200622 11:58:59.126"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.130" level="INFO">Running command './StoryManager story copy ehin6t1g6spjcdhp70ojs01u9p2jing7 Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.170" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.170" starttime="20200622 11:58:59.128"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200622 11:58:59.172" level="INFO">${idd} = Duplicate ID is : ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.172" starttime="20200622 11:58:59.171"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200622 11:58:59.173" level="INFO">${idd} = ehin6t1g6spjcdhp70ojs01u9p2jing7</msg>
<status status="PASS" endtime="20200622 11:58:59.173" starttime="20200622 11:58:59.172"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.174" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.223" level="INFO">${stdout} = ehin6t1p68pjce9j6cog421n44i4q7j2		test
ehin6t1h6oq36dhg6gr1ejgk5s6gu1oh		test
ehin6t1n6cq30e1k6kp3aagm48vlm9q3		new title
ehin6t1p60s3ie9p74pgi6128h25sihh		test
ehin6t1p64r36dhp6sp5ih8u8pf4c82f		test
...</msg>
<status status="PASS" endtime="20200622 11:58:59.223" starttime="20200622 11:58:59.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.224" starttime="20200622 11:58:59.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.225" starttime="20200622 11:58:59.224"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.226" level="INFO">Running command './StoryManager story show ehin6t1g6spjcdhp70ojs01u9p2jing7.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.263" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200622 11:58:59.263" starttime="20200622 11:58:59.225"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200622 11:58:59.266" level="INFO">Running command './StoryManager story show ehin6t1g6spjcdhp70ojs01u9p2jing7.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.315" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200622 11:58:59.316" starttime="20200622 11:58:59.264"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.318" starttime="20200622 11:58:59.316"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:59.318" critical="yes" starttime="20200622 11:58:59.056"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.322" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.378" level="INFO">${stdout} = Story test created
ID : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.378" starttime="20200622 11:58:59.321"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:59.380" level="INFO">${id} = ID : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.380" starttime="20200622 11:58:59.379"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200622 11:58:59.382" level="INFO">${id} = ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.382" starttime="20200622 11:58:59.381"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.384" level="INFO">Running command './StoryManager story copy ehin6t1j6crjcdhl60ojsbaibd12udgn Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.449" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.449" starttime="20200622 11:58:59.382"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200622 11:58:59.451" level="INFO">${idd} = Duplicate ID is : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.451" starttime="20200622 11:58:59.450"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200622 11:58:59.452" level="INFO">${idd} = ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.452" starttime="20200622 11:58:59.451"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.454" level="INFO">Running command './StoryManager story edit ehin6t1j6crjcdhl60ojsbaibd12udgn -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.544" level="INFO">${stdout} = Field effort  in story test
ID : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.544" starttime="20200622 11:58:59.453"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.546" level="INFO">Running command './StoryManager story edit ehin6t1j6crjcdhl60ojsbaibd12udgn -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.600" level="INFO">${stdout} = Field effort  in story test
ID : ehin6t1j6crjcdhl60ojsbaibd12udgn</msg>
<status status="PASS" endtime="20200622 11:58:59.601" starttime="20200622 11:58:59.545"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>echo l | ./StoryManager story merge ${id} ${idd}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200622 11:58:59.603" level="INFO">Running command 'echo l | ./StoryManager story merge ehin6t1j6crjcdhl60ojsbaibd12udgn ehin6t1j6crjcdhl60ojsbaibd12udgn 2&gt;&amp;1'.</msg>
<msg timestamp="20200622 11:58:59.656" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)All chunks already exist at destination! Created new dataset temp.
error: Stories are already sync</msg>
<status status="PASS" endtime="20200622 11:58:59.656" starttime="20200622 11:58:59.601"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200622 11:58:59.657" level="INFO">${idm} = Syncing - 50.00% (0 B/s)All chunks already exist at destination! Created new dataset temp.</msg>
<status status="PASS" endtime="20200622 11:58:59.657" starttime="20200622 11:58:59.657"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200622 11:58:59.658" level="INFO">${idm} = ng - 50.00% (0 B/s)All chunks already exist at destination! Created new dataset temp.</msg>
<status status="PASS" endtime="20200622 11:58:59.658" starttime="20200622 11:58:59.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.659" starttime="20200622 11:58:59.659"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.660" starttime="20200622 11:58:59.660"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200622 11:58:59.661" starttime="20200622 11:58:59.661"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:59.662" critical="yes" starttime="20200622 11:58:59.319"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200622 11:58:59.664" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200622 11:58:59.664" level="INFO">1 directory.</msg>
<msg timestamp="20200622 11:58:59.664" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200622 11:58:59.664" starttime="20200622 11:58:59.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200622 11:58:59.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200622 11:58:59.666" starttime="20200622 11:58:59.665"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200622 11:58:59.670" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200622 11:58:59.671" starttime="20200622 11:58:59.666"></status>
</kw>
<status status="PASS" endtime="20200622 11:58:59.671" critical="yes" starttime="20200622 11:58:59.662"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200622 11:58:59.673" starttime="20200622 11:58:58.634"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="13">Critical Tests</stat>
<stat fail="0" pass="13">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="13">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
