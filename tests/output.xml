<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200623 13:55:44.057" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.082" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.088" level="INFO">${stdout} = Story test created
ID : ehin6t1g70qjac1j6sq4m2g195dlcj8e</msg>
<status status="PASS" endtime="20200623 13:55:44.088" starttime="20200623 13:55:44.082"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:55:44.088" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200623 13:55:44.088" starttime="20200623 13:55:44.088"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.088" level="INFO">${id} = ID : ehin6t1g70qjac1j6sq4m2g195dlcj8e</msg>
<status status="PASS" endtime="20200623 13:55:44.088" starttime="20200623 13:55:44.088"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.089" level="INFO">${id} = ehin6t1g70qjac1j6sq4m2g195dlcj8e</msg>
<status status="PASS" endtime="20200623 13:55:44.089" starttime="20200623 13:55:44.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.089" starttime="20200623 13:55:44.089"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.090" level="INFO">Running command './StoryManager story show ehin6t1g70qjac1j6sq4m2g195dlcj8e 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.095" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-06-23T11:55:44Z",
    message: "Create new story test with ID ehin6t1g70qjac1j6sq4m2g195dlcj8e",
  },
  parent...</msg>
<status status="PASS" endtime="20200623 13:55:44.095" starttime="20200623 13:55:44.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.095" starttime="20200623 13:55:44.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.095" starttime="20200623 13:55:44.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.096" starttime="20200623 13:55:44.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.096" starttime="20200623 13:55:44.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.096" starttime="20200623 13:55:44.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.097" starttime="20200623 13:55:44.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.097" starttime="20200623 13:55:44.097"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.097" critical="yes" starttime="20200623 13:55:44.081"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.098" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.104" level="INFO">${stdout} = Story test created
ID : ehin6t1h60p30cpm68s4uno31gali4gd</msg>
<status status="PASS" endtime="20200623 13:55:44.104" starttime="20200623 13:55:44.098"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.105" level="INFO">${id} = ID : ehin6t1h60p30cpm68s4uno31gali4gd</msg>
<status status="PASS" endtime="20200623 13:55:44.105" starttime="20200623 13:55:44.104"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.105" level="INFO">${id} = ehin6t1h60p30cpm68s4uno31gali4gd</msg>
<status status="PASS" endtime="20200623 13:55:44.105" starttime="20200623 13:55:44.105"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 13:55:44.106" level="INFO">Running command './StoryManager story show ehin6t1h60p30cpm68s4uno31gali4gd.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.110" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200623 13:55:44.110" starttime="20200623 13:55:44.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.111" starttime="20200623 13:55:44.111"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.112" level="INFO">Running command './StoryManager story edit ehin6t1h60p30cpm68s4uno31gali4gd -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.118" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1h60p30cpm68s4uno31gali4gd</msg>
<status status="PASS" endtime="20200623 13:55:44.118" starttime="20200623 13:55:44.111"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 13:55:44.119" level="INFO">Running command './StoryManager story show ehin6t1h60p30cpm68s4uno31gali4gd.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.124" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200623 13:55:44.124" starttime="20200623 13:55:44.118"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.124" starttime="20200623 13:55:44.124"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.124" critical="yes" starttime="20200623 13:55:44.097"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.125" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.131" level="INFO">${stdout} = Story test created
ID : ehin6t1h68s3ed1m68ohq70cah9jklg1</msg>
<status status="PASS" endtime="20200623 13:55:44.131" starttime="20200623 13:55:44.125"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.131" level="INFO">${id} = ID : ehin6t1h68s3ed1m68ohq70cah9jklg1</msg>
<status status="PASS" endtime="20200623 13:55:44.131" starttime="20200623 13:55:44.131"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.131" level="INFO">${id} = ehin6t1h68s3ed1m68ohq70cah9jklg1</msg>
<status status="PASS" endtime="20200623 13:55:44.132" starttime="20200623 13:55:44.131"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 13:55:44.132" level="INFO">Running command './StoryManager story show ehin6t1h68s3ed1m68ohq70cah9jklg1.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.136" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200623 13:55:44.136" starttime="20200623 13:55:44.132"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.137" starttime="20200623 13:55:44.137"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.137" level="INFO">Running command './StoryManager story edit ehin6t1h68s3ed1m68ohq70cah9jklg1 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.144" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1h68s3ed1m68ohq70cah9jklg1</msg>
<status status="PASS" endtime="20200623 13:55:44.144" starttime="20200623 13:55:44.137"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 13:55:44.145" level="INFO">Running command './StoryManager story show ehin6t1h68s3ed1m68ohq70cah9jklg1.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.150" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200623 13:55:44.150" starttime="20200623 13:55:44.144"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.150" starttime="20200623 13:55:44.150"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.150" critical="yes" starttime="20200623 13:55:44.125"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.151" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.157" level="INFO">${stdout} = Story test created
ID : ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae</msg>
<status status="PASS" endtime="20200623 13:55:44.157" starttime="20200623 13:55:44.151"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.158" level="INFO">${id} = ID : ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae</msg>
<status status="PASS" endtime="20200623 13:55:44.158" starttime="20200623 13:55:44.157"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.158" level="INFO">${id} = ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae</msg>
<status status="PASS" endtime="20200623 13:55:44.158" starttime="20200623 13:55:44.158"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:55:44.159" level="INFO">Running command './StoryManager story show ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.163" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200623 13:55:44.163" starttime="20200623 13:55:44.158"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.164" starttime="20200623 13:55:44.164"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.164" level="INFO">Running command './StoryManager story edit ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.171" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae</msg>
<status status="PASS" endtime="20200623 13:55:44.171" starttime="20200623 13:55:44.164"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:55:44.172" level="INFO">Running command './StoryManager story show ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.178" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200623 13:55:44.178" starttime="20200623 13:55:44.172"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.178" starttime="20200623 13:55:44.178"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.178" critical="yes" starttime="20200623 13:55:44.151"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.179" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.185" level="INFO">${stdout} = Story test created
ID : ehin6t1h70p3ge9j6oo5qd1hc9bh62g5</msg>
<status status="PASS" endtime="20200623 13:55:44.185" starttime="20200623 13:55:44.179"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.186" level="INFO">${id} = ID : ehin6t1h70p3ge9j6oo5qd1hc9bh62g5</msg>
<status status="PASS" endtime="20200623 13:55:44.186" starttime="20200623 13:55:44.185"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.186" level="INFO">${id} = ehin6t1h70p3ge9j6oo5qd1hc9bh62g5</msg>
<status status="PASS" endtime="20200623 13:55:44.186" starttime="20200623 13:55:44.186"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 13:55:44.187" level="INFO">Running command './StoryManager story show ehin6t1h70p3ge9j6oo5qd1hc9bh62g5.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.192" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200623 13:55:44.192" starttime="20200623 13:55:44.186"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.192" starttime="20200623 13:55:44.192"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.193" level="INFO">Running command './StoryManager story close ehin6t1h70p3ge9j6oo5qd1hc9bh62g5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.200" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200623 13:55:44.200" starttime="20200623 13:55:44.192"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 13:55:44.201" level="INFO">Running command './StoryManager story show ehin6t1h70p3ge9j6oo5qd1hc9bh62g5.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.207" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200623 13:55:44.207" starttime="20200623 13:55:44.201"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.207" starttime="20200623 13:55:44.207"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.208" level="INFO">Running command './StoryManager story edit ehin6t1h70p3ge9j6oo5qd1hc9bh62g5 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.213" level="INFO">${stdout} = The story ehin6t1h70p3ge9j6oo5qd1hc9bh62g5 is close, you can't modify it</msg>
<status status="PASS" endtime="20200623 13:55:44.213" starttime="20200623 13:55:44.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.213" starttime="20200623 13:55:44.213"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.213" critical="yes" starttime="20200623 13:55:44.178"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.214" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.219" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200623 13:55:44.219" starttime="20200623 13:55:44.214"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.219" starttime="20200623 13:55:44.219"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.219" critical="yes" starttime="20200623 13:55:44.214"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.220" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.227" level="INFO">${stdout} = Story test created
ID : ehin6t1i68q38c9h68ogk98k7kr3o386</msg>
<status status="PASS" endtime="20200623 13:55:44.227" starttime="20200623 13:55:44.220"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.228" level="INFO">${id} = ID : ehin6t1i68q38c9h68ogk98k7kr3o386</msg>
<status status="PASS" endtime="20200623 13:55:44.228" starttime="20200623 13:55:44.227"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.228" level="INFO">${id} = ehin6t1i68q38c9h68ogk98k7kr3o386</msg>
<status status="PASS" endtime="20200623 13:55:44.228" starttime="20200623 13:55:44.228"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.229" level="INFO">Running command './StoryManager story Tadd ehin6t1i68q38c9h68ogk98k7kr3o386 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.238" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i68q38c9h68ogk98k7kr3o386</msg>
<status status="PASS" endtime="20200623 13:55:44.238" starttime="20200623 13:55:44.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.238" starttime="20200623 13:55:44.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.239" starttime="20200623 13:55:44.238"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.239" level="INFO">Running command './StoryManager story show ehin6t1i68q38c9h68ogk98k7kr3o386 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.245" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200623 13:55:44.245" starttime="20200623 13:55:44.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.245" starttime="20200623 13:55:44.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.245" starttime="20200623 13:55:44.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.246" starttime="20200623 13:55:44.245"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.246" critical="yes" starttime="20200623 13:55:44.220"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.247" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.253" level="INFO">${stdout} = Story test created
ID : ehin6t1i6ko3achk70s10ka18ghjoi8k</msg>
<status status="PASS" endtime="20200623 13:55:44.253" starttime="20200623 13:55:44.246"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.253" level="INFO">${id} = ID : ehin6t1i6ko3achk70s10ka18ghjoi8k</msg>
<status status="PASS" endtime="20200623 13:55:44.253" starttime="20200623 13:55:44.253"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.254" level="INFO">${id} = ehin6t1i6ko3achk70s10ka18ghjoi8k</msg>
<status status="PASS" endtime="20200623 13:55:44.254" starttime="20200623 13:55:44.254"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.254" level="INFO">Running command './StoryManager story Tadd ehin6t1i6ko3achk70s10ka18ghjoi8k task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.264" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i6ko3achk70s10ka18ghjoi8k</msg>
<status status="PASS" endtime="20200623 13:55:44.264" starttime="20200623 13:55:44.254"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.264" level="INFO">Running command './StoryManager story Tedit ehin6t1i6ko3achk70s10ka18ghjoi8k 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.276" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1i6ko3achk70s10ka18ghjoi8k</msg>
<status status="PASS" endtime="20200623 13:55:44.276" starttime="20200623 13:55:44.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.277" starttime="20200623 13:55:44.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.277" starttime="20200623 13:55:44.277"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.278" level="INFO">Running command './StoryManager story show ehin6t1i6ko3achk70s10ka18ghjoi8k -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.283" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200623 13:55:44.283" starttime="20200623 13:55:44.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.283" starttime="20200623 13:55:44.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.284" starttime="20200623 13:55:44.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.284" starttime="20200623 13:55:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.284" starttime="20200623 13:55:44.284"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.284" critical="yes" starttime="20200623 13:55:44.246"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.285" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.292" level="INFO">${stdout} = Story test created
ID : ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.292" starttime="20200623 13:55:44.285"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.292" level="INFO">${id} = ID : ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.292" starttime="20200623 13:55:44.292"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.293" level="INFO">${id} = ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.293" starttime="20200623 13:55:44.292"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.293" level="INFO">Running command './StoryManager story Tadd ehin6t1i70sj2c1h74qj4j9h69c08b8o task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.304" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.304" starttime="20200623 13:55:44.293"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.304" level="INFO">Running command './StoryManager story Tadd ehin6t1i70sj2c1h74qj4j9h69c08b8o task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.315" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.315" starttime="20200623 13:55:44.304"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.316" level="INFO">Running command './StoryManager story Tedit ehin6t1i70sj2c1h74qj4j9h69c08b8o 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.328" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1i70sj2c1h74qj4j9h69c08b8o</msg>
<status status="PASS" endtime="20200623 13:55:44.328" starttime="20200623 13:55:44.315"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.329" level="INFO">Running command './StoryManager story Tsearch ehin6t1i70sj2c1h74qj4j9h69c08b8o -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.335" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200623 13:55:44.335" starttime="20200623 13:55:44.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.335" starttime="20200623 13:55:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.335" starttime="20200623 13:55:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.336" starttime="20200623 13:55:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.336" starttime="20200623 13:55:44.336"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.336" starttime="20200623 13:55:44.336"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.336" critical="yes" starttime="20200623 13:55:44.285"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.337" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.344" level="INFO">${stdout} = Story test created
ID : ehin6t1j6goj4dhm68ogkdof344lq2q5</msg>
<status status="PASS" endtime="20200623 13:55:44.344" starttime="20200623 13:55:44.337"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 13:55:44.345" level="INFO">${id1} = ID : ehin6t1j6goj4dhm68ogkdof344lq2q5</msg>
<status status="PASS" endtime="20200623 13:55:44.345" starttime="20200623 13:55:44.345"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 13:55:44.346" level="INFO">${id1} = ehin6t1j6goj4dhm68ogkdof344lq2q5</msg>
<status status="PASS" endtime="20200623 13:55:44.346" starttime="20200623 13:55:44.345"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.346" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.353" level="INFO">${stdout} = Story test created
ID : ehin6t1j6gsjie1h6krisehg70r1ukho</msg>
<status status="PASS" endtime="20200623 13:55:44.353" starttime="20200623 13:55:44.346"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 13:55:44.354" level="INFO">${id2} = ID : ehin6t1j6gsjie1h6krisehg70r1ukho</msg>
<status status="PASS" endtime="20200623 13:55:44.354" starttime="20200623 13:55:44.353"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 13:55:44.354" level="INFO">${id2} = ehin6t1j6gsjie1h6krisehg70r1ukho</msg>
<status status="PASS" endtime="20200623 13:55:44.354" starttime="20200623 13:55:44.354"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.355" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.396" level="INFO">${stdout} = Story test created
ID : ehin6t1j6ks3edpo68q16f9ubpc2089v</msg>
<status status="PASS" endtime="20200623 13:55:44.396" starttime="20200623 13:55:44.354"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 13:55:44.397" level="INFO">${id3} = ID : ehin6t1j6ks3edpo68q16f9ubpc2089v</msg>
<status status="PASS" endtime="20200623 13:55:44.397" starttime="20200623 13:55:44.396"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 13:55:44.397" level="INFO">${id3} = ehin6t1j6ks3edpo68q16f9ubpc2089v</msg>
<status status="PASS" endtime="20200623 13:55:44.397" starttime="20200623 13:55:44.397"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.398" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.475" level="INFO">${stdout} = ehin6t1h70p3ge9j6oo5qd1hc9bh62g5		test
ehin6t1i68q38c9h68ogk98k7kr3o386		test
ehin6t1i6ko3achk70s10ka18ghjoi8k		test
ehin6t1i70sj2c1h74qj4j9h69c08b8o		test
ehin6t1g70qjac1j6sq4m2g195dlcj8e		test
ehin6...</msg>
<status status="PASS" endtime="20200623 13:55:44.475" starttime="20200623 13:55:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.477" starttime="20200623 13:55:44.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.478" starttime="20200623 13:55:44.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.479" starttime="20200623 13:55:44.479"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.480" critical="yes" starttime="20200623 13:55:44.337"></status>
</test>
<test id="s1-t11" name="Copy story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.483" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.551" level="INFO">${stdout} = Story test created
ID : ehin6t1k74s34e1o70qiukh19p55shgi</msg>
<status status="PASS" endtime="20200623 13:55:44.552" starttime="20200623 13:55:44.482"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.553" level="INFO">${id} = ID : ehin6t1k74s34e1o70qiukh19p55shgi</msg>
<status status="PASS" endtime="20200623 13:55:44.554" starttime="20200623 13:55:44.552"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.555" level="INFO">${id} = ehin6t1k74s34e1o70qiukh19p55shgi</msg>
<status status="PASS" endtime="20200623 13:55:44.556" starttime="20200623 13:55:44.554"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.557" level="INFO">Running command './StoryManager story copy ehin6t1k74s34e1o70qiukh19p55shgi Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.614" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1m60r34dhp6cohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.614" starttime="20200623 13:55:44.556"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:55:44.616" level="INFO">${idd} = Duplicate ID is : ehin6t1m60r34dhp6cohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.616" starttime="20200623 13:55:44.615"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:55:44.618" level="INFO">${idd} = ehin6t1m60r34dhp6cohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.618" starttime="20200623 13:55:44.616"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.619" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.713" level="INFO">${stdout} = ehin6t1g70qjac1j6sq4m2g195dlcj8e		test
ehin6t1h60p30cpm68s4uno31gali4gd		test
ehin6t1h68s3ed1m68ohq70cah9jklg1		test
ehin6t1h6kqj0e1p70qkgn8f0ddlu5ae		new title
ehin6t1j6ks3edpo68q16f9ubpc2089v		test
...</msg>
<status status="PASS" endtime="20200623 13:55:44.713" starttime="20200623 13:55:44.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.715" starttime="20200623 13:55:44.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.717" starttime="20200623 13:55:44.716"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.719" level="INFO">Running command './StoryManager story show ehin6t1k74s34e1o70qiukh19p55shgi.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.769" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 13:55:44.769" starttime="20200623 13:55:44.717"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200623 13:55:44.772" level="INFO">Running command './StoryManager story show ehin6t1m60r34dhp6cohejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.833" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 13:55:44.834" starttime="20200623 13:55:44.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:44.836" starttime="20200623 13:55:44.834"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:44.836" critical="yes" starttime="20200623 13:55:44.481"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.840" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.895" level="INFO">${stdout} = Story test created
ID : ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb</msg>
<status status="PASS" endtime="20200623 13:55:44.895" starttime="20200623 13:55:44.839"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.896" level="INFO">${id} = ID : ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb</msg>
<status status="PASS" endtime="20200623 13:55:44.897" starttime="20200623 13:55:44.895"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:55:44.898" level="INFO">${id} = ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb</msg>
<status status="PASS" endtime="20200623 13:55:44.898" starttime="20200623 13:55:44.897"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.900" level="INFO">Running command './StoryManager story copy ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:44.959" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1p6ko36chk70s1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.959" starttime="20200623 13:55:44.898"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:55:44.962" level="INFO">${idd} = Duplicate ID is : ehin6t1p6ko36chk70s1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.962" starttime="20200623 13:55:44.960"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:55:44.965" level="INFO">${idd} = ehin6t1p6ko36chk70s1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:44.965" starttime="20200623 13:55:44.963"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:44.968" level="INFO">Running command './StoryManager story edit ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:45.022" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb</msg>
<status status="PASS" endtime="20200623 13:55:45.022" starttime="20200623 13:55:44.966"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:45.023" level="INFO">Running command './StoryManager story edit ehin6t1p6ko36chk70s1ejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:45.050" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1p6ko36chk70s1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:45.050" starttime="20200623 13:55:45.022"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:45.051" level="INFO">Running command './StoryManager story merge ehin6t1o6kr36c9n6gsjcjqo9lfl6mpb ehin6t1p6ko36chk70s1ejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:45.113" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...16ui6rh76olmrdi2hog41m8emm5v7gc3
New ID : ehin6t1g74qj6d9n64phejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:45.113" starttime="20200623 13:55:45.050"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 13:55:45.114" level="INFO">${idm} = New ID : ehin6t1g74qj6d9n64phejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:45.114" starttime="20200623 13:55:45.113"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 13:55:45.115" level="INFO">${idm} = ehin6t1g74qj6d9n64phejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:55:45.115" starttime="20200623 13:55:45.114"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:55:45.115" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:55:45.200" level="INFO">${stdout} = ehin6t1g70qjac1j6sq4m2g195dlcj8e		test
ehin6t1g74qj6d9n64phejgk5s6gu1oh		test
ehin6t1j6ks3edpo68q16f9ubpc2089v		test
ehin6t1k74s34e1o70qiukh19p55shgi		test
ehin6t1h60p30cpm68s4uno31gali4gd		test
ehin6...</msg>
<status status="PASS" endtime="20200623 13:55:45.200" starttime="20200623 13:55:45.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:45.201" starttime="20200623 13:55:45.200"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:45.203" starttime="20200623 13:55:45.202"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:55:45.204" starttime="20200623 13:55:45.203"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:45.205" critical="yes" starttime="20200623 13:55:44.837"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200623 13:55:45.208" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200623 13:55:45.208" level="INFO">1 directory.</msg>
<msg timestamp="20200623 13:55:45.208" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200623 13:55:45.208" starttime="20200623 13:55:45.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200623 13:55:45.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200623 13:55:45.210" starttime="20200623 13:55:45.209"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200623 13:55:45.216" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 13:55:45.216" starttime="20200623 13:55:45.210"></status>
</kw>
<status status="PASS" endtime="20200623 13:55:45.217" critical="yes" starttime="20200623 13:55:45.205"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200623 13:55:45.219" starttime="20200623 13:55:44.058"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="13">Critical Tests</stat>
<stat fail="0" pass="13">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="13">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
