<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200623 13:56:56.532" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.558" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.566" level="INFO">${stdout} = Story test created
ID : ehin6t1l6oojgcpn60s4m92k4c00q0p8</msg>
<status status="PASS" endtime="20200623 13:56:56.566" starttime="20200623 13:56:56.558"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:56:56.566" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200623 13:56:56.566" starttime="20200623 13:56:56.566"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.567" level="INFO">${id} = ID : ehin6t1l6oojgcpn60s4m92k4c00q0p8</msg>
<status status="PASS" endtime="20200623 13:56:56.567" starttime="20200623 13:56:56.566"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.567" level="INFO">${id} = ehin6t1l6oojgcpn60s4m92k4c00q0p8</msg>
<status status="PASS" endtime="20200623 13:56:56.567" starttime="20200623 13:56:56.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.567" starttime="20200623 13:56:56.567"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.568" level="INFO">Running command './StoryManager story show ehin6t1l6oojgcpn60s4m92k4c00q0p8 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.573" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-06-23T11:56:56Z",
    message: "Create new story test with ID ehin6t1l6oojgcpn60s4m92k4c00q0p8",
  },
  parent...</msg>
<status status="PASS" endtime="20200623 13:56:56.573" starttime="20200623 13:56:56.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.573" starttime="20200623 13:56:56.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.574" starttime="20200623 13:56:56.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.574" starttime="20200623 13:56:56.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.575" starttime="20200623 13:56:56.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.575" starttime="20200623 13:56:56.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.575" starttime="20200623 13:56:56.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.575" starttime="20200623 13:56:56.575"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.576" critical="yes" starttime="20200623 13:56:56.557"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.576" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.583" level="INFO">${stdout} = Story test created
ID : ehin6t1l6ssjie1h74rl61ht3s51ma83</msg>
<status status="PASS" endtime="20200623 13:56:56.583" starttime="20200623 13:56:56.576"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.583" level="INFO">${id} = ID : ehin6t1l6ssjie1h74rl61ht3s51ma83</msg>
<status status="PASS" endtime="20200623 13:56:56.583" starttime="20200623 13:56:56.583"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.584" level="INFO">${id} = ehin6t1l6ssjie1h74rl61ht3s51ma83</msg>
<status status="PASS" endtime="20200623 13:56:56.584" starttime="20200623 13:56:56.584"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 13:56:56.585" level="INFO">Running command './StoryManager story show ehin6t1l6ssjie1h74rl61ht3s51ma83.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.590" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200623 13:56:56.590" starttime="20200623 13:56:56.584"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.591" starttime="20200623 13:56:56.591"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.591" level="INFO">Running command './StoryManager story edit ehin6t1l6ssjie1h74rl61ht3s51ma83 -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.598" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1l6ssjie1h74rl61ht3s51ma83</msg>
<status status="PASS" endtime="20200623 13:56:56.598" starttime="20200623 13:56:56.591"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200623 13:56:56.598" level="INFO">Running command './StoryManager story show ehin6t1l6ssjie1h74rl61ht3s51ma83.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.603" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200623 13:56:56.603" starttime="20200623 13:56:56.598"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.604" starttime="20200623 13:56:56.603"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.604" critical="yes" starttime="20200623 13:56:56.576"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.605" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.611" level="INFO">${stdout} = Story test created
ID : ehin6t1m60s36e1p70om4khi156367a5</msg>
<status status="PASS" endtime="20200623 13:56:56.611" starttime="20200623 13:56:56.604"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.611" level="INFO">${id} = ID : ehin6t1m60s36e1p70om4khi156367a5</msg>
<status status="PASS" endtime="20200623 13:56:56.611" starttime="20200623 13:56:56.611"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.612" level="INFO">${id} = ehin6t1m60s36e1p70om4khi156367a5</msg>
<status status="PASS" endtime="20200623 13:56:56.612" starttime="20200623 13:56:56.611"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 13:56:56.612" level="INFO">Running command './StoryManager story show ehin6t1m60s36e1p70om4khi156367a5.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.617" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200623 13:56:56.617" starttime="20200623 13:56:56.612"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.618" starttime="20200623 13:56:56.618"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.618" level="INFO">Running command './StoryManager story edit ehin6t1m60s36e1p70om4khi156367a5 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.625" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1m60s36e1p70om4khi156367a5</msg>
<status status="PASS" endtime="20200623 13:56:56.625" starttime="20200623 13:56:56.618"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200623 13:56:56.626" level="INFO">Running command './StoryManager story show ehin6t1m60s36e1p70om4khi156367a5.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.631" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200623 13:56:56.631" starttime="20200623 13:56:56.626"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.631" starttime="20200623 13:56:56.631"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.632" critical="yes" starttime="20200623 13:56:56.604"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.632" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.638" level="INFO">${stdout} = Story test created
ID : ehin6t1m6cr30d9n6co1u7hg38kj822u</msg>
<status status="PASS" endtime="20200623 13:56:56.638" starttime="20200623 13:56:56.632"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.639" level="INFO">${id} = ID : ehin6t1m6cr30d9n6co1u7hg38kj822u</msg>
<status status="PASS" endtime="20200623 13:56:56.639" starttime="20200623 13:56:56.638"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.639" level="INFO">${id} = ehin6t1m6cr30d9n6co1u7hg38kj822u</msg>
<status status="PASS" endtime="20200623 13:56:56.639" starttime="20200623 13:56:56.639"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:56:56.639" level="INFO">Running command './StoryManager story show ehin6t1m6cr30d9n6co1u7hg38kj822u.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.644" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200623 13:56:56.644" starttime="20200623 13:56:56.639"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.645" starttime="20200623 13:56:56.644"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.645" level="INFO">Running command './StoryManager story edit ehin6t1m6cr30d9n6co1u7hg38kj822u -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.652" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1m6cr30d9n6co1u7hg38kj822u</msg>
<status status="PASS" endtime="20200623 13:56:56.652" starttime="20200623 13:56:56.645"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200623 13:56:56.653" level="INFO">Running command './StoryManager story show ehin6t1m6cr30d9n6co1u7hg38kj822u.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.658" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200623 13:56:56.658" starttime="20200623 13:56:56.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.658" starttime="20200623 13:56:56.658"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.658" critical="yes" starttime="20200623 13:56:56.632"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.659" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.665" level="INFO">${stdout} = Story test created
ID : ehin6t1m6op3edpp6sq24h9b6s2ku0o4</msg>
<status status="PASS" endtime="20200623 13:56:56.665" starttime="20200623 13:56:56.659"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.666" level="INFO">${id} = ID : ehin6t1m6op3edpp6sq24h9b6s2ku0o4</msg>
<status status="PASS" endtime="20200623 13:56:56.666" starttime="20200623 13:56:56.666"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.666" level="INFO">${id} = ehin6t1m6op3edpp6sq24h9b6s2ku0o4</msg>
<status status="PASS" endtime="20200623 13:56:56.667" starttime="20200623 13:56:56.666"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 13:56:56.667" level="INFO">Running command './StoryManager story show ehin6t1m6op3edpp6sq24h9b6s2ku0o4.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.672" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200623 13:56:56.672" starttime="20200623 13:56:56.667"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.673" starttime="20200623 13:56:56.672"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.673" level="INFO">Running command './StoryManager story close ehin6t1m6op3edpp6sq24h9b6s2ku0o4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.680" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200623 13:56:56.680" starttime="20200623 13:56:56.673"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200623 13:56:56.681" level="INFO">Running command './StoryManager story show ehin6t1m6op3edpp6sq24h9b6s2ku0o4.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.685" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200623 13:56:56.685" starttime="20200623 13:56:56.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.686" starttime="20200623 13:56:56.685"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.686" level="INFO">Running command './StoryManager story edit ehin6t1m6op3edpp6sq24h9b6s2ku0o4 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.692" level="INFO">${stdout} = The story ehin6t1m6op3edpp6sq24h9b6s2ku0o4 is close, you can't modify it</msg>
<status status="PASS" endtime="20200623 13:56:56.692" starttime="20200623 13:56:56.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.692" starttime="20200623 13:56:56.692"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.692" critical="yes" starttime="20200623 13:56:56.659"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.693" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.697" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200623 13:56:56.697" starttime="20200623 13:56:56.693"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.698" starttime="20200623 13:56:56.697"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.698" critical="yes" starttime="20200623 13:56:56.692"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.699" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.705" level="INFO">${stdout} = Story test created
ID : ehin6t1n60p3ad9n6gsiu4qk7s9kokp2</msg>
<status status="PASS" endtime="20200623 13:56:56.705" starttime="20200623 13:56:56.698"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.705" level="INFO">${id} = ID : ehin6t1n60p3ad9n6gsiu4qk7s9kokp2</msg>
<status status="PASS" endtime="20200623 13:56:56.705" starttime="20200623 13:56:56.705"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.705" level="INFO">${id} = ehin6t1n60p3ad9n6gsiu4qk7s9kokp2</msg>
<status status="PASS" endtime="20200623 13:56:56.706" starttime="20200623 13:56:56.705"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.706" level="INFO">Running command './StoryManager story Tadd ehin6t1n60p3ad9n6gsiu4qk7s9kokp2 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.716" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n60p3ad9n6gsiu4qk7s9kokp2</msg>
<status status="PASS" endtime="20200623 13:56:56.716" starttime="20200623 13:56:56.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.716" starttime="20200623 13:56:56.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.717" starttime="20200623 13:56:56.716"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.717" level="INFO">Running command './StoryManager story show ehin6t1n60p3ad9n6gsiu4qk7s9kokp2 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.722" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200623 13:56:56.722" starttime="20200623 13:56:56.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.723" starttime="20200623 13:56:56.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.723" starttime="20200623 13:56:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.723" starttime="20200623 13:56:56.723"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.723" critical="yes" starttime="20200623 13:56:56.698"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.724" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.731" level="INFO">${stdout} = Story test created
ID : ehin6t1n68s30c1o60s16b8o4hcjekqm</msg>
<status status="PASS" endtime="20200623 13:56:56.731" starttime="20200623 13:56:56.724"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.731" level="INFO">${id} = ID : ehin6t1n68s30c1o60s16b8o4hcjekqm</msg>
<status status="PASS" endtime="20200623 13:56:56.731" starttime="20200623 13:56:56.731"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.732" level="INFO">${id} = ehin6t1n68s30c1o60s16b8o4hcjekqm</msg>
<status status="PASS" endtime="20200623 13:56:56.732" starttime="20200623 13:56:56.731"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.732" level="INFO">Running command './StoryManager story Tadd ehin6t1n68s30c1o60s16b8o4hcjekqm task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.742" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n68s30c1o60s16b8o4hcjekqm</msg>
<status status="PASS" endtime="20200623 13:56:56.742" starttime="20200623 13:56:56.732"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.743" level="INFO">Running command './StoryManager story Tedit ehin6t1n68s30c1o60s16b8o4hcjekqm 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.754" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1n68s30c1o60s16b8o4hcjekqm</msg>
<status status="PASS" endtime="20200623 13:56:56.754" starttime="20200623 13:56:56.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.755" starttime="20200623 13:56:56.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.755" starttime="20200623 13:56:56.755"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.756" level="INFO">Running command './StoryManager story show ehin6t1n68s30c1o60s16b8o4hcjekqm -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.761" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200623 13:56:56.761" starttime="20200623 13:56:56.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.761" starttime="20200623 13:56:56.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.762" starttime="20200623 13:56:56.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.762" starttime="20200623 13:56:56.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.762" starttime="20200623 13:56:56.762"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.763" critical="yes" starttime="20200623 13:56:56.724"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.764" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.770" level="INFO">${stdout} = Story test created
ID : ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.770" starttime="20200623 13:56:56.763"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.770" level="INFO">${id} = ID : ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.771" starttime="20200623 13:56:56.770"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:56.771" level="INFO">${id} = ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.771" starttime="20200623 13:56:56.771"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.772" level="INFO">Running command './StoryManager story Tadd ehin6t1n6orj4chh60sgo99r204iaho6 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.783" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.783" starttime="20200623 13:56:56.771"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.783" level="INFO">Running command './StoryManager story Tadd ehin6t1n6orj4chh60sgo99r204iaho6 task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.795" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.795" starttime="20200623 13:56:56.783"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.795" level="INFO">Running command './StoryManager story Tedit ehin6t1n6orj4chh60sgo99r204iaho6 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.811" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1n6orj4chh60sgo99r204iaho6</msg>
<status status="PASS" endtime="20200623 13:56:56.811" starttime="20200623 13:56:56.795"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.811" level="INFO">Running command './StoryManager story Tsearch ehin6t1n6orj4chh60sgo99r204iaho6 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.818" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200623 13:56:56.818" starttime="20200623 13:56:56.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.819" starttime="20200623 13:56:56.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.819" starttime="20200623 13:56:56.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.819" starttime="20200623 13:56:56.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.820" starttime="20200623 13:56:56.819"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.820" starttime="20200623 13:56:56.820"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:56.820" critical="yes" starttime="20200623 13:56:56.763"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.821" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.829" level="INFO">${stdout} = Story test created
ID : ehin6t1o68qjad9l64pl6ggh68j4g5o3</msg>
<status status="PASS" endtime="20200623 13:56:56.829" starttime="20200623 13:56:56.821"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 13:56:56.829" level="INFO">${id1} = ID : ehin6t1o68qjad9l64pl6ggh68j4g5o3</msg>
<status status="PASS" endtime="20200623 13:56:56.829" starttime="20200623 13:56:56.829"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200623 13:56:56.830" level="INFO">${id1} = ehin6t1o68qjad9l64pl6ggh68j4g5o3</msg>
<status status="PASS" endtime="20200623 13:56:56.830" starttime="20200623 13:56:56.830"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.830" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.839" level="INFO">${stdout} = Story test created
ID : ehin6t1o6cqj0c1g6gqkgm8h3srkchos</msg>
<status status="PASS" endtime="20200623 13:56:56.839" starttime="20200623 13:56:56.830"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 13:56:56.839" level="INFO">${id2} = ID : ehin6t1o6cqj0c1g6gqkgm8h3srkchos</msg>
<status status="PASS" endtime="20200623 13:56:56.839" starttime="20200623 13:56:56.839"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200623 13:56:56.840" level="INFO">${id2} = ehin6t1o6cqj0c1g6gqkgm8h3srkchos</msg>
<status status="PASS" endtime="20200623 13:56:56.840" starttime="20200623 13:56:56.840"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.841" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.926" level="INFO">${stdout} = Story test created
ID : ehin6t1o6gqj0dpk68siuhat9t904n0m</msg>
<status status="PASS" endtime="20200623 13:56:56.926" starttime="20200623 13:56:56.840"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 13:56:56.927" level="INFO">${id3} = ID : ehin6t1o6gqj0dpk68siuhat9t904n0m</msg>
<status status="PASS" endtime="20200623 13:56:56.927" starttime="20200623 13:56:56.926"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200623 13:56:56.928" level="INFO">${id3} = ehin6t1o6gqj0dpk68siuhat9t904n0m</msg>
<status status="PASS" endtime="20200623 13:56:56.928" starttime="20200623 13:56:56.928"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:56.930" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:56.996" level="INFO">${stdout} = ehin6t1m6op3edpp6sq24h9b6s2ku0o4		test
ehin6t1n6orj4chh60sgo99r204iaho6		test
ehin6t1o68qjad9l64pl6ggh68j4g5o3		test
ehin6t1m6cr30d9n6co1u7hg38kj822u		new title
ehin6t1l6ssjie1h74rl61ht3s51ma83		test
...</msg>
<status status="PASS" endtime="20200623 13:56:56.997" starttime="20200623 13:56:56.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.998" starttime="20200623 13:56:56.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:56.999" starttime="20200623 13:56:56.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.001" starttime="20200623 13:56:57.000"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:57.001" critical="yes" starttime="20200623 13:56:56.820"></status>
</test>
<test id="s1-t11" name="Copy story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.004" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.067" level="INFO">${stdout} = Story test created
ID : ehin6t1g64rjidhj6gqighatahb006po</msg>
<status status="PASS" endtime="20200623 13:56:57.067" starttime="20200623 13:56:57.003"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:57.068" level="INFO">${id} = ID : ehin6t1g64rjidhj6gqighatahb006po</msg>
<status status="PASS" endtime="20200623 13:56:57.068" starttime="20200623 13:56:57.067"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:57.070" level="INFO">${id} = ehin6t1g64rjidhj6gqighatahb006po</msg>
<status status="PASS" endtime="20200623 13:56:57.070" starttime="20200623 13:56:57.069"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.071" level="INFO">Running command './StoryManager story copy ehin6t1g64rjidhj6gqighatahb006po Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.125" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1h64s34dho6gqhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.125" starttime="20200623 13:56:57.070"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:56:57.127" level="INFO">${idd} = Duplicate ID is : ehin6t1h64s34dho6gqhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.127" starttime="20200623 13:56:57.125"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:56:57.128" level="INFO">${idd} = ehin6t1h64s34dho6gqhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.128" starttime="20200623 13:56:57.127"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.129" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.204" level="INFO">${stdout} = ehin6t1m6op3edpp6sq24h9b6s2ku0o4		test
ehin6t1n6orj4chh60sgo99r204iaho6		test
ehin6t1o6cqj0c1g6gqkgm8h3srkchos		test
ehin6t1g64rjidhj6gqighatahb006po		test
ehin6t1l6oojgcpn60s4m92k4c00q0p8		test
ehin6...</msg>
<status status="PASS" endtime="20200623 13:56:57.204" starttime="20200623 13:56:57.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.206" starttime="20200623 13:56:57.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.207" starttime="20200623 13:56:57.206"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.209" level="INFO">Running command './StoryManager story show ehin6t1g64rjidhj6gqighatahb006po.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.241" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 13:56:57.241" starttime="20200623 13:56:57.208"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200623 13:56:57.243" level="INFO">Running command './StoryManager story show ehin6t1h64s34dho6gqhejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.301" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200623 13:56:57.302" starttime="20200623 13:56:57.242"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.303" starttime="20200623 13:56:57.302"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:57.304" critical="yes" starttime="20200623 13:56:57.002"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.308" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.381" level="INFO">${stdout} = Story test created
ID : ehin6t1j68q3ee1p6soi6eo43o0lk789</msg>
<status status="PASS" endtime="20200623 13:56:57.381" starttime="20200623 13:56:57.307"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:57.383" level="INFO">${id} = ID : ehin6t1j68q3ee1p6soi6eo43o0lk789</msg>
<status status="PASS" endtime="20200623 13:56:57.383" starttime="20200623 13:56:57.382"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200623 13:56:57.384" level="INFO">${id} = ehin6t1j68q3ee1p6soi6eo43o0lk789</msg>
<status status="PASS" endtime="20200623 13:56:57.385" starttime="20200623 13:56:57.383"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.387" level="INFO">Running command './StoryManager story copy ehin6t1j68q3ee1p6soi6eo43o0lk789 Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.436" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1k6co36e1i68shejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.436" starttime="20200623 13:56:57.385"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:56:57.438" level="INFO">${idd} = Duplicate ID is : ehin6t1k6co36e1i68shejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.438" starttime="20200623 13:56:57.437"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200623 13:56:57.439" level="INFO">${idd} = ehin6t1k6co36e1i68shejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.439" starttime="20200623 13:56:57.438"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.440" level="INFO">Running command './StoryManager story edit ehin6t1j68q3ee1p6soi6eo43o0lk789 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.498" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1j68q3ee1p6soi6eo43o0lk789</msg>
<status status="PASS" endtime="20200623 13:56:57.498" starttime="20200623 13:56:57.439"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.500" level="INFO">Running command './StoryManager story edit ehin6t1k6co36e1i68shejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.557" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1k6co36e1i68shejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.557" starttime="20200623 13:56:57.499"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.559" level="INFO">Running command './StoryManager story merge ehin6t1j68q3ee1p6soi6eo43o0lk789 ehin6t1k6co36e1i68shejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.608" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...k53cn25ng4ppbm99nrjruc52hjh52pef
New ID : ehin6t1l74ojce1p68r1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.608" starttime="20200623 13:56:57.558"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 13:56:57.609" level="INFO">${idm} = New ID : ehin6t1l74ojce1p68r1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.609" starttime="20200623 13:56:57.608"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200623 13:56:57.609" level="INFO">${idm} = ehin6t1l74ojce1p68r1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200623 13:56:57.610" starttime="20200623 13:56:57.609"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200623 13:56:57.610" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200623 13:56:57.668" level="INFO">${stdout} = ehin6t1h64s34dho6gqhejgk5s6gu1oh		test
ehin6t1m60s36e1p70om4khi156367a5		test
ehin6t1m6op3edpp6sq24h9b6s2ku0o4		test
ehin6t1n6orj4chh60sgo99r204iaho6		test
ehin6t1o6gqj0dpk68siuhat9t904n0m		test
ehin6...</msg>
<status status="PASS" endtime="20200623 13:56:57.668" starttime="20200623 13:56:57.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.669" starttime="20200623 13:56:57.669"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.670" starttime="20200623 13:56:57.669"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200623 13:56:57.670" starttime="20200623 13:56:57.670"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:57.671" critical="yes" starttime="20200623 13:56:57.305"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200623 13:56:57.672" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200623 13:56:57.673" level="INFO">1 directory.</msg>
<msg timestamp="20200623 13:56:57.673" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200623 13:56:57.673" starttime="20200623 13:56:57.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200623 13:56:57.673" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200623 13:56:57.674" starttime="20200623 13:56:57.673"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200623 13:56:57.677" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200623 13:56:57.677" starttime="20200623 13:56:57.674"></status>
</kw>
<status status="PASS" endtime="20200623 13:56:57.677" critical="yes" starttime="20200623 13:56:57.671"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200623 13:56:57.678" starttime="20200623 13:56:56.533"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="13">Critical Tests</stat>
<stat fail="0" pass="13">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="13">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
