<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200708 16:54:48.549" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.574" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.586" level="INFO">${stdout} = Story test created
ID : ehin6t1l6srjie1n64r283p170lj41g4</msg>
<status status="PASS" endtime="20200708 16:54:48.586" starttime="20200708 16:54:48.574"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:54:48.587" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200708 16:54:48.587" starttime="20200708 16:54:48.586"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.587" level="INFO">${id} = ID : ehin6t1l6srjie1n64r283p170lj41g4</msg>
<status status="PASS" endtime="20200708 16:54:48.587" starttime="20200708 16:54:48.587"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.587" level="INFO">${id} = ehin6t1l6srjie1n64r283p170lj41g4</msg>
<status status="PASS" endtime="20200708 16:54:48.587" starttime="20200708 16:54:48.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.588" starttime="20200708 16:54:48.588"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.588" level="INFO">Running command './StoryManager story show ehin6t1l6srjie1n64r283p170lj41g4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.593" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-07-08T14:54:48Z",
    message: "Create new story test with ID ehin6t1l6srjie1n64r283p170lj41g4",
  },
  parent...</msg>
<status status="PASS" endtime="20200708 16:54:48.593" starttime="20200708 16:54:48.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.594" starttime="20200708 16:54:48.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.594" starttime="20200708 16:54:48.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.594" starttime="20200708 16:54:48.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.595" starttime="20200708 16:54:48.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.595" starttime="20200708 16:54:48.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.595" starttime="20200708 16:54:48.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.596" starttime="20200708 16:54:48.595"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.596" critical="yes" starttime="20200708 16:54:48.574"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.597" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.602" level="INFO">${stdout} = Story test created
ID : ehin6t1m60o36c1m6splse22a0i5s38p</msg>
<status status="PASS" endtime="20200708 16:54:48.602" starttime="20200708 16:54:48.596"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.603" level="INFO">${id} = ID : ehin6t1m60o36c1m6splse22a0i5s38p</msg>
<status status="PASS" endtime="20200708 16:54:48.603" starttime="20200708 16:54:48.602"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.603" level="INFO">${id} = ehin6t1m60o36c1m6splse22a0i5s38p</msg>
<status status="PASS" endtime="20200708 16:54:48.603" starttime="20200708 16:54:48.603"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 16:54:48.604" level="INFO">Running command './StoryManager story show ehin6t1m60o36c1m6splse22a0i5s38p.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.608" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200708 16:54:48.608" starttime="20200708 16:54:48.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.609" starttime="20200708 16:54:48.608"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.609" level="INFO">Running command './StoryManager story edit ehin6t1m60o36c1m6splse22a0i5s38p -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.616" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1m60o36c1m6splse22a0i5s38p</msg>
<status status="PASS" endtime="20200708 16:54:48.616" starttime="20200708 16:54:48.609"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 16:54:48.617" level="INFO">Running command './StoryManager story show ehin6t1m60o36c1m6splse22a0i5s38p.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.622" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200708 16:54:48.622" starttime="20200708 16:54:48.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.622" starttime="20200708 16:54:48.622"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.622" critical="yes" starttime="20200708 16:54:48.596"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.623" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.629" level="INFO">${stdout} = Story test created
ID : ehin6t1m68r3ad1o74q4aj0k40a1s814</msg>
<status status="PASS" endtime="20200708 16:54:48.629" starttime="20200708 16:54:48.623"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.629" level="INFO">${id} = ID : ehin6t1m68r3ad1o74q4aj0k40a1s814</msg>
<status status="PASS" endtime="20200708 16:54:48.629" starttime="20200708 16:54:48.629"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.630" level="INFO">${id} = ehin6t1m68r3ad1o74q4aj0k40a1s814</msg>
<status status="PASS" endtime="20200708 16:54:48.630" starttime="20200708 16:54:48.630"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 16:54:48.630" level="INFO">Running command './StoryManager story show ehin6t1m68r3ad1o74q4aj0k40a1s814.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.635" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200708 16:54:48.635" starttime="20200708 16:54:48.630"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.636" starttime="20200708 16:54:48.635"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.636" level="INFO">Running command './StoryManager story edit ehin6t1m68r3ad1o74q4aj0k40a1s814 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.642" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1m68r3ad1o74q4aj0k40a1s814</msg>
<status status="PASS" endtime="20200708 16:54:48.642" starttime="20200708 16:54:48.636"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 16:54:48.643" level="INFO">Running command './StoryManager story show ehin6t1m68r3ad1o74q4aj0k40a1s814.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.648" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200708 16:54:48.648" starttime="20200708 16:54:48.643"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.649" starttime="20200708 16:54:48.648"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.649" critical="yes" starttime="20200708 16:54:48.622"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.650" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.655" level="INFO">${stdout} = Story test created
ID : ehin6t1m6kpj2c9j6srlefaj3o1ioc9c</msg>
<status status="PASS" endtime="20200708 16:54:48.655" starttime="20200708 16:54:48.649"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.656" level="INFO">${id} = ID : ehin6t1m6kpj2c9j6srlefaj3o1ioc9c</msg>
<status status="PASS" endtime="20200708 16:54:48.656" starttime="20200708 16:54:48.656"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.656" level="INFO">${id} = ehin6t1m6kpj2c9j6srlefaj3o1ioc9c</msg>
<status status="PASS" endtime="20200708 16:54:48.656" starttime="20200708 16:54:48.656"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:54:48.657" level="INFO">Running command './StoryManager story show ehin6t1m6kpj2c9j6srlefaj3o1ioc9c.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.661" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200708 16:54:48.661" starttime="20200708 16:54:48.656"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.662" starttime="20200708 16:54:48.662"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.662" level="INFO">Running command './StoryManager story edit ehin6t1m6kpj2c9j6srlefaj3o1ioc9c -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.669" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1m6kpj2c9j6srlefaj3o1ioc9c</msg>
<status status="PASS" endtime="20200708 16:54:48.669" starttime="20200708 16:54:48.662"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 16:54:48.669" level="INFO">Running command './StoryManager story show ehin6t1m6kpj2c9j6srlefaj3o1ioc9c.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.674" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200708 16:54:48.674" starttime="20200708 16:54:48.669"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.675" starttime="20200708 16:54:48.674"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.675" critical="yes" starttime="20200708 16:54:48.649"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.676" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.682" level="INFO">${stdout} = Story test created
ID : ehin6t1m6ssj6d1p64rh05r04scj419f</msg>
<status status="PASS" endtime="20200708 16:54:48.682" starttime="20200708 16:54:48.675"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.682" level="INFO">${id} = ID : ehin6t1m6ssj6d1p64rh05r04scj419f</msg>
<status status="PASS" endtime="20200708 16:54:48.682" starttime="20200708 16:54:48.682"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.682" level="INFO">${id} = ehin6t1m6ssj6d1p64rh05r04scj419f</msg>
<status status="PASS" endtime="20200708 16:54:48.682" starttime="20200708 16:54:48.682"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 16:54:48.683" level="INFO">Running command './StoryManager story show ehin6t1m6ssj6d1p64rh05r04scj419f.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.688" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200708 16:54:48.688" starttime="20200708 16:54:48.683"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.688" starttime="20200708 16:54:48.688"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.689" level="INFO">Running command './StoryManager story close ehin6t1m6ssj6d1p64rh05r04scj419f 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.695" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200708 16:54:48.695" starttime="20200708 16:54:48.688"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 16:54:48.696" level="INFO">Running command './StoryManager story show ehin6t1m6ssj6d1p64rh05r04scj419f.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.701" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200708 16:54:48.701" starttime="20200708 16:54:48.696"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.702" starttime="20200708 16:54:48.701"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.702" level="INFO">Running command './StoryManager story edit ehin6t1m6ssj6d1p64rh05r04scj419f -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.707" level="INFO">${stdout} = The story ehin6t1m6ssj6d1p64rh05r04scj419f is close, you can't modify it</msg>
<status status="PASS" endtime="20200708 16:54:48.707" starttime="20200708 16:54:48.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.708" starttime="20200708 16:54:48.707"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.708" critical="yes" starttime="20200708 16:54:48.675"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.709" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.713" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200708 16:54:48.713" starttime="20200708 16:54:48.708"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.713" starttime="20200708 16:54:48.713"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.714" critical="yes" starttime="20200708 16:54:48.708"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.714" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.720" level="INFO">${stdout} = Story test created
ID : ehin6t1n64s30c1k6sr140gjb0g1gfa4</msg>
<status status="PASS" endtime="20200708 16:54:48.720" starttime="20200708 16:54:48.714"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.721" level="INFO">${id} = ID : ehin6t1n64s30c1k6sr140gjb0g1gfa4</msg>
<status status="PASS" endtime="20200708 16:54:48.721" starttime="20200708 16:54:48.720"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.721" level="INFO">${id} = ehin6t1n64s30c1k6sr140gjb0g1gfa4</msg>
<status status="PASS" endtime="20200708 16:54:48.721" starttime="20200708 16:54:48.721"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.722" level="INFO">Running command './StoryManager story Tadd ehin6t1n64s30c1k6sr140gjb0g1gfa4 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.730" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n64s30c1k6sr140gjb0g1gfa4</msg>
<status status="PASS" endtime="20200708 16:54:48.731" starttime="20200708 16:54:48.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.731" starttime="20200708 16:54:48.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.732" starttime="20200708 16:54:48.731"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.732" level="INFO">Running command './StoryManager story show ehin6t1n64s30c1k6sr140gjb0g1gfa4 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.738" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200708 16:54:48.738" starttime="20200708 16:54:48.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.738" starttime="20200708 16:54:48.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.739" starttime="20200708 16:54:48.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.739" starttime="20200708 16:54:48.739"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.739" critical="yes" starttime="20200708 16:54:48.714"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.740" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.747" level="INFO">${stdout} = Story test created
ID : ehin6t1n6gq3achh6gsg46r179dh4ba5</msg>
<status status="PASS" endtime="20200708 16:54:48.747" starttime="20200708 16:54:48.740"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.748" level="INFO">${id} = ID : ehin6t1n6gq3achh6gsg46r179dh4ba5</msg>
<status status="PASS" endtime="20200708 16:54:48.748" starttime="20200708 16:54:48.748"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.748" level="INFO">${id} = ehin6t1n6gq3achh6gsg46r179dh4ba5</msg>
<status status="PASS" endtime="20200708 16:54:48.748" starttime="20200708 16:54:48.748"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.749" level="INFO">Running command './StoryManager story Tadd ehin6t1n6gq3achh6gsg46r179dh4ba5 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.761" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n6gq3achh6gsg46r179dh4ba5</msg>
<status status="PASS" endtime="20200708 16:54:48.761" starttime="20200708 16:54:48.749"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.762" level="INFO">Running command './StoryManager story Tedit ehin6t1n6gq3achh6gsg46r179dh4ba5 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.775" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1n6gq3achh6gsg46r179dh4ba5</msg>
<status status="PASS" endtime="20200708 16:54:48.775" starttime="20200708 16:54:48.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.775" starttime="20200708 16:54:48.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.776" starttime="20200708 16:54:48.775"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.776" level="INFO">Running command './StoryManager story show ehin6t1n6gq3achh6gsg46r179dh4ba5 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.782" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200708 16:54:48.782" starttime="20200708 16:54:48.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.783" starttime="20200708 16:54:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.783" starttime="20200708 16:54:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.784" starttime="20200708 16:54:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.784" starttime="20200708 16:54:48.784"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.784" critical="yes" starttime="20200708 16:54:48.739"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.785" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.792" level="INFO">${stdout} = Story test created
ID : ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.792" starttime="20200708 16:54:48.785"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.793" level="INFO">${id} = ID : ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.793" starttime="20200708 16:54:48.793"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.793" level="INFO">${id} = ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.793" starttime="20200708 16:54:48.793"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.794" level="INFO">Running command './StoryManager story Tadd ehin6t1n70sj6c1l64slqlii8h04aep8 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.806" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.806" starttime="20200708 16:54:48.793"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.807" level="INFO">Running command './StoryManager story Tadd ehin6t1n70sj6c1l64slqlii8h04aep8 task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.818" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.819" starttime="20200708 16:54:48.806"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.819" level="INFO">Running command './StoryManager story Tedit ehin6t1n70sj6c1l64slqlii8h04aep8 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.832" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1n70sj6c1l64slqlii8h04aep8</msg>
<status status="PASS" endtime="20200708 16:54:48.832" starttime="20200708 16:54:48.819"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.832" level="INFO">Running command './StoryManager story Tsearch ehin6t1n70sj6c1l64slqlii8h04aep8 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.838" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200708 16:54:48.838" starttime="20200708 16:54:48.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.838" starttime="20200708 16:54:48.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.838" starttime="20200708 16:54:48.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.839" starttime="20200708 16:54:48.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.839" starttime="20200708 16:54:48.839"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.839" starttime="20200708 16:54:48.839"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.839" critical="yes" starttime="20200708 16:54:48.784"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.840" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.847" level="INFO">${stdout} = Story test created
ID : ehin6t1o6gpjccho6orhk3iq1803qfip</msg>
<status status="PASS" endtime="20200708 16:54:48.847" starttime="20200708 16:54:48.840"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 16:54:48.848" level="INFO">${id1} = ID : ehin6t1o6gpjccho6orhk3iq1803qfip</msg>
<status status="PASS" endtime="20200708 16:54:48.848" starttime="20200708 16:54:48.847"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 16:54:48.848" level="INFO">${id1} = ehin6t1o6gpjccho6orhk3iq1803qfip</msg>
<status status="PASS" endtime="20200708 16:54:48.848" starttime="20200708 16:54:48.848"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.849" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.855" level="INFO">${stdout} = Story test created
ID : ehin6t1o6kp34e9p64qj4ahjbt21sioa</msg>
<status status="PASS" endtime="20200708 16:54:48.855" starttime="20200708 16:54:48.848"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 16:54:48.855" level="INFO">${id2} = ID : ehin6t1o6kp34e9p64qj4ahjbt21sioa</msg>
<status status="PASS" endtime="20200708 16:54:48.855" starttime="20200708 16:54:48.855"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 16:54:48.856" level="INFO">${id2} = ehin6t1o6kp34e9p64qj4ahjbt21sioa</msg>
<status status="PASS" endtime="20200708 16:54:48.856" starttime="20200708 16:54:48.856"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.856" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.863" level="INFO">${stdout} = Story test created
ID : ehin6t1o6ksjidho64s5qmqd0gd16fok</msg>
<status status="PASS" endtime="20200708 16:54:48.864" starttime="20200708 16:54:48.856"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 16:54:48.864" level="INFO">${id3} = ID : ehin6t1o6ksjidho64s5qmqd0gd16fok</msg>
<status status="PASS" endtime="20200708 16:54:48.864" starttime="20200708 16:54:48.864"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 16:54:48.865" level="INFO">${id3} = ehin6t1o6ksjidho64s5qmqd0gd16fok</msg>
<status status="PASS" endtime="20200708 16:54:48.865" starttime="20200708 16:54:48.864"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.865" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.882" level="INFO">${stdout} = ehin6t1m6kpj2c9j6srlefaj3o1ioc9c		new title
ehin6t1m6ssj6d1p64rh05r04scj419f		test
ehin6t1o6gpjccho6orhk3iq1803qfip		test
ehin6t1o6ksjidho64s5qmqd0gd16fok		test
ehin6t1l6srjie1n64r283p170lj41g4		test
...</msg>
<status status="PASS" endtime="20200708 16:54:48.882" starttime="20200708 16:54:48.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.882" starttime="20200708 16:54:48.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.883" starttime="20200708 16:54:48.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.883" starttime="20200708 16:54:48.883"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.884" critical="yes" starttime="20200708 16:54:48.839"></status>
</test>
<test id="s1-t11" name="Copy story duplicate">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.885" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.894" level="INFO">${stdout} = Story test created
ID : ehin6t1o74o30c9p6crhc31l7km2uk1k</msg>
<status status="PASS" endtime="20200708 16:54:48.894" starttime="20200708 16:54:48.885"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.895" level="INFO">${id} = ID : ehin6t1o74o30c9p6crhc31l7km2uk1k</msg>
<status status="PASS" endtime="20200708 16:54:48.895" starttime="20200708 16:54:48.894"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.895" level="INFO">${id} = ehin6t1o74o30c9p6crhc31l7km2uk1k</msg>
<status status="PASS" endtime="20200708 16:54:48.895" starttime="20200708 16:54:48.895"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.896" level="INFO">Running command './StoryManager story copy ehin6t1o74o30c9p6crhc31l7km2uk1k Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.905" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1p60p3achm6ks1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.905" starttime="20200708 16:54:48.895"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:54:48.906" level="INFO">${idd} = Duplicate ID is : ehin6t1p60p3achm6ks1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.906" starttime="20200708 16:54:48.905"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:54:48.906" level="INFO">${idd} = ehin6t1p60p3achm6ks1ejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.906" starttime="20200708 16:54:48.906"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.907" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.925" level="INFO">${stdout} = ehin6t1o74o30c9p6crhc31l7km2uk1k		test
ehin6t1m68r3ad1o74q4aj0k40a1s814		test
ehin6t1m6ssj6d1p64rh05r04scj419f		test
ehin6t1n70sj6c1l64slqlii8h04aep8		test
ehin6t1o6gpjccho6orhk3iq1803qfip		test
ehin6...</msg>
<status status="PASS" endtime="20200708 16:54:48.925" starttime="20200708 16:54:48.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.926" starttime="20200708 16:54:48.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.926" starttime="20200708 16:54:48.926"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.927" level="INFO">Running command './StoryManager story show ehin6t1o74o30c9p6crhc31l7km2uk1k.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.934" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 16:54:48.934" starttime="20200708 16:54:48.926"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200708 16:54:48.935" level="INFO">Running command './StoryManager story show ehin6t1p60p3achm6ks1ejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.942" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 16:54:48.942" starttime="20200708 16:54:48.934"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:48.942" starttime="20200708 16:54:48.942"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:48.943" critical="yes" starttime="20200708 16:54:48.884"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.944" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.953" level="INFO">${stdout} = Story test created
ID : ehin6t1p6gsj2e9i70qlu79s74gimhgu</msg>
<status status="PASS" endtime="20200708 16:54:48.953" starttime="20200708 16:54:48.944"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.954" level="INFO">${id} = ID : ehin6t1p6gsj2e9i70qlu79s74gimhgu</msg>
<status status="PASS" endtime="20200708 16:54:48.954" starttime="20200708 16:54:48.953"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:48.954" level="INFO">${id} = ehin6t1p6gsj2e9i70qlu79s74gimhgu</msg>
<status status="PASS" endtime="20200708 16:54:48.954" starttime="20200708 16:54:48.954"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.955" level="INFO">Running command './StoryManager story copy ehin6t1p6gsj2e9i70qlu79s74gimhgu Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.964" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1p6ooj6c9p6sohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.964" starttime="20200708 16:54:48.954"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:54:48.965" level="INFO">${idd} = Duplicate ID is : ehin6t1p6ooj6c9p6sohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.965" starttime="20200708 16:54:48.965"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 16:54:48.966" level="INFO">${idd} = ehin6t1p6ooj6c9p6sohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.966" starttime="20200708 16:54:48.965"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.967" level="INFO">Running command './StoryManager story edit ehin6t1p6gsj2e9i70qlu79s74gimhgu -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.979" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1p6gsj2e9i70qlu79s74gimhgu</msg>
<status status="PASS" endtime="20200708 16:54:48.979" starttime="20200708 16:54:48.966"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.980" level="INFO">Running command './StoryManager story edit ehin6t1p6ooj6c9p6sohejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:48.992" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1p6ooj6c9p6sohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:48.992" starttime="20200708 16:54:48.980"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:48.993" level="INFO">Running command './StoryManager story merge ehin6t1p6gsj2e9i70qlu79s74gimhgu ehin6t1p6ooj6c9p6sohejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.012" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...epl065dhqvq5mh03n239cml3hbm7o16s
New ID : ehin6t1p74sjgc1k6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:49.012" starttime="20200708 16:54:48.992"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 16:54:49.012" level="INFO">${idm} = New ID : ehin6t1p74sjgc1k6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:49.012" starttime="20200708 16:54:49.012"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 16:54:49.013" level="INFO">${idm} = ehin6t1p74sjgc1k6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 16:54:49.013" starttime="20200708 16:54:49.013"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.013" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.028" level="INFO">${stdout} = ehin6t1p60p3achm6ks1ejgk5s6gu1oh		test
ehin6t1p74sjgc1k6oohejgk5s6gu1oh		test
ehin6t1m60o36c1m6splse22a0i5s38p		test
ehin6t1m6kpj2c9j6srlefaj3o1ioc9c		new title
ehin6t1n6gq3achh6gsg46r179dh4ba5		test
...</msg>
<status status="PASS" endtime="20200708 16:54:49.028" starttime="20200708 16:54:49.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.029" starttime="20200708 16:54:49.028"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.029" starttime="20200708 16:54:49.029"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.029" starttime="20200708 16:54:49.029"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.029" critical="yes" starttime="20200708 16:54:48.943"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:54:49.030" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:54:49.030" level="INFO">1 directory.</msg>
<msg timestamp="20200708 16:54:49.030" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200708 16:54:49.030" starttime="20200708 16:54:49.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 16:54:49.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.031" starttime="20200708 16:54:49.031"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:54:49.033" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.033" starttime="20200708 16:54:49.031"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.033" critical="yes" starttime="20200708 16:54:49.030"></status>
</test>
<test id="s1-t14" name="SyncTest story">
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:54:49.034" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.034" starttime="20200708 16:54:49.034"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:54:49.035" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.035" starttime="20200708 16:54:49.034"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:54:49.036" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.036" starttime="20200708 16:54:49.035"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 16:54:49.060" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.060" starttime="20200708 16:54:49.037"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:54:49.061" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.061" starttime="20200708 16:54:49.060"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 16:54:49.080" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.080" starttime="20200708 16:54:49.061"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>create</arg>
<arg>test</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:54:49.081" level="INFO">Starting process:
StoryManager story create test</msg>
<msg timestamp="20200708 16:54:49.086" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.090" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.090" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.091" starttime="20200708 16:54:49.080"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:49.091" level="INFO">${id} = ID : ehin6t1g70s3ce9n6ks3g02v14gh83qt</msg>
<status status="PASS" endtime="20200708 16:54:49.091" starttime="20200708 16:54:49.091"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 16:54:49.092" level="INFO">${id} = ehin6t1g70s3ce9n6ks3g02v14gh83qt</msg>
<status status="PASS" endtime="20200708 16:54:49.092" starttime="20200708 16:54:49.092"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>copy</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:54:49.092" level="INFO">Starting process:
StoryManager story copy ehin6t1g70s3ce9n6ks3g02v14gh83qt ../Usb/Stories</msg>
<msg timestamp="20200708 16:54:49.097" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.102" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.102" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.102" starttime="20200708 16:54:49.092"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>1</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:54:49.103" level="INFO">Starting process:
StoryManager story edit ehin6t1g70s3ce9n6ks3g02v14gh83qt -e 1</msg>
<msg timestamp="20200708 16:54:49.108" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.114" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.114" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.114" starttime="20200708 16:54:49.103"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>2</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 16:54:49.115" level="INFO">Starting process:
StoryManager story edit ehin6t1g70s3ce9n6ks3g02v14gh83qt -e 2</msg>
<msg timestamp="20200708 16:54:49.119" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.124" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.125" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.125" starttime="20200708 16:54:49.114"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>sync</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>-l</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:54:49.126" level="INFO">Starting process:
StoryManager story sync ehin6t1g70s3ce9n6ks3g02v14gh83qt ../Usb/Stories -l</msg>
<msg timestamp="20200708 16:54:49.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.140" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.141" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.141" starttime="20200708 16:54:49.125"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 16:54:49.142" level="INFO">Starting process:
StoryManager story show ehin6t1g70s3ce9n6ks3g02v14gh83qt</msg>
<msg timestamp="20200708 16:54:49.147" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.151" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.151" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.151" starttime="20200708 16:54:49.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.152" starttime="20200708 16:54:49.152"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 16:54:49.153" level="INFO">Starting process:
StoryManager story show ehin6t1g70s3ce9n6ks3g02v14gh83qt</msg>
<msg timestamp="20200708 16:54:49.157" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 16:54:49.162" level="INFO">Process completed.</msg>
<msg timestamp="20200708 16:54:49.162" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.162" starttime="20200708 16:54:49.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultU.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.163" starttime="20200708 16:54:49.162"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.163" critical="yes" starttime="20200708 16:54:49.033"></status>
</test>
<test id="s1-t15" name="Remove db sync">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:54:49.164" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:54:49.164" level="INFO">2 directories.</msg>
<msg timestamp="20200708 16:54:49.164" level="INFO">${files} = 2</msg>
<status status="PASS" endtime="20200708 16:54:49.164" starttime="20200708 16:54:49.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200708 16:54:49.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:54:49.164" starttime="20200708 16:54:49.164"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:54:49.167" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.167" starttime="20200708 16:54:49.164"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:54:49.170" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:49.170" starttime="20200708 16:54:49.167"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.170" critical="yes" starttime="20200708 16:54:49.163"></status>
</test>
<test id="s1-t16" name="Random">
<kw type="for" name="${INDEX} IN RANGE [ 1 | 100 ]">
<kw type="foritem" name="${INDEX} = 1">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.171" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.177" level="INFO">${stdout} = Story test created
ID : ehin6t1h6sqj0e1n6os08nql6tc3kdi6</msg>
<status status="PASS" endtime="20200708 16:54:49.177" starttime="20200708 16:54:49.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.177" starttime="20200708 16:54:49.177"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.177" starttime="20200708 16:54:49.171"></status>
</kw>
<kw type="foritem" name="${INDEX} = 2">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.178" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.183" level="INFO">${stdout} = Story test created
ID : ehin6t1h70oj4dpm6kpled021lbj6mip</msg>
<status status="PASS" endtime="20200708 16:54:49.183" starttime="20200708 16:54:49.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.184" starttime="20200708 16:54:49.183"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.184" starttime="20200708 16:54:49.177"></status>
</kw>
<kw type="foritem" name="${INDEX} = 3">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.184" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.190" level="INFO">${stdout} = Story test created
ID : ehin6t1h70rjed1i6gr0ilo00544oh8l</msg>
<status status="PASS" endtime="20200708 16:54:49.190" starttime="20200708 16:54:49.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.190" starttime="20200708 16:54:49.190"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.190" starttime="20200708 16:54:49.184"></status>
</kw>
<kw type="foritem" name="${INDEX} = 4">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.191" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.197" level="INFO">${stdout} = Story test created
ID : ehin6t1h74q3gdhj6krk0ihh75eimi8o</msg>
<status status="PASS" endtime="20200708 16:54:49.197" starttime="20200708 16:54:49.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.197" starttime="20200708 16:54:49.197"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.197" starttime="20200708 16:54:49.190"></status>
</kw>
<kw type="foritem" name="${INDEX} = 5">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.198" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.204" level="INFO">${stdout} = Story test created
ID : ehin6t1i60oj8e1n74p10mps7gi3269k</msg>
<status status="PASS" endtime="20200708 16:54:49.204" starttime="20200708 16:54:49.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.204" starttime="20200708 16:54:49.204"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.204" starttime="20200708 16:54:49.198"></status>
</kw>
<kw type="foritem" name="${INDEX} = 6">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.205" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.210" level="INFO">${stdout} = Story test created
ID : ehin6t1i60rjidhk6grimagn3pci0c89</msg>
<status status="PASS" endtime="20200708 16:54:49.210" starttime="20200708 16:54:49.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.211" starttime="20200708 16:54:49.210"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.211" starttime="20200708 16:54:49.204"></status>
</kw>
<kw type="foritem" name="${INDEX} = 7">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.211" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.217" level="INFO">${stdout} = Story test created
ID : ehin6t1i64q3cd9n74pg650c2k5genqh</msg>
<status status="PASS" endtime="20200708 16:54:49.217" starttime="20200708 16:54:49.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.218" starttime="20200708 16:54:49.217"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.218" starttime="20200708 16:54:49.211"></status>
</kw>
<kw type="foritem" name="${INDEX} = 8">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.218" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.223" level="INFO">${stdout} = Story test created
ID : ehin6t1i68oj8c9k70sic4p325d12a1o</msg>
<status status="PASS" endtime="20200708 16:54:49.223" starttime="20200708 16:54:49.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.224" starttime="20200708 16:54:49.224"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.224" starttime="20200708 16:54:49.218"></status>
</kw>
<kw type="foritem" name="${INDEX} = 9">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.224" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.230" level="INFO">${stdout} = Story test created
ID : ehin6t1i68s30d1j64p48hal8calugh8</msg>
<status status="PASS" endtime="20200708 16:54:49.230" starttime="20200708 16:54:49.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.231" starttime="20200708 16:54:49.230"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.231" starttime="20200708 16:54:49.224"></status>
</kw>
<kw type="foritem" name="${INDEX} = 10">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.231" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.237" level="INFO">${stdout} = Story test created
ID : ehin6t1i6cq3ac9p74q40jps8gjjacq0</msg>
<status status="PASS" endtime="20200708 16:54:49.237" starttime="20200708 16:54:49.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.237" starttime="20200708 16:54:49.237"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.237" starttime="20200708 16:54:49.231"></status>
</kw>
<kw type="foritem" name="${INDEX} = 11">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.238" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.244" level="INFO">${stdout} = Story test created
ID : ehin6t1i6goj6e9o6sr1g5in3sj00e2p</msg>
<status status="PASS" endtime="20200708 16:54:49.244" starttime="20200708 16:54:49.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.244" starttime="20200708 16:54:49.244"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.244" starttime="20200708 16:54:49.237"></status>
</kw>
<kw type="foritem" name="${INDEX} = 12">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.244" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.250" level="INFO">${stdout} = Story test created
ID : ehin6t1i6grjidhp6oq1k2go7kglc62c</msg>
<status status="PASS" endtime="20200708 16:54:49.250" starttime="20200708 16:54:49.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.251" starttime="20200708 16:54:49.250"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.251" starttime="20200708 16:54:49.244"></status>
</kw>
<kw type="foritem" name="${INDEX} = 13">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.251" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.257" level="INFO">${stdout} = Story test created
ID : ehin6t1i6kq3cchm70oj032d8h53c3h0</msg>
<status status="PASS" endtime="20200708 16:54:49.257" starttime="20200708 16:54:49.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.257" starttime="20200708 16:54:49.257"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.257" starttime="20200708 16:54:49.251"></status>
</kw>
<kw type="foritem" name="${INDEX} = 14">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.258" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.264" level="INFO">${stdout} = Story test created
ID : ehin6t1i6ooj4e9l6koim6puaha500pv</msg>
<status status="PASS" endtime="20200708 16:54:49.264" starttime="20200708 16:54:49.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.264" starttime="20200708 16:54:49.264"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.264" starttime="20200708 16:54:49.257"></status>
</kw>
<kw type="foritem" name="${INDEX} = 15">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.265" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.271" level="INFO">${stdout} = Story test created
ID : ehin6t1i6os32cpn6ss0c81i8t1j68p8</msg>
<status status="PASS" endtime="20200708 16:54:49.271" starttime="20200708 16:54:49.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.271" starttime="20200708 16:54:49.271"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.271" starttime="20200708 16:54:49.264"></status>
</kw>
<kw type="foritem" name="${INDEX} = 16">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.272" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.278" level="INFO">${stdout} = Story test created
ID : ehin6t1i6sqj6dph6crg6l0m844iq0h4</msg>
<status status="PASS" endtime="20200708 16:54:49.278" starttime="20200708 16:54:49.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.279" starttime="20200708 16:54:49.278"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.279" starttime="20200708 16:54:49.272"></status>
</kw>
<kw type="foritem" name="${INDEX} = 17">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.279" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.285" level="INFO">${stdout} = Story test created
ID : ehin6t1i70p38d1l74qkel0u64skc10r</msg>
<status status="PASS" endtime="20200708 16:54:49.285" starttime="20200708 16:54:49.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.286" starttime="20200708 16:54:49.285"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.286" starttime="20200708 16:54:49.279"></status>
</kw>
<kw type="foritem" name="${INDEX} = 18">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.286" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.292" level="INFO">${stdout} = Story test created
ID : ehin6t1i70sjgd9n74oje60i1k1j0a2i</msg>
<status status="PASS" endtime="20200708 16:54:49.292" starttime="20200708 16:54:49.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.293" starttime="20200708 16:54:49.293"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.293" starttime="20200708 16:54:49.286"></status>
</kw>
<kw type="foritem" name="${INDEX} = 19">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.293" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.299" level="INFO">${stdout} = Story test created
ID : ehin6t1i74r3gcpm6oq520i06t1km48s</msg>
<status status="PASS" endtime="20200708 16:54:49.299" starttime="20200708 16:54:49.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.300" starttime="20200708 16:54:49.300"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.300" starttime="20200708 16:54:49.293"></status>
</kw>
<kw type="foritem" name="${INDEX} = 20">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.300" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.306" level="INFO">${stdout} = Story test created
ID : ehin6t1j60pjee1k6orhq7ar15cgai8u</msg>
<status status="PASS" endtime="20200708 16:54:49.306" starttime="20200708 16:54:49.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.307" starttime="20200708 16:54:49.306"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.307" starttime="20200708 16:54:49.300"></status>
</kw>
<kw type="foritem" name="${INDEX} = 21">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.307" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.313" level="INFO">${stdout} = Story test created
ID : ehin6t1j64o3gc9m6gq4k8hb580kacov</msg>
<status status="PASS" endtime="20200708 16:54:49.313" starttime="20200708 16:54:49.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.314" starttime="20200708 16:54:49.313"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.314" starttime="20200708 16:54:49.307"></status>
</kw>
<kw type="foritem" name="${INDEX} = 22">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.314" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.320" level="INFO">${stdout} = Story test created
ID : ehin6t1j64rjec1l74p362hsat13o7pl</msg>
<status status="PASS" endtime="20200708 16:54:49.320" starttime="20200708 16:54:49.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.321" starttime="20200708 16:54:49.321"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.321" starttime="20200708 16:54:49.314"></status>
</kw>
<kw type="foritem" name="${INDEX} = 23">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.321" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.327" level="INFO">${stdout} = Story test created
ID : ehin6t1j68q3ce1l6ssgifi95l9ge01k</msg>
<status status="PASS" endtime="20200708 16:54:49.327" starttime="20200708 16:54:49.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.328" starttime="20200708 16:54:49.328"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.328" starttime="20200708 16:54:49.321"></status>
</kw>
<kw type="foritem" name="${INDEX} = 24">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.328" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.336" level="INFO">${stdout} = Story test created
ID : ehin6t1j6cp3ae9g60r3ufhs9cv06802</msg>
<status status="PASS" endtime="20200708 16:54:49.336" starttime="20200708 16:54:49.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.336" starttime="20200708 16:54:49.336"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.336" starttime="20200708 16:54:49.328"></status>
</kw>
<kw type="foritem" name="${INDEX} = 25">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.336" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.343" level="INFO">${stdout} = Story test created
ID : ehin6t1j6csjge9n6oq12i9p5lh4kc2t</msg>
<status status="PASS" endtime="20200708 16:54:49.343" starttime="20200708 16:54:49.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.343" starttime="20200708 16:54:49.343"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.343" starttime="20200708 16:54:49.336"></status>
</kw>
<kw type="foritem" name="${INDEX} = 26">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.344" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.350" level="INFO">${stdout} = Story test created
ID : ehin6t1j6grj2dhh6ss4g5i5b8m4g8qr</msg>
<status status="PASS" endtime="20200708 16:54:49.350" starttime="20200708 16:54:49.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.351" starttime="20200708 16:54:49.350"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.351" starttime="20200708 16:54:49.343"></status>
</kw>
<kw type="foritem" name="${INDEX} = 27">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.351" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.357" level="INFO">${stdout} = Story test created
ID : ehin6t1j6kq38e9p6op4ik9e6l6hqj2l</msg>
<status status="PASS" endtime="20200708 16:54:49.357" starttime="20200708 16:54:49.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.358" starttime="20200708 16:54:49.357"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.358" starttime="20200708 16:54:49.351"></status>
</kw>
<kw type="foritem" name="${INDEX} = 28">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.358" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.365" level="INFO">${stdout} = Story test created
ID : ehin6t1j6oojcdhn64ohcd2uakvj6da4</msg>
<status status="PASS" endtime="20200708 16:54:49.365" starttime="20200708 16:54:49.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.365" starttime="20200708 16:54:49.365"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.365" starttime="20200708 16:54:49.358"></status>
</kw>
<kw type="foritem" name="${INDEX} = 29">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.365" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.372" level="INFO">${stdout} = Story test created
ID : ehin6t1j6os3ie1g6gpgiipj3gskeha6</msg>
<status status="PASS" endtime="20200708 16:54:49.372" starttime="20200708 16:54:49.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.372" starttime="20200708 16:54:49.372"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.372" starttime="20200708 16:54:49.365"></status>
</kw>
<kw type="foritem" name="${INDEX} = 30">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.373" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.379" level="INFO">${stdout} = Story test created
ID : ehin6t1j6sr34dhh6so0ii0d04hhmkhr</msg>
<status status="PASS" endtime="20200708 16:54:49.379" starttime="20200708 16:54:49.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.380" starttime="20200708 16:54:49.379"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.380" starttime="20200708 16:54:49.372"></status>
</kw>
<kw type="foritem" name="${INDEX} = 31">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.380" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.387" level="INFO">${stdout} = Story test created
ID : ehin6t1j70pjec1n74rks41c9l00qo9m</msg>
<status status="PASS" endtime="20200708 16:54:49.387" starttime="20200708 16:54:49.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.387" starttime="20200708 16:54:49.387"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.387" starttime="20200708 16:54:49.380"></status>
</kw>
<kw type="foritem" name="${INDEX} = 32">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.388" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.394" level="INFO">${stdout} = Story test created
ID : ehin6t1j74oj0dpo70p26e2u0cuksmqo</msg>
<status status="PASS" endtime="20200708 16:54:49.394" starttime="20200708 16:54:49.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.394" starttime="20200708 16:54:49.394"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.395" starttime="20200708 16:54:49.387"></status>
</kw>
<kw type="foritem" name="${INDEX} = 33">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.395" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.401" level="INFO">${stdout} = Story test created
ID : ehin6t1j74s38e1g74o562155l61snqm</msg>
<status status="PASS" endtime="20200708 16:54:49.401" starttime="20200708 16:54:49.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.402" starttime="20200708 16:54:49.402"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.402" starttime="20200708 16:54:49.395"></status>
</kw>
<kw type="foritem" name="${INDEX} = 34">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.402" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.409" level="INFO">${stdout} = Story test created
ID : ehin6t1k60qjgc1i6cqlchq83g95a30t</msg>
<status status="PASS" endtime="20200708 16:54:49.409" starttime="20200708 16:54:49.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.409" starttime="20200708 16:54:49.409"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.409" starttime="20200708 16:54:49.402"></status>
</kw>
<kw type="foritem" name="${INDEX} = 35">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.410" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.416" level="INFO">${stdout} = Story test created
ID : ehin6t1k64pj4d1k6srja3ag0kplil17</msg>
<status status="PASS" endtime="20200708 16:54:49.416" starttime="20200708 16:54:49.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.417" starttime="20200708 16:54:49.417"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.417" starttime="20200708 16:54:49.409"></status>
</kw>
<kw type="foritem" name="${INDEX} = 36">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.417" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.425" level="INFO">${stdout} = Story test created
ID : ehin6t1k68o3ie1l60p5aboq30hke9pj</msg>
<status status="PASS" endtime="20200708 16:54:49.425" starttime="20200708 16:54:49.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.425" starttime="20200708 16:54:49.425"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.425" starttime="20200708 16:54:49.417"></status>
</kw>
<kw type="foritem" name="${INDEX} = 37">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.425" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.432" level="INFO">${stdout} = Story test created
ID : ehin6t1k68sj0c9i74s2ijgj7hcjo69c</msg>
<status status="PASS" endtime="20200708 16:54:49.432" starttime="20200708 16:54:49.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.433" starttime="20200708 16:54:49.432"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.433" starttime="20200708 16:54:49.425"></status>
</kw>
<kw type="foritem" name="${INDEX} = 38">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.433" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.440" level="INFO">${stdout} = Story test created
ID : ehin6t1k6cr3cd1o64qiub22c1aj4mpp</msg>
<status status="PASS" endtime="20200708 16:54:49.440" starttime="20200708 16:54:49.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.440" starttime="20200708 16:54:49.440"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.440" starttime="20200708 16:54:49.433"></status>
</kw>
<kw type="foritem" name="${INDEX} = 39">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.441" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.448" level="INFO">${stdout} = Story test created
ID : ehin6t1k6gq38c9l74pi8bgaa16ika2e</msg>
<status status="PASS" endtime="20200708 16:54:49.448" starttime="20200708 16:54:49.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.448" starttime="20200708 16:54:49.448"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.448" starttime="20200708 16:54:49.440"></status>
</kw>
<kw type="foritem" name="${INDEX} = 40">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.449" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.456" level="INFO">${stdout} = Story test created
ID : ehin6t1k6kp32c1j68oiu7922oi1g6hj</msg>
<status status="PASS" endtime="20200708 16:54:49.456" starttime="20200708 16:54:49.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.456" starttime="20200708 16:54:49.456"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.456" starttime="20200708 16:54:49.448"></status>
</kw>
<kw type="foritem" name="${INDEX} = 41">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.456" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.464" level="INFO">${stdout} = Story test created
ID : ehin6t1k6ksjidpm64r3am2234qgqgqg</msg>
<status status="PASS" endtime="20200708 16:54:49.464" starttime="20200708 16:54:49.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.464" starttime="20200708 16:54:49.464"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.464" starttime="20200708 16:54:49.456"></status>
</kw>
<kw type="foritem" name="${INDEX} = 42">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.465" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.505" level="INFO">${stdout} = Story test created
ID : ehin6t1k6os36c1j64p1en9f14p4sn0r</msg>
<status status="PASS" endtime="20200708 16:54:49.505" starttime="20200708 16:54:49.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.507" starttime="20200708 16:54:49.506"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.507" starttime="20200708 16:54:49.464"></status>
</kw>
<kw type="foritem" name="${INDEX} = 43">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.508" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.566" level="INFO">${stdout} = Story test created
ID : ehin6t1l68oj6dpo6oqk2e306gi64a19</msg>
<status status="PASS" endtime="20200708 16:54:49.566" starttime="20200708 16:54:49.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.568" starttime="20200708 16:54:49.567"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.568" starttime="20200708 16:54:49.507"></status>
</kw>
<kw type="foritem" name="${INDEX} = 44">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.570" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.622" level="INFO">${stdout} = Story test created
ID : ehin6t1l70pjgd9g70o0ulb209d2m08j</msg>
<status status="PASS" endtime="20200708 16:54:49.623" starttime="20200708 16:54:49.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.624" starttime="20200708 16:54:49.623"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.624" starttime="20200708 16:54:49.568"></status>
</kw>
<kw type="foritem" name="${INDEX} = 45">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.626" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.672" level="INFO">${stdout} = Story test created
ID : ehin6t1m6go34e1l6sq54jhu4kq1aaa2</msg>
<status status="PASS" endtime="20200708 16:54:49.673" starttime="20200708 16:54:49.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.674" starttime="20200708 16:54:49.673"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.674" starttime="20200708 16:54:49.624"></status>
</kw>
<kw type="foritem" name="${INDEX} = 46">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.676" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.739" level="INFO">${stdout} = Story test created
ID : ehin6t1m70s3achg6cq2s6av982l48ah</msg>
<status status="PASS" endtime="20200708 16:54:49.739" starttime="20200708 16:54:49.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.740" starttime="20200708 16:54:49.740"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.741" starttime="20200708 16:54:49.674"></status>
</kw>
<kw type="foritem" name="${INDEX} = 47">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.742" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.800" level="INFO">${stdout} = Story test created
ID : ehin6t1n6kr3ce9j6krm02pt0cbj451s</msg>
<status status="PASS" endtime="20200708 16:54:49.800" starttime="20200708 16:54:49.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.801" starttime="20200708 16:54:49.800"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.801" starttime="20200708 16:54:49.741"></status>
</kw>
<kw type="foritem" name="${INDEX} = 48">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.803" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.854" level="INFO">${stdout} = Story test created
ID : ehin6t1o64r30c9p70rkcjqs50qlod85</msg>
<status status="PASS" endtime="20200708 16:54:49.854" starttime="20200708 16:54:49.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.855" starttime="20200708 16:54:49.854"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.855" starttime="20200708 16:54:49.801"></status>
</kw>
<kw type="foritem" name="${INDEX} = 49">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.857" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:49.937" level="INFO">${stdout} = Story test created
ID : ehin6t1o6os34d1k6orji6gm00n16n8l</msg>
<status status="PASS" endtime="20200708 16:54:49.937" starttime="20200708 16:54:49.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:49.939" starttime="20200708 16:54:49.938"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:49.939" starttime="20200708 16:54:49.855"></status>
</kw>
<kw type="foritem" name="${INDEX} = 50">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:49.942" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.003" level="INFO">${stdout} = Story test created
ID : ehin6t1p6kqjec1o6gs4u3o21cjki0o7</msg>
<status status="PASS" endtime="20200708 16:54:50.004" starttime="20200708 16:54:49.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.005" starttime="20200708 16:54:50.004"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.005" starttime="20200708 16:54:49.940"></status>
</kw>
<kw type="foritem" name="${INDEX} = 51">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.007" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.079" level="INFO">${stdout} = Story test created
ID : ehin6t1g64sj2c9l6gpgc2pp8sk0011m</msg>
<status status="PASS" endtime="20200708 16:54:50.079" starttime="20200708 16:54:50.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.081" starttime="20200708 16:54:50.080"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.081" starttime="20200708 16:54:50.005"></status>
</kw>
<kw type="foritem" name="${INDEX} = 52">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.082" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.154" level="INFO">${stdout} = Story test created
ID : ehin6t1g74r3gd1k74qk4c9o44jho1hs</msg>
<status status="PASS" endtime="20200708 16:54:50.154" starttime="20200708 16:54:50.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.155" starttime="20200708 16:54:50.155"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.155" starttime="20200708 16:54:50.081"></status>
</kw>
<kw type="foritem" name="${INDEX} = 53">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.157" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.214" level="INFO">${stdout} = Story test created
ID : ehin6t1h6soj2cpi70q3m62i7900ci0i</msg>
<status status="PASS" endtime="20200708 16:54:50.214" starttime="20200708 16:54:50.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.216" starttime="20200708 16:54:50.215"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.216" starttime="20200708 16:54:50.156"></status>
</kw>
<kw type="foritem" name="${INDEX} = 54">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.218" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.274" level="INFO">${stdout} = Story test created
ID : ehin6t1i68sjgc9g6oq2e39s9tfkidhs</msg>
<status status="PASS" endtime="20200708 16:54:50.274" starttime="20200708 16:54:50.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.275" starttime="20200708 16:54:50.274"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.275" starttime="20200708 16:54:50.216"></status>
</kw>
<kw type="foritem" name="${INDEX} = 55">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.277" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.331" level="INFO">${stdout} = Story test created
ID : ehin6t1i74p32cpl68qga29u9tg0qho0</msg>
<status status="PASS" endtime="20200708 16:54:50.331" starttime="20200708 16:54:50.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.332" starttime="20200708 16:54:50.331"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.332" starttime="20200708 16:54:50.275"></status>
</kw>
<kw type="foritem" name="${INDEX} = 56">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.333" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.377" level="INFO">${stdout} = Story test created
ID : ehin6t1j6go3cc9h6kpge6as2ok4g10l</msg>
<status status="PASS" endtime="20200708 16:54:50.377" starttime="20200708 16:54:50.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.378" starttime="20200708 16:54:50.378"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.378" starttime="20200708 16:54:50.332"></status>
</kw>
<kw type="foritem" name="${INDEX} = 57">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.380" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.436" level="INFO">${stdout} = Story test created
ID : ehin6t1j74pj4cpi64p3ug9b35e4ggo3</msg>
<status status="PASS" endtime="20200708 16:54:50.436" starttime="20200708 16:54:50.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.437" starttime="20200708 16:54:50.436"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.437" starttime="20200708 16:54:50.379"></status>
</kw>
<kw type="foritem" name="${INDEX} = 58">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.438" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.491" level="INFO">${stdout} = Story test created
ID : ehin6t1k6ko32c1i6cqki0234cki24io</msg>
<status status="PASS" endtime="20200708 16:54:50.491" starttime="20200708 16:54:50.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.492" starttime="20200708 16:54:50.491"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.492" starttime="20200708 16:54:50.437"></status>
</kw>
<kw type="foritem" name="${INDEX} = 59">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.492" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.523" level="INFO">${stdout} = Story test created
ID : ehin6t1k74r34c9h74qgumi50pbk2mqt</msg>
<status status="PASS" endtime="20200708 16:54:50.523" starttime="20200708 16:54:50.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.524" starttime="20200708 16:54:50.523"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.524" starttime="20200708 16:54:50.492"></status>
</kw>
<kw type="foritem" name="${INDEX} = 60">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.524" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.576" level="INFO">${stdout} = Story test created
ID : ehin6t1l68s34c1o6ooga81h0kv5g6it</msg>
<status status="PASS" endtime="20200708 16:54:50.576" starttime="20200708 16:54:50.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.577" starttime="20200708 16:54:50.576"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.577" starttime="20200708 16:54:50.524"></status>
</kw>
<kw type="foritem" name="${INDEX} = 61">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.579" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.648" level="INFO">${stdout} = Story test created
ID : ehin6t1l74pj4d1g64r2c68v2t8k4jqf</msg>
<status status="PASS" endtime="20200708 16:54:50.648" starttime="20200708 16:54:50.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.649" starttime="20200708 16:54:50.648"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.649" starttime="20200708 16:54:50.577"></status>
</kw>
<kw type="foritem" name="${INDEX} = 62">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.651" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.695" level="INFO">${stdout} = Story test created
ID : ehin6t1m6oqj8d1m70rg6916b965ek13</msg>
<status status="PASS" endtime="20200708 16:54:50.695" starttime="20200708 16:54:50.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.696" starttime="20200708 16:54:50.696"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.696" starttime="20200708 16:54:50.649"></status>
</kw>
<kw type="foritem" name="${INDEX} = 63">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.697" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.735" level="INFO">${stdout} = Story test created
ID : ehin6t1n60qj0c9p68r2ociu3gjie6ap</msg>
<status status="PASS" endtime="20200708 16:54:50.735" starttime="20200708 16:54:50.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.736" starttime="20200708 16:54:50.736"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.736" starttime="20200708 16:54:50.696"></status>
</kw>
<kw type="foritem" name="${INDEX} = 64">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.738" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.816" level="INFO">${stdout} = Story test created
ID : ehin6t1n6gr30dhh74rjsi1dbsg2c9ih</msg>
<status status="PASS" endtime="20200708 16:54:50.816" starttime="20200708 16:54:50.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.817" starttime="20200708 16:54:50.817"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.818" starttime="20200708 16:54:50.737"></status>
</kw>
<kw type="foritem" name="${INDEX} = 65">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.819" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.878" level="INFO">${stdout} = Story test created
ID : ehin6t1o6cp34e9p64qkk08m78d3q5aa</msg>
<status status="PASS" endtime="20200708 16:54:50.878" starttime="20200708 16:54:50.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.879" starttime="20200708 16:54:50.879"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.879" starttime="20200708 16:54:50.818"></status>
</kw>
<kw type="foritem" name="${INDEX} = 66">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.881" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.928" level="INFO">${stdout} = Story test created
ID : ehin6t1o70rjec9h74s4kapt5p1gc6i4</msg>
<status status="PASS" endtime="20200708 16:54:50.928" starttime="20200708 16:54:50.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.930" starttime="20200708 16:54:50.929"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.930" starttime="20200708 16:54:50.879"></status>
</kw>
<kw type="foritem" name="${INDEX} = 67">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.932" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:50.985" level="INFO">${stdout} = Story test created
ID : ehin6t1p6gpjcchl6cpl6a27009l83i7</msg>
<status status="PASS" endtime="20200708 16:54:50.985" starttime="20200708 16:54:50.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:50.986" starttime="20200708 16:54:50.985"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:50.986" starttime="20200708 16:54:50.930"></status>
</kw>
<kw type="foritem" name="${INDEX} = 68">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:50.987" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.053" level="INFO">${stdout} = Story test created
ID : ehin6t1p74r36d1i74rje10jbok2ggpe</msg>
<status status="PASS" endtime="20200708 16:54:51.053" starttime="20200708 16:54:50.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.055" starttime="20200708 16:54:51.054"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.055" starttime="20200708 16:54:50.986"></status>
</kw>
<kw type="foritem" name="${INDEX} = 69">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.056" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.122" level="INFO">${stdout} = Story test created
ID : ehin6t1g6os3ec9j6ksi4ea69hg6078a</msg>
<status status="PASS" endtime="20200708 16:54:51.123" starttime="20200708 16:54:51.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.124" starttime="20200708 16:54:51.123"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.124" starttime="20200708 16:54:51.055"></status>
</kw>
<kw type="foritem" name="${INDEX} = 70">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.126" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.160" level="INFO">${stdout} = Story test created
ID : ehin6t1h6cs34c1i6ssl6dol68mja9in</msg>
<status status="PASS" endtime="20200708 16:54:51.160" starttime="20200708 16:54:51.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.161" starttime="20200708 16:54:51.161"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.161" starttime="20200708 16:54:51.124"></status>
</kw>
<kw type="foritem" name="${INDEX} = 71">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.162" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.208" level="INFO">${stdout} = Story test created
ID : ehin6t1h6oqjedpm6os0ai1k21akc023</msg>
<status status="PASS" endtime="20200708 16:54:51.208" starttime="20200708 16:54:51.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.210" starttime="20200708 16:54:51.209"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.210" starttime="20200708 16:54:51.161"></status>
</kw>
<kw type="foritem" name="${INDEX} = 72">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.211" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.253" level="INFO">${stdout} = Story test created
ID : ehin6t1i68pjechi6osj4j0680l1a0ii</msg>
<status status="PASS" endtime="20200708 16:54:51.253" starttime="20200708 16:54:51.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.254" starttime="20200708 16:54:51.254"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.254" starttime="20200708 16:54:51.210"></status>
</kw>
<kw type="foritem" name="${INDEX} = 73">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.255" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.329" level="INFO">${stdout} = Story test created
ID : ehin6t1i6op3ae9h6gq5q2g97hh5cg28</msg>
<status status="PASS" endtime="20200708 16:54:51.329" starttime="20200708 16:54:51.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.330" starttime="20200708 16:54:51.329"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.330" starttime="20200708 16:54:51.254"></status>
</kw>
<kw type="foritem" name="${INDEX} = 74">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.332" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.417" level="INFO">${stdout} = Story test created
ID : ehin6t1j6grj8e1j70plofpd5g8gu3ic</msg>
<status status="PASS" endtime="20200708 16:54:51.417" starttime="20200708 16:54:51.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.418" starttime="20200708 16:54:51.417"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.418" starttime="20200708 16:54:51.331"></status>
</kw>
<kw type="foritem" name="${INDEX} = 75">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.420" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.478" level="INFO">${stdout} = Story test created
ID : ehin6t1k6cp30d9k60r2g0q2b8rhal1b</msg>
<status status="PASS" endtime="20200708 16:54:51.478" starttime="20200708 16:54:51.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.479" starttime="20200708 16:54:51.479"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.479" starttime="20200708 16:54:51.418"></status>
</kw>
<kw type="foritem" name="${INDEX} = 76">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.479" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.527" level="INFO">${stdout} = Story test created
ID : ehin6t1k70q3id9p6ss3uc9j90vi261l</msg>
<status status="PASS" endtime="20200708 16:54:51.527" starttime="20200708 16:54:51.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.528" starttime="20200708 16:54:51.527"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.528" starttime="20200708 16:54:51.479"></status>
</kw>
<kw type="foritem" name="${INDEX} = 77">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.530" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.590" level="INFO">${stdout} = Story test created
ID : ehin6t1l6gp30chg6op327ge3sjlcj0h</msg>
<status status="PASS" endtime="20200708 16:54:51.590" starttime="20200708 16:54:51.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.591" starttime="20200708 16:54:51.591"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.592" starttime="20200708 16:54:51.529"></status>
</kw>
<kw type="foritem" name="${INDEX} = 78">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.593" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.631" level="INFO">${stdout} = Story test created
ID : ehin6t1m60pjedpn68sgq5g35snk0l2s</msg>
<status status="PASS" endtime="20200708 16:54:51.631" starttime="20200708 16:54:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.632" starttime="20200708 16:54:51.631"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.632" starttime="20200708 16:54:51.592"></status>
</kw>
<kw type="foritem" name="${INDEX} = 79">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.633" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.691" level="INFO">${stdout} = Story test created
ID : ehin6t1m6cs32chh6sq08i8q0td1e51d</msg>
<status status="PASS" endtime="20200708 16:54:51.691" starttime="20200708 16:54:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.692" starttime="20200708 16:54:51.692"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.692" starttime="20200708 16:54:51.632"></status>
</kw>
<kw type="foritem" name="${INDEX} = 80">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.694" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.746" level="INFO">${stdout} = Story test created
ID : ehin6t1n60p30dpk6cpjso8k3cug8b2c</msg>
<status status="PASS" endtime="20200708 16:54:51.747" starttime="20200708 16:54:51.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.748" starttime="20200708 16:54:51.747"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.748" starttime="20200708 16:54:51.693"></status>
</kw>
<kw type="foritem" name="${INDEX} = 81">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.750" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.807" level="INFO">${stdout} = Story test created
ID : ehin6t1n6ksjgd9p6gsj0j95bt52qlip</msg>
<status status="PASS" endtime="20200708 16:54:51.807" starttime="20200708 16:54:51.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.809" starttime="20200708 16:54:51.808"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.809" starttime="20200708 16:54:51.748"></status>
</kw>
<kw type="foritem" name="${INDEX} = 82">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.810" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.909" level="INFO">${stdout} = Story test created
ID : ehin6t1o64sjgd1k60r06b2v842jq5qr</msg>
<status status="PASS" endtime="20200708 16:54:51.909" starttime="20200708 16:54:51.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.910" starttime="20200708 16:54:51.910"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.911" starttime="20200708 16:54:51.809"></status>
</kw>
<kw type="foritem" name="${INDEX} = 83">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.912" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:51.980" level="INFO">${stdout} = Story test created
ID : ehin6t1p68r3ic1l6krik1g6ag6gui2o</msg>
<status status="PASS" endtime="20200708 16:54:51.980" starttime="20200708 16:54:51.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:51.982" starttime="20200708 16:54:51.981"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:51.982" starttime="20200708 16:54:51.911"></status>
</kw>
<kw type="foritem" name="${INDEX} = 84">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:51.984" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.083" level="INFO">${stdout} = Story test created
ID : ehin6t1p74rjedpk64r4qc894t3lg2aj</msg>
<status status="PASS" endtime="20200708 16:54:52.083" starttime="20200708 16:54:51.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.085" starttime="20200708 16:54:52.084"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.085" starttime="20200708 16:54:51.982"></status>
</kw>
<kw type="foritem" name="${INDEX} = 85">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.087" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.165" level="INFO">${stdout} = Story test created
ID : ehin6t1h60oj6d9p6sq02b9jbh328d01</msg>
<status status="PASS" endtime="20200708 16:54:52.165" starttime="20200708 16:54:52.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.166" starttime="20200708 16:54:52.165"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.166" starttime="20200708 16:54:52.085"></status>
</kw>
<kw type="foritem" name="${INDEX} = 86">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.168" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.229" level="INFO">${stdout} = Story test created
ID : ehin6t1h70oj0cpj68r2a9qa342js11u</msg>
<status status="PASS" endtime="20200708 16:54:52.229" starttime="20200708 16:54:52.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.230" starttime="20200708 16:54:52.229"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.230" starttime="20200708 16:54:52.166"></status>
</kw>
<kw type="foritem" name="${INDEX} = 87">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.232" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.324" level="INFO">${stdout} = Story test created
ID : ehin6t1i6gojad1h64qka59h1sajk3pe</msg>
<status status="PASS" endtime="20200708 16:54:52.324" starttime="20200708 16:54:52.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.325" starttime="20200708 16:54:52.324"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.325" starttime="20200708 16:54:52.231"></status>
</kw>
<kw type="foritem" name="${INDEX} = 88">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.327" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.397" level="INFO">${stdout} = Story test created
ID : ehin6t1j6csjad9g6kslempt1ce60ch6</msg>
<status status="PASS" endtime="20200708 16:54:52.397" starttime="20200708 16:54:52.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.397" starttime="20200708 16:54:52.397"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.397" starttime="20200708 16:54:52.325"></status>
</kw>
<kw type="foritem" name="${INDEX} = 89">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.398" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.448" level="INFO">${stdout} = Story test created
ID : ehin6t1k60r3cchp60siqc1t6011ugb2</msg>
<status status="PASS" endtime="20200708 16:54:52.448" starttime="20200708 16:54:52.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.449" starttime="20200708 16:54:52.448"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.449" starttime="20200708 16:54:52.398"></status>
</kw>
<kw type="foritem" name="${INDEX} = 90">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.451" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.509" level="INFO">${stdout} = Story test created
ID : ehin6t1k6oo38cpm6cr0ci8ja4rjkm15</msg>
<status status="PASS" endtime="20200708 16:54:52.509" starttime="20200708 16:54:52.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.510" starttime="20200708 16:54:52.509"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.510" starttime="20200708 16:54:52.450"></status>
</kw>
<kw type="foritem" name="${INDEX} = 91">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.512" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.573" level="INFO">${stdout} = Story test created
ID : ehin6t1l68oj0dpg74g2i08834sm03ai</msg>
<status status="PASS" endtime="20200708 16:54:52.574" starttime="20200708 16:54:52.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.575" starttime="20200708 16:54:52.574"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.575" starttime="20200708 16:54:52.510"></status>
</kw>
<kw type="foritem" name="${INDEX} = 92">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.577" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.638" level="INFO">${stdout} = Story test created
ID : ehin6t1l70r36d1h68s5ujq0aci5ec8o</msg>
<status status="PASS" endtime="20200708 16:54:52.638" starttime="20200708 16:54:52.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.639" starttime="20200708 16:54:52.639"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.640" starttime="20200708 16:54:52.575"></status>
</kw>
<kw type="foritem" name="${INDEX} = 93">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.641" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.711" level="INFO">${stdout} = Story test created
ID : ehin6t1m6koj0e1g60q56c145ga54d8u</msg>
<status status="PASS" endtime="20200708 16:54:52.711" starttime="20200708 16:54:52.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.712" starttime="20200708 16:54:52.711"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.712" starttime="20200708 16:54:52.640"></status>
</kw>
<kw type="foritem" name="${INDEX} = 94">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.714" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.778" level="INFO">${stdout} = Story test created
ID : ehin6t1n68qj2c1p6gq00ngt0d9im11r</msg>
<status status="PASS" endtime="20200708 16:54:52.779" starttime="20200708 16:54:52.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.780" starttime="20200708 16:54:52.779"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.780" starttime="20200708 16:54:52.712"></status>
</kw>
<kw type="foritem" name="${INDEX} = 95">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.782" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.841" level="INFO">${stdout} = Story test created
ID : ehin6t1n74ojcdho6os447925k1kui27</msg>
<status status="PASS" endtime="20200708 16:54:52.841" starttime="20200708 16:54:52.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.842" starttime="20200708 16:54:52.841"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.842" starttime="20200708 16:54:52.780"></status>
</kw>
<kw type="foritem" name="${INDEX} = 96">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.843" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.923" level="INFO">${stdout} = Story test created
ID : ehin6t1o6ko3ce1p70rli5hjbc2j23qe</msg>
<status status="PASS" endtime="20200708 16:54:52.923" starttime="20200708 16:54:52.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.923" starttime="20200708 16:54:52.923"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.923" starttime="20200708 16:54:52.842"></status>
</kw>
<kw type="foritem" name="${INDEX} = 97">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.923" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.930" level="INFO">${stdout} = Story test created
ID : ehin6t1p68rj0e1k60q5a48671gg4dpp</msg>
<status status="PASS" endtime="20200708 16:54:52.930" starttime="20200708 16:54:52.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.930" starttime="20200708 16:54:52.930"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.930" starttime="20200708 16:54:52.923"></status>
</kw>
<kw type="foritem" name="${INDEX} = 98">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.930" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.937" level="INFO">${stdout} = Story test created
ID : ehin6t1p6cpjgd9o74r024872cfimm30</msg>
<status status="PASS" endtime="20200708 16:54:52.937" starttime="20200708 16:54:52.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.937" starttime="20200708 16:54:52.937"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.937" starttime="20200708 16:54:52.930"></status>
</kw>
<kw type="foritem" name="${INDEX} = 99">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.937" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.944" level="INFO">${stdout} = Story test created
ID : ehin6t1p6goj0dpi70o2qmi0bg0m2kot</msg>
<status status="PASS" endtime="20200708 16:54:52.944" starttime="20200708 16:54:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 16:54:52.944" starttime="20200708 16:54:52.944"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.944" starttime="20200708 16:54:52.937"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.944" starttime="20200708 16:54:49.171"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 16:54:52.945" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 16:54:52.971" level="INFO">${stdout} = ehin6t1o64sjgd1k60r06b2v842jq5qr		test
ehin6t1o6os34d1k6orji6gm00n16n8l		test
ehin6t1p6kqjec1o6gs4u3o21cjki0o7		test
ehin6t1h6cs34c1i6ssl6dol68mja9in		test
ehin6t1i74r3gcpm6oq520i06t1km48s		test
ehin6...</msg>
<status status="PASS" endtime="20200708 16:54:52.971" starttime="20200708 16:54:52.944"></status>
</kw>
<kw name="Get Line Count" library="String">
<doc>Returns and logs the number of lines in the given string.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<assign>
<var>${nbL}</var>
</assign>
<msg timestamp="20200708 16:54:52.971" level="INFO">99 lines</msg>
<msg timestamp="20200708 16:54:52.971" level="INFO">${nbL} = 99</msg>
<status status="PASS" endtime="20200708 16:54:52.971" starttime="20200708 16:54:52.971"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.972" critical="yes" starttime="20200708 16:54:49.171"></status>
</test>
<test id="s1-t17" name="Remove db random">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 16:54:52.972" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 16:54:52.972" level="INFO">1 directory.</msg>
<msg timestamp="20200708 16:54:52.972" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200708 16:54:52.972" starttime="20200708 16:54:52.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 16:54:52.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 16:54:52.973" starttime="20200708 16:54:52.973"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 16:54:52.976" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 16:54:52.976" starttime="20200708 16:54:52.973"></status>
</kw>
<status status="PASS" endtime="20200708 16:54:52.977" critical="yes" starttime="20200708 16:54:52.972"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200708 16:54:52.977" starttime="20200708 16:54:48.550"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="17">Critical Tests</stat>
<stat fail="0" pass="17">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="17">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
