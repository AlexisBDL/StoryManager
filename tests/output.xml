<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200708 10:51:59.407" generator="Robot 3.2.1 (Python 2.7.18rc1 on linux2)">
<suite source="/home/alexis/Documents/Thales/StoryManager/tests/tests.robot" id="s1" name="Tests">
<test id="s1-t1" name="Create story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.435" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.490" level="INFO">${stdout} = Story test created
ID : ehin6t1k70p34e9h6kr40dhdad8k6ar0</msg>
<status status="PASS" endtime="20200708 10:51:59.490" starttime="20200708 10:51:59.435"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 10:51:59.491" level="INFO">${title} = Story test created</msg>
<status status="PASS" endtime="20200708 10:51:59.491" starttime="20200708 10:51:59.490"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.491" level="INFO">${id} = ID : ehin6t1k70p34e9h6kr40dhdad8k6ar0</msg>
<status status="PASS" endtime="20200708 10:51:59.491" starttime="20200708 10:51:59.491"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.492" level="INFO">${id} = ehin6t1k70p34e9h6kr40dhdad8k6ar0</msg>
<status status="PASS" endtime="20200708 10:51:59.492" starttime="20200708 10:51:59.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Story test created</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.492" starttime="20200708 10:51:59.492"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.493" level="INFO">Running command './StoryManager story show ehin6t1k70p34e9h6kr40dhdad8k6ar0 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.501" level="INFO">${stdout} = struct Commit {
  meta: struct Meta {
    author: "Alexis Bredel --&gt; PO",
    date: "2020-07-08T08:51:59Z",
    message: "Create new story test with ID ehin6t1k70p34e9h6kr40dhdad8k6ar0",
  },
  parent...</msg>
<status status="PASS" endtime="20200708 10:51:59.501" starttime="20200708 10:51:59.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>value: struct Story {</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.501" starttime="20200708 10:51:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Author: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.501" starttime="20200708 10:51:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Description: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.502" starttime="20200708 10:51:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Effort: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.502" starttime="20200708 10:51:59.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Open",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.502" starttime="20200708 10:51:59.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Title: "test",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.502" starttime="20200708 10:51:59.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Tasks: [],</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.503" starttime="20200708 10:51:59.503"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.503" critical="yes" starttime="20200708 10:51:59.434"></status>
</test>
<test id="s1-t2" name="Edit story effort">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.504" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.510" level="INFO">${stdout} = Story test created
ID : ehin6t1l60s32dhg6oqhaf0n5ghkgap4</msg>
<status status="PASS" endtime="20200708 10:51:59.510" starttime="20200708 10:51:59.503"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.511" level="INFO">${id} = ID : ehin6t1l60s32dhg6oqhaf0n5ghkgap4</msg>
<status status="PASS" endtime="20200708 10:51:59.511" starttime="20200708 10:51:59.510"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.511" level="INFO">${id} = ehin6t1l60s32dhg6oqhaf0n5ghkgap4</msg>
<status status="PASS" endtime="20200708 10:51:59.511" starttime="20200708 10:51:59.511"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 10:51:59.512" level="INFO">Running command './StoryManager story show ehin6t1l60s32dhg6oqhaf0n5ghkgap4.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.517" level="INFO">${effort} = 0</msg>
<status status="PASS" endtime="20200708 10:51:59.517" starttime="20200708 10:51:59.511"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.517" starttime="20200708 10:51:59.517"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.518" level="INFO">Running command './StoryManager story edit ehin6t1l60s32dhg6oqhaf0n5ghkgap4 -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.527" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1l60s32dhg6oqhaf0n5ghkgap4</msg>
<status status="PASS" endtime="20200708 10:51:59.527" starttime="20200708 10:51:59.518"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Effort</arg>
</arguments>
<assign>
<var>${effort}</var>
</assign>
<msg timestamp="20200708 10:51:59.528" level="INFO">Running command './StoryManager story show ehin6t1l60s32dhg6oqhaf0n5ghkgap4.value.Effort 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.535" level="INFO">${effort} = 5</msg>
<status status="PASS" endtime="20200708 10:51:59.535" starttime="20200708 10:51:59.528"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${effort}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.536" starttime="20200708 10:51:59.535"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.536" critical="yes" starttime="20200708 10:51:59.503"></status>
</test>
<test id="s1-t3" name="Edit story description">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.537" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.545" level="INFO">${stdout} = Story test created
ID : ehin6t1l6gp38e1m60sgo1p39o5g6394</msg>
<status status="PASS" endtime="20200708 10:51:59.545" starttime="20200708 10:51:59.537"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.545" level="INFO">${id} = ID : ehin6t1l6gp38e1m60sgo1p39o5g6394</msg>
<status status="PASS" endtime="20200708 10:51:59.545" starttime="20200708 10:51:59.545"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.546" level="INFO">${id} = ehin6t1l6gp38e1m60sgo1p39o5g6394</msg>
<status status="PASS" endtime="20200708 10:51:59.546" starttime="20200708 10:51:59.545"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 10:51:59.546" level="INFO">Running command './StoryManager story show ehin6t1l6gp38e1m60sgo1p39o5g6394.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.551" level="INFO">${desc} = ""</msg>
<status status="PASS" endtime="20200708 10:51:59.551" starttime="20200708 10:51:59.546"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>""</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.551" starttime="20200708 10:51:59.551"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -d "new description"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.552" level="INFO">Running command './StoryManager story edit ehin6t1l6gp38e1m60sgo1p39o5g6394 -d "new description" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.558" level="INFO">${stdout} = Value description  was edited in story test
ID : ehin6t1l6gp38e1m60sgo1p39o5g6394</msg>
<status status="PASS" endtime="20200708 10:51:59.558" starttime="20200708 10:51:59.551"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Description</arg>
</arguments>
<assign>
<var>${desc}</var>
</assign>
<msg timestamp="20200708 10:51:59.559" level="INFO">Running command './StoryManager story show ehin6t1l6gp38e1m60sgo1p39o5g6394.value.Description 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.564" level="INFO">${desc} = "new description"</msg>
<status status="PASS" endtime="20200708 10:51:59.564" starttime="20200708 10:51:59.559"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${desc}</arg>
<arg>"new description"</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.564" starttime="20200708 10:51:59.564"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.564" critical="yes" starttime="20200708 10:51:59.536"></status>
</test>
<test id="s1-t4" name="Edit story title">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.565" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.571" level="INFO">${stdout} = Story test created
ID : ehin6t1l6os3ed9l74p0eh1m0o6l0i9a</msg>
<status status="PASS" endtime="20200708 10:51:59.571" starttime="20200708 10:51:59.565"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.571" level="INFO">${id} = ID : ehin6t1l6os3ed9l74p0eh1m0o6l0i9a</msg>
<status status="PASS" endtime="20200708 10:51:59.571" starttime="20200708 10:51:59.571"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.572" level="INFO">${id} = ehin6t1l6os3ed9l74p0eh1m0o6l0i9a</msg>
<status status="PASS" endtime="20200708 10:51:59.572" starttime="20200708 10:51:59.571"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 10:51:59.572" level="INFO">Running command './StoryManager story show ehin6t1l6os3ed9l74p0eh1m0o6l0i9a.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.577" level="INFO">${title} = "test"</msg>
<status status="PASS" endtime="20200708 10:51:59.577" starttime="20200708 10:51:59.572"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"test"</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.578" starttime="20200708 10:51:59.578"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -t "new title"</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.578" level="INFO">Running command './StoryManager story edit ehin6t1l6os3ed9l74p0eh1m0o6l0i9a -t "new title" 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.586" level="INFO">${stdout} = Value title  was edited in story test
ID : ehin6t1l6os3ed9l74p0eh1m0o6l0i9a</msg>
<status status="PASS" endtime="20200708 10:51:59.586" starttime="20200708 10:51:59.578"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.Title</arg>
</arguments>
<assign>
<var>${title}</var>
</assign>
<msg timestamp="20200708 10:51:59.587" level="INFO">Running command './StoryManager story show ehin6t1l6os3ed9l74p0eh1m0o6l0i9a.value.Title 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.592" level="INFO">${title} = "new title"</msg>
<status status="PASS" endtime="20200708 10:51:59.593" starttime="20200708 10:51:59.586"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${title}</arg>
<arg>"new title"</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.593" starttime="20200708 10:51:59.593"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.594" critical="yes" starttime="20200708 10:51:59.564"></status>
</test>
<test id="s1-t5" name="Close story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.595" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.602" level="INFO">${stdout} = Story test created
ID : ehin6t1l74sjad1h6grkmdpj5t4562h7</msg>
<status status="PASS" endtime="20200708 10:51:59.602" starttime="20200708 10:51:59.595"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.603" level="INFO">${id} = ID : ehin6t1l74sjad1h6grkmdpj5t4562h7</msg>
<status status="PASS" endtime="20200708 10:51:59.603" starttime="20200708 10:51:59.602"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.603" level="INFO">${id} = ehin6t1l74sjad1h6grkmdpj5t4562h7</msg>
<status status="PASS" endtime="20200708 10:51:59.603" starttime="20200708 10:51:59.603"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 10:51:59.604" level="INFO">Running command './StoryManager story show ehin6t1l74sjad1h6grkmdpj5t4562h7.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.609" level="INFO">${state} = "Open"</msg>
<status status="PASS" endtime="20200708 10:51:59.610" starttime="20200708 10:51:59.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Open"</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.610" starttime="20200708 10:51:59.610"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story close ${id}</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.611" level="INFO">Running command './StoryManager story close ehin6t1l74sjad1h6grkmdpj5t4562h7 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.619" level="INFO">${stdout} = Story closed</msg>
<status status="PASS" endtime="20200708 10:51:59.619" starttime="20200708 10:51:59.610"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value.State</arg>
</arguments>
<assign>
<var>${state}</var>
</assign>
<msg timestamp="20200708 10:51:59.620" level="INFO">Running command './StoryManager story show ehin6t1l74sjad1h6grkmdpj5t4562h7.value.State 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.626" level="INFO">${state} = "Close"</msg>
<status status="PASS" endtime="20200708 10:51:59.627" starttime="20200708 10:51:59.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${state}</arg>
<arg>"Close"</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.627" starttime="20200708 10:51:59.627"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.628" level="INFO">Running command './StoryManager story edit ehin6t1l74sjad1h6grkmdpj5t4562h7 -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.634" level="INFO">${stdout} = The story ehin6t1l74sjad1h6grkmdpj5t4562h7 is close, you can't modify it</msg>
<status status="PASS" endtime="20200708 10:51:59.634" starttime="20200708 10:51:59.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>The story ${id} is close</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.634" starttime="20200708 10:51:59.634"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.634" critical="yes" starttime="20200708 10:51:59.594"></status>
</test>
<test id="s1-t6" name="User">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager user</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.635" level="INFO">Running command './StoryManager user 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.640" level="INFO">${stdout} = Alexis Bredel --&gt; PO</msg>
<status status="PASS" endtime="20200708 10:51:59.640" starttime="20200708 10:51:59.635"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Alexis Bredel --&gt; PO</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.641" starttime="20200708 10:51:59.640"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.641" critical="yes" starttime="20200708 10:51:59.634"></status>
</test>
<test id="s1-t7" name="Add task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.642" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.649" level="INFO">${stdout} = Story test created
ID : ehin6t1m6gr32d9k6kpggno425dloa2o</msg>
<status status="PASS" endtime="20200708 10:51:59.649" starttime="20200708 10:51:59.641"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.650" level="INFO">${id} = ID : ehin6t1m6gr32d9k6kpggno425dloa2o</msg>
<status status="PASS" endtime="20200708 10:51:59.650" starttime="20200708 10:51:59.649"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.650" level="INFO">${id} = ehin6t1m6gr32d9k6kpggno425dloa2o</msg>
<status status="PASS" endtime="20200708 10:51:59.650" starttime="20200708 10:51:59.650"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.651" level="INFO">Running command './StoryManager story Tadd ehin6t1m6gr32d9k6kpggno425dloa2o task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.664" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1m6gr32d9k6kpggno425dloa2o</msg>
<status status="PASS" endtime="20200708 10:51:59.664" starttime="20200708 10:51:59.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task task (0) added in story</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.664" starttime="20200708 10:51:59.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.665" starttime="20200708 10:51:59.665"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.665" level="INFO">Running command './StoryManager story show ehin6t1m6gr32d9k6kpggno425dloa2o -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.671" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "",
  },
]</msg>
<status status="PASS" endtime="20200708 10:51:59.671" starttime="20200708 10:51:59.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.672" starttime="20200708 10:51:59.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.672" starttime="20200708 10:51:59.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.672" starttime="20200708 10:51:59.672"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.673" critical="yes" starttime="20200708 10:51:59.641"></status>
</test>
<test id="s1-t8" name="Edit task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.674" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.681" level="INFO">${stdout} = Story test created
ID : ehin6t1m6srjie1m6ksli12e80g0ogq5</msg>
<status status="PASS" endtime="20200708 10:51:59.681" starttime="20200708 10:51:59.673"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.681" level="INFO">${id} = ID : ehin6t1m6srjie1m6ksli12e80g0ogq5</msg>
<status status="PASS" endtime="20200708 10:51:59.681" starttime="20200708 10:51:59.681"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.682" level="INFO">${id} = ehin6t1m6srjie1m6ksli12e80g0ogq5</msg>
<status status="PASS" endtime="20200708 10:51:59.682" starttime="20200708 10:51:59.681"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.682" level="INFO">Running command './StoryManager story Tadd ehin6t1m6srjie1m6ksli12e80g0ogq5 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.693" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1m6srjie1m6ksli12e80g0ogq5</msg>
<status status="PASS" endtime="20200708 10:51:59.693" starttime="20200708 10:51:59.682"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 0 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.694" level="INFO">Running command './StoryManager story Tedit ehin6t1m6srjie1m6ksli12e80g0ogq5 0 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.707" level="INFO">${stdout} = Task 0 edited in story test
ID : ehin6t1m6srjie1m6ksli12e80g0ogq5</msg>
<status status="PASS" endtime="20200708 10:51:59.707" starttime="20200708 10:51:59.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Task 0 edited in story test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.707" starttime="20200708 10:51:59.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID : ${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.708" starttime="20200708 10:51:59.707"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id} -t</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.708" level="INFO">Running command './StoryManager story show ehin6t1m6srjie1m6ksli12e80g0ogq5 -t 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.714" level="INFO">${stdout} = [
  struct Task {
    Goal: "task",
    ID: 0,
    Maker: "Alexis Bredel --&gt; PO",
    State: "Complete",
  },
]</msg>
<status status="PASS" endtime="20200708 10:51:59.714" starttime="20200708 10:51:59.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.715" starttime="20200708 10:51:59.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.715" starttime="20200708 10:51:59.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.716" starttime="20200708 10:51:59.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.716" starttime="20200708 10:51:59.716"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.716" critical="yes" starttime="20200708 10:51:59.673"></status>
</test>
<test id="s1-t9" name="Search task">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.717" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.724" level="INFO">${stdout} = Story test created
ID : ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.724" starttime="20200708 10:51:59.717"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.725" level="INFO">${id} = ID : ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.725" starttime="20200708 10:51:59.725"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.725" level="INFO">${id} = ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.725" starttime="20200708 10:51:59.725"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.726" level="INFO">Running command './StoryManager story Tadd ehin6t1n68oj6dhn6sr10n9q8gm2q2a7 task 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.737" level="INFO">${stdout} = Task task (0) added in story test
ID : ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.737" starttime="20200708 10:51:59.726"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tadd ${id} task2</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.738" level="INFO">Running command './StoryManager story Tadd ehin6t1n68oj6dhn6sr10n9q8gm2q2a7 task2 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.749" level="INFO">${stdout} = Task task2 (1) added in story test
ID : ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.750" starttime="20200708 10:51:59.737"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tedit ${id} 1 -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.750" level="INFO">Running command './StoryManager story Tedit ehin6t1n68oj6dhn6sr10n9q8gm2q2a7 1 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.763" level="INFO">${stdout} = Task 1 edited in story test
ID : ehin6t1n68oj6dhn6sr10n9q8gm2q2a7</msg>
<status status="PASS" endtime="20200708 10:51:59.763" starttime="20200708 10:51:59.750"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story Tsearch ${id} -s Complete</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.763" level="INFO">Running command './StoryManager story Tsearch ehin6t1n68oj6dhn6sr10n9q8gm2q2a7 -s Complete 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.768" level="INFO">${stdout} = struct Task {
  Goal: "task2",
  ID: 1,
  Maker: "Alexis Bredel --&gt; PO",
  State: "Complete",
}</msg>
<status status="PASS" endtime="20200708 10:51:59.768" starttime="20200708 10:51:59.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Goal: "task2",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.769" starttime="20200708 10:51:59.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 1,</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.769" starttime="20200708 10:51:59.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>Maker: "Alexis Bredel --&gt; PO",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.769" starttime="20200708 10:51:59.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>State: "Complete",</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.769" starttime="20200708 10:51:59.769"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>ID: 0,</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.770" starttime="20200708 10:51:59.770"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.770" critical="yes" starttime="20200708 10:51:59.716"></status>
</test>
<test id="s1-t10" name="List story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.771" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.777" level="INFO">${stdout} = Story test created
ID : ehin6t1n6sq38e1j6gp26goj1kk0qei8</msg>
<status status="PASS" endtime="20200708 10:51:59.777" starttime="20200708 10:51:59.770"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 10:51:59.777" level="INFO">${id1} = ID : ehin6t1n6sq38e1j6gp26goj1kk0qei8</msg>
<status status="PASS" endtime="20200708 10:51:59.777" starttime="20200708 10:51:59.777"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id1}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id1}</var>
</assign>
<msg timestamp="20200708 10:51:59.778" level="INFO">${id1} = ehin6t1n6sq38e1j6gp26goj1kk0qei8</msg>
<status status="PASS" endtime="20200708 10:51:59.778" starttime="20200708 10:51:59.778"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.778" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.784" level="INFO">${stdout} = Story test created
ID : ehin6t1n70ojed1n6crm2iqnb1bgcc0p</msg>
<status status="PASS" endtime="20200708 10:51:59.784" starttime="20200708 10:51:59.778"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 10:51:59.785" level="INFO">${id2} = ID : ehin6t1n70ojed1n6crm2iqnb1bgcc0p</msg>
<status status="PASS" endtime="20200708 10:51:59.785" starttime="20200708 10:51:59.784"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id2}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id2}</var>
</assign>
<msg timestamp="20200708 10:51:59.785" level="INFO">${id2} = ehin6t1n70ojed1n6crm2iqnb1bgcc0p</msg>
<status status="PASS" endtime="20200708 10:51:59.785" starttime="20200708 10:51:59.785"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.785" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.826" level="INFO">${stdout} = Story test created
ID : ehin6t1n70s3gd9h6or1s88g5884qm8i</msg>
<status status="PASS" endtime="20200708 10:51:59.826" starttime="20200708 10:51:59.785"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 10:51:59.828" level="INFO">${id3} = ID : ehin6t1n70s3gd9h6or1s88g5884qm8i</msg>
<status status="PASS" endtime="20200708 10:51:59.828" starttime="20200708 10:51:59.827"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id3}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id3}</var>
</assign>
<msg timestamp="20200708 10:51:59.829" level="INFO">${id3} = ehin6t1n70s3gd9h6or1s88g5884qm8i</msg>
<status status="PASS" endtime="20200708 10:51:59.829" starttime="20200708 10:51:59.828"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.831" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.914" level="INFO">${stdout} = ehin6t1l6os3ed9l74p0eh1m0o6l0i9a		new title
ehin6t1m6srjie1m6ksli12e80g0ogq5		test
ehin6t1n68oj6dhn6sr10n9q8gm2q2a7		test
ehin6t1n6sq38e1j6gp26goj1kk0qei8		test
ehin6t1n70s3gd9h6or1s88g5884qm8i		test
...</msg>
<status status="PASS" endtime="20200708 10:51:59.914" starttime="20200708 10:51:59.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id1}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.915" starttime="20200708 10:51:59.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id2}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.917" starttime="20200708 10:51:59.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id3}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:51:59.918" starttime="20200708 10:51:59.917"></status>
</kw>
<status status="PASS" endtime="20200708 10:51:59.919" critical="yes" starttime="20200708 10:51:59.770"></status>
</test>
<test id="s1-t11" name="Copy story duplicate">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.922" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:51:59.976" level="INFO">${stdout} = Story test created
ID : ehin6t1p6cs32c9p6co569i1ac3lsbou</msg>
<status status="PASS" endtime="20200708 10:51:59.976" starttime="20200708 10:51:59.921"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.978" level="INFO">${id} = ID : ehin6t1p6cs32c9p6co569i1ac3lsbou</msg>
<status status="PASS" endtime="20200708 10:51:59.978" starttime="20200708 10:51:59.977"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:51:59.979" level="INFO">${id} = ehin6t1p6cs32c9p6co569i1ac3lsbou</msg>
<status status="PASS" endtime="20200708 10:51:59.979" starttime="20200708 10:51:59.978"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:51:59.981" level="INFO">Running command './StoryManager story copy ehin6t1p6cs32c9p6co569i1ac3lsbou Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.032" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1g68q3edpm6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.032" starttime="20200708 10:51:59.980"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 10:52:00.035" level="INFO">${idd} = Duplicate ID is : ehin6t1g68q3edpm6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.035" starttime="20200708 10:52:00.033"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 10:52:00.037" level="INFO">${idd} = ehin6t1g68q3edpm6oohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.037" starttime="20200708 10:52:00.036"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.039" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.114" level="INFO">${stdout} = ehin6t1n70ojed1n6crm2iqnb1bgcc0p		test
ehin6t1g68q3edpm6oohejgk5s6gu1oh		test
ehin6t1l6gp38e1m60sgo1p39o5g6394		test
ehin6t1l6os3ed9l74p0eh1m0o6l0i9a		new title
ehin6t1l74sjad1h6grkmdpj5t4562h7		test
...</msg>
<status status="PASS" endtime="20200708 10:52:00.114" starttime="20200708 10:52:00.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.116" starttime="20200708 10:52:00.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.117" starttime="20200708 10:52:00.116"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${id}.value</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.119" level="INFO">Running command './StoryManager story show ehin6t1p6cs32c9p6co569i1ac3lsbou.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.180" level="INFO">${stdout} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 10:52:00.180" starttime="20200708 10:52:00.118"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story show ${idd}.value</arg>
</arguments>
<assign>
<var>${stdoutd}</var>
</assign>
<msg timestamp="20200708 10:52:00.182" level="INFO">Running command './StoryManager story show ehin6t1g68q3edpm6oohejgk5s6gu1oh.value 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.240" level="INFO">${stdoutd} = struct Story {
  Author: "Alexis Bredel --&gt; PO",
  Description: "",
  Effort: 0,
  State: "Open",
  Tasks: [],
  Title: "test",
}</msg>
<status status="PASS" endtime="20200708 10:52:00.240" starttime="20200708 10:52:00.180"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${stdoutd}</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.242" starttime="20200708 10:52:00.240"></status>
</kw>
<status status="PASS" endtime="20200708 10:52:00.242" critical="yes" starttime="20200708 10:51:59.920"></status>
</test>
<test id="s1-t12" name="Merge story">
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story create test</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.246" level="INFO">Running command './StoryManager story create test 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.301" level="INFO">${stdout} = Story test created
ID : ehin6t1i6oo32dpj6orgobola16m0i1j</msg>
<status status="PASS" endtime="20200708 10:52:00.301" starttime="20200708 10:52:00.245"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:52:00.303" level="INFO">${id} = ID : ehin6t1i6oo32dpj6orgobola16m0i1j</msg>
<status status="PASS" endtime="20200708 10:52:00.303" starttime="20200708 10:52:00.302"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:52:00.304" level="INFO">${id} = ehin6t1i6oo32dpj6orgobola16m0i1j</msg>
<status status="PASS" endtime="20200708 10:52:00.304" starttime="20200708 10:52:00.303"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story copy ${id} Stories -d</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.306" level="INFO">Running command './StoryManager story copy ehin6t1i6oo32dpj6orgobola16m0i1j Stories -d 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.365" level="INFO">${stdout} = All chunks already exist at destination! Created new dataset Stories.
Duplicate ID is : ehin6t1j6krj4d1n74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.365" starttime="20200708 10:52:00.305"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 10:52:00.366" level="INFO">${idd} = Duplicate ID is : ehin6t1j6krj4d1n74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.367" starttime="20200708 10:52:00.365"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idd}</arg>
<arg>18</arg>
</arguments>
<assign>
<var>${idd}</var>
</assign>
<msg timestamp="20200708 10:52:00.368" level="INFO">${idd} = ehin6t1j6krj4d1n74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.368" starttime="20200708 10:52:00.367"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${id} -e 4</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.370" level="INFO">Running command './StoryManager story edit ehin6t1i6oo32dpj6orgobola16m0i1j -e 4 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.423" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1i6oo32dpj6orgobola16m0i1j</msg>
<status status="PASS" endtime="20200708 10:52:00.424" starttime="20200708 10:52:00.368"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story edit ${idd} -e 5</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.425" level="INFO">Running command './StoryManager story edit ehin6t1j6krj4d1n74ohejgk5s6gu1oh -e 5 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.465" level="INFO">${stdout} = Value effort  was edited in story test
ID : ehin6t1j6krj4d1n74ohejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.466" starttime="20200708 10:52:00.424"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager story merge ${id} ${idd} -l</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.466" level="INFO">Running command './StoryManager story merge ehin6t1i6oo32dpj6orgobola16m0i1j ehin6t1j6krj4d1n74ohejgk5s6gu1oh -l 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.518" level="INFO">${stdout} = [2KSyncing - 50.00% (0 B/s)[2KDone - Synced 0 B in 0s (0 B/s)
[2KApplied 1 changes...4q89ud1hlnssdjm0nb7vmcepnivd80ak
New ID : ehin6t1l60sjachm6crhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.518" starttime="20200708 10:52:00.466"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 10:52:00.518" level="INFO">${idm} = New ID : ehin6t1l60sjachm6crhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.518" starttime="20200708 10:52:00.518"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${idm}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${idm}</var>
</assign>
<msg timestamp="20200708 10:52:00.519" level="INFO">${idm} = ehin6t1l60sjachm6crhejgk5s6gu1oh</msg>
<status status="PASS" endtime="20200708 10:52:00.519" starttime="20200708 10:52:00.519"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>./StoryManager list</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200708 10:52:00.519" level="INFO">Running command './StoryManager list 2&gt;&amp;1'.</msg>
<msg timestamp="20200708 10:52:00.596" level="INFO">${stdout} = ehin6t1n70ojed1n6crm2iqnb1bgcc0p		test
ehin6t1p6cs32c9p6co569i1ac3lsbou		test
ehin6t1l60s32dhg6oqhaf0n5ghkgap4		test
ehin6t1l60sjachm6crhejgk5s6gu1oh		test
ehin6t1l6os3ed9l74p0eh1m0o6l0i9a		new title
...</msg>
<status status="PASS" endtime="20200708 10:52:00.596" starttime="20200708 10:52:00.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idm}</arg>
<arg>test</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.597" starttime="20200708 10:52:00.597"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${id}</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.598" starttime="20200708 10:52:00.598"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${stdout}</arg>
<arg>${idd}</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.599" starttime="20200708 10:52:00.598"></status>
</kw>
<status status="PASS" endtime="20200708 10:52:00.599" critical="yes" starttime="20200708 10:52:00.243"></status>
</test>
<test id="s1-t13" name="Remove db and no more db">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 10:52:00.600" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 10:52:00.601" level="INFO">1 directory.</msg>
<msg timestamp="20200708 10:52:00.601" level="INFO">${files} = 1</msg>
<status status="PASS" endtime="20200708 10:52:00.601" starttime="20200708 10:52:00.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200708 10:52:00.602" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.602" starttime="20200708 10:52:00.601"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Stories</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 10:52:00.605" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Stories"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Stories&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.605" starttime="20200708 10:52:00.602"></status>
</kw>
<status status="PASS" endtime="20200708 10:52:00.606" critical="yes" starttime="20200708 10:52:00.599"></status>
</test>
<test id="s1-t14" name="SyncTest story">
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 10:52:00.607" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.607" starttime="20200708 10:52:00.607"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 10:52:00.608" html="yes" level="INFO">Created directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.608" starttime="20200708 10:52:00.607"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 10:52:00.609" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.609" starttime="20200708 10:52:00.608"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Local</arg>
</arguments>
<msg timestamp="20200708 10:52:00.639" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.639" starttime="20200708 10:52:00.609"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>.dbconfig</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 10:52:00.640" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/.dbconfig&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/.dbconfig&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.640" starttime="20200708 10:52:00.639"></status>
</kw>
<kw name="Copy File" library="OperatingSystem">
<doc>Copies the source file into the destination.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>Usb</arg>
</arguments>
<msg timestamp="20200708 10:52:00.656" html="yes" level="INFO">Copied file from '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/StoryManager&lt;/a&gt;' to '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb/StoryManager&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.656" starttime="20200708 10:52:00.640"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>create</arg>
<arg>test</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 10:52:00.657" level="INFO">Starting process:
StoryManager story create test</msg>
<msg timestamp="20200708 10:52:00.659" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.663" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.664" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.664" starttime="20200708 10:52:00.656"></status>
</kw>
<kw name="Get Line" library="String">
<doc>Returns the specified line from the given ``string``.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:52:00.665" level="INFO">${id} = ID : ehin6t1m6oojgchi6cs2oghl6srgqbo3</msg>
<status status="PASS" endtime="20200708 10:52:00.665" starttime="20200708 10:52:00.664"></status>
</kw>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${id}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20200708 10:52:00.665" level="INFO">${id} = ehin6t1m6oojgchi6cs2oghl6srgqbo3</msg>
<status status="PASS" endtime="20200708 10:52:00.665" starttime="20200708 10:52:00.665"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>copy</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 10:52:00.665" level="INFO">Starting process:
StoryManager story copy ehin6t1m6oojgchi6cs2oghl6srgqbo3 ../Usb/Stories</msg>
<msg timestamp="20200708 10:52:00.667" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.672" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.672" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.672" starttime="20200708 10:52:00.665"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>1</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 10:52:00.673" level="INFO">Starting process:
StoryManager story edit ehin6t1m6oojgchi6cs2oghl6srgqbo3 -e 1</msg>
<msg timestamp="20200708 10:52:00.675" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.680" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.680" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.680" starttime="20200708 10:52:00.672"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>edit</arg>
<arg>${id}</arg>
<arg>-e</arg>
<arg>2</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 10:52:00.681" level="INFO">Starting process:
StoryManager story edit ehin6t1m6oojgchi6cs2oghl6srgqbo3 -e 2</msg>
<msg timestamp="20200708 10:52:00.683" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.688" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.688" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.688" starttime="20200708 10:52:00.680"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>sync</arg>
<arg>${id}</arg>
<arg>../Usb/Stories</arg>
<arg>-l</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 10:52:00.689" level="INFO">Starting process:
StoryManager story sync ehin6t1m6oojgchi6cs2oghl6srgqbo3 ../Usb/Stories -l</msg>
<msg timestamp="20200708 10:52:00.691" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.701" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.701" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.701" starttime="20200708 10:52:00.688"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
</arguments>
<assign>
<var>${resultL}</var>
</assign>
<msg timestamp="20200708 10:52:00.702" level="INFO">Starting process:
StoryManager story show ehin6t1m6oojgchi6cs2oghl6srgqbo3</msg>
<msg timestamp="20200708 10:52:00.704" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.707" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.708" level="INFO">${resultL} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.708" starttime="20200708 10:52:00.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultL.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.709" starttime="20200708 10:52:00.708"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>StoryManager</arg>
<arg>story</arg>
<arg>show</arg>
<arg>${id}</arg>
<arg>cwd=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>env:PATH=/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
</arguments>
<assign>
<var>${resultU}</var>
</assign>
<msg timestamp="20200708 10:52:00.709" level="INFO">Starting process:
StoryManager story show ehin6t1m6oojgchi6cs2oghl6srgqbo3</msg>
<msg timestamp="20200708 10:52:00.711" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20200708 10:52:00.715" level="INFO">Process completed.</msg>
<msg timestamp="20200708 10:52:00.715" level="INFO">${resultU} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.715" starttime="20200708 10:52:00.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resultU.stdout}</arg>
<arg>Effort: 1</arg>
</arguments>
<status status="PASS" endtime="20200708 10:52:00.716" starttime="20200708 10:52:00.715"></status>
</kw>
<status status="PASS" endtime="20200708 10:52:00.716" critical="yes" starttime="20200708 10:52:00.606"></status>
</test>
<test id="s1-t15" name="Remove db sync">
<kw name="Count Directories In Directory" library="OperatingSystem">
<doc>Wrapper for `Count Items In Directory` returning only directory count.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests</arg>
</arguments>
<assign>
<var>${files}</var>
</assign>
<msg timestamp="20200708 10:52:00.717" html="yes" level="INFO">Listing contents of directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests"&gt;/home/alexis/Documents/Thales/StoryManager/tests&lt;/a&gt;'.</msg>
<msg timestamp="20200708 10:52:00.717" level="INFO">2 directories.</msg>
<msg timestamp="20200708 10:52:00.717" level="INFO">${files} = 2</msg>
<status status="PASS" endtime="20200708 10:52:00.717" starttime="20200708 10:52:00.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${files}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200708 10:52:00.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200708 10:52:00.717" starttime="20200708 10:52:00.717"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Local</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 10:52:00.720" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Local"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Local&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.720" starttime="20200708 10:52:00.717"></status>
</kw>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>/home/alexis/Documents/Thales/StoryManager/tests/Usb</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20200708 10:52:00.723" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/alexis/Documents/Thales/StoryManager/tests/Usb"&gt;/home/alexis/Documents/Thales/StoryManager/tests/Usb&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20200708 10:52:00.723" starttime="20200708 10:52:00.720"></status>
</kw>
<status status="PASS" endtime="20200708 10:52:00.723" critical="yes" starttime="20200708 10:52:00.716"></status>
</test>
<doc>Tests of StoryManager commands</doc>
<status status="PASS" endtime="20200708 10:52:00.724" starttime="20200708 10:51:59.408"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="15">Critical Tests</stat>
<stat fail="0" pass="15">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="15">Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
